	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.3r1 Build 19041558 SN 09003382"
	.compiler_invocation	"ctc --dep-file=0_Src\\0_AppSw\\Tricore\\Main\\.ASCLIN_LIN_Master.o.d --fp-model=c,l,f,z,n,r,S,T -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --iso=99 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Asclin\\Asc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Ccu6\\Icu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmBc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Ccu6\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Ccu6\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Ccu6\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Ccu6\\TimerWithTrigger -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Ccu6\\TPwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Convctrl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Dma\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Dma\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Dts\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Dts\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Ebu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSpansion -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Ebu\\BFlashSt -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Ebu\\Dram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Ebu\\Sram -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Ebu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Edsadc\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Edsadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Emem\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Eray\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Eray\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Evadc\\Adc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Evadc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Fce\\Crc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Fce\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Flash\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Gpt12\\IncrEnc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Gpt12\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Gtm\\Atom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Gtm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\In -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Gtm\\Tim\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Dtm_PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Pwm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\PwmHl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Gtm\\Tom\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Gtm\\Trig -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Hspdm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Hspdm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Hssl\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Hssl\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\I2c\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\I2c\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Iom\\Driver -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Iom\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Iom\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Msc\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Msc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Mtu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Pms\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Psi5\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Psi5\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Psi5s\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Psi5s\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiMaster -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Qspi\\SpiSlave -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Qspi\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Rif\\Rif -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Rif\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Sdmmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Emmc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Sd -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Sdmmc\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Sent\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Sent\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Smu\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Smu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Spu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Spu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Asclin\\Spi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Asclin\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Geth\\Eth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Geth\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Scu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\0_AppSw\\Config -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\0_AppSw\\Config\\Common -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw\\_Utilities -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw\\If\\Ccu6If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw\\SysSe\\Bsp -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw\\SysSe\\Comm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw\\SysSe\\General -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw\\SysSe\\Math -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw\\SysSe\\Time -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\2_CDrv -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\_Build -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\_Lib\\DataHandling -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\_Lib\\InternalMux -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\_Reg -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Asclin -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Can\\Can -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Can\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Ccu6 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Convctrl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Cpu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Cpu\\CStart -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Cpu\\Irq -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Cpu\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Cpu\\Trap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Dma -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Dts -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Edsadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Emem -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Eray -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Evadc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Fce -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Flash -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Geth -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Gpt12 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Gtm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Hssl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\I2c -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Iom -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Msc -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Mtu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Pms -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Port -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Port\\Io -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Port\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Psi5 -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Psi5s -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Qspi -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Scu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Sent -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Smu -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Src -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Src\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Stm -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Stm\\Std -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Stm\\Timer -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\0_AppSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\0_AppSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\0_AppSw\\Tricore\\Main -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw\\If -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw\\StdIf -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw\\SysSe -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\1_SrvSw\\Tricore\\Compilers -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\_Impl -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\_Lib -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\_PinMap -ID:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\_Reg -g2 --make-target=0_Src\\0_AppSw\\Tricore\\Main\\ASCLIN_LIN_Master.o -t4 --language=-gcc,-volatile,+strings,-kanji --default-near-size=8 -O2 --default-a1-size=0 --default-a0-size=0 --source --align=0 --compact-max-size=200 --switch=auto --error-limit=42 -o 0_Src\\0_AppSw\\Tricore\\Main\\ASCLIN_LIN_Master.src ..\\0_Src\\0_AppSw\\Tricore\\Main\\ASCLIN_LIN_Master.c"
	.compiler_name		"ctc"
	;source	'..\\0_Src\\0_AppSw\\Tricore\\Main\\ASCLIN_LIN_Master.c'

	
$TC162
	
	.sdecl	'.text.ASCLIN_LIN_Master.init_ASCLIN_LIN_master',code,cluster('init_ASCLIN_LIN_master')
	.sect	'.text.ASCLIN_LIN_Master.init_ASCLIN_LIN_master'
	.align	2
	
	.global	init_ASCLIN_LIN_master

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	     1  /**********************************************************************************************************************
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	     2   * \file ASCLIN_LIN_Master.c
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	     3   * \copyright Copyright (C) Infineon Technologies AG 2019
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	     4   *
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	     5   * Use of this file is subject to the terms of use agreed between (i) you or the company in which ordinary course of
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	     6   * business you are acting and (ii) Infineon Technologies AG or its licensees. If and as long as no such terms of use
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	     7   * are agreed, use of this file is subject to following:
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	     8   *
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	     9   * Boost Software License - Version 1.0 - August 17th, 2003
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    10   *
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    11   * Permission is hereby granted, free of charge, to any person or organization obtaining a copy of the software and
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    12   * accompanying documentation covered by this license (the "Software") to use, reproduce, display, distribute, execute,
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    13   * and transmit the Software, and to prepare derivative works of the Software, and to permit third-parties to whom the
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    14   * Software is furnished to do so, all subject to the following:
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    15   *
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    16   * The copyright notices in the Software and this entire statement, including the above license grant, this restriction
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    17   * and the following disclaimer, must be included in all copies of the Software, in whole or in part, and all
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    18   * derivative works of the Software, unless such copies or derivative works are solely in the form of
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    19   * machine-executable object code generated by a source language processor.
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    20   *
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    21   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    22   * WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    23   * COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    24   * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    25   * IN THE SOFTWARE.
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    26   *********************************************************************************************************************/
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    27  
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    28  /*********************************************************************************************************************/
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    29  /*-----------------------------------------------------Includes------------------------------------------------------*/
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    30  /*********************************************************************************************************************/
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    31  #include "IfxAsclin.h"
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    32  #include "IfxAsclin_Lin.h"
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    33  #include "ASCLIN_LIN_Master.h"
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    34  
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    35  /*********************************************************************************************************************/
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    36  /*------------------------------------------------------Macros-------------------------------------------------------*/
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    37  /*********************************************************************************************************************/
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    38  #define SERIAL_BAUDRATE     19200                               /* Set the baud rate                                */
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    39  
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    40  #define RX_PIN              IfxAsclin2_RXD_P10_6_IN             /* Set RX port pin                                  */
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    41  #define TX_PIN              IfxAsclin2_TX_P10_5_OUT             /* Set TX port pin                                  */
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    42  
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    43  #define MASTER_ID_0x26   0x26
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    44  #define SLAVE_ID_0x33    0x33
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    45  
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    46  #define ASCLIN_MASTER_RX         100
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    47  #define ASCLIN_MASTER_TX         101
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    48  /*********************************************************************************************************************/
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    49  /*-------------------------------------------------Global variables--------------------------------------------------*/
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    50  /*********************************************************************************************************************/
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    51  IfxAsclin_Lin g_linMaster;
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    52  static uint8 HandleID = 0xFF;
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    53  static uint8 Rx_data[8] = {0x00};
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    54  static uint8 Tx_data[8] = {0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08};
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    55  /*********************************************************************************************************************/
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    56  /*----------------------------------------------Function Implementations---------------------------------------------*/
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    57  /*********************************************************************************************************************/
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    58  /* This function initializes the ASCLIN LIN module in master mode */
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    59  void init_ASCLIN_LIN_master(void)
; Function init_ASCLIN_LIN_master
.L11:
init_ASCLIN_LIN_master:	.type	func
	sub.a	a10,#96
.L89:

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    60  {
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    61      /* Initialize one instance of IfxAsclin_Lin_Config with default values */
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    62      IfxAsclin_Lin_Config linMasterConfig;
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    63      IfxAsclin_Lin_initModuleConfig(&linMasterConfig, &MODULE_ASCLIN2);
	mov.aa	a4,a10
.L101:
	lea	a5,0xf0000800
	call	IfxAsclin_Lin_initModuleConfig
.L102:

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    64  
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    65      linMasterConfig.linMode = IfxAsclin_LinMode_master;         /* Set the LIN mode of operation                    */
	mov	d15,#1
	st.b	[a10]5,d15
.L103:

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    66      linMasterConfig.brg.baudrate = SERIAL_BAUDRATE;             /* Set the desired baud rate                        */
	movh	d15,#18070
	st.w	[a10]8,d15
.L60:

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    67  
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    68      const IfxAsclin_Lin_Pins pins =
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    69      {
	movh.a	a15,#@his(.2.ini)
	lea	a15,[a15]@los(.2.ini)
.L104:
	lea	a2,[a10]76
	mov.a	a4,#3
.L2:
	ld.w	d15,[a15+]
	st.w	[a2+],d15
	loop	a4,.L2
.L105:

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    70          &RX_PIN,   IfxPort_InputMode_pullUp,                    /* RX port pin                                      */
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    71          &TX_PIN,   IfxPort_OutputMode_pushPull,                 /* TX port pin                                      */
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    72          IfxPort_PadDriver_cmosAutomotiveSpeed4
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    73      };
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    74      linMasterConfig.pins = &pins;                               /* Port pins configuration                          */
	lea	a15,[a10]76
.L106:
	st.a	[a10]52,a15
.L107:

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    75  
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    76      /* Initialize module */
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    77      IfxAsclin_Lin_initModule(&g_linMaster, &linMasterConfig);
	movh.a	a4,#@his(g_linMaster)
	lea	a4,[a4]@los(g_linMaster)
.L108:
	mov.aa	a5,a10
	j	IfxAsclin_Lin_initModule
.L57:
	
__init_ASCLIN_LIN_master_function_end:
	.size	init_ASCLIN_LIN_master,__init_ASCLIN_LIN_master_function_end-init_ASCLIN_LIN_master
.L28:
	; End of function
	
	.sdecl	'.text.ASCLIN_LIN_Master.ASCLIN_LIN_Master_Send_Message',code,cluster('ASCLIN_LIN_Master_Send_Message')
	.sect	'.text.ASCLIN_LIN_Master.ASCLIN_LIN_Master_Send_Message'
	.align	2
	
	.global	ASCLIN_LIN_Master_Send_Message

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    78  }
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    79  
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    80  void ASCLIN_LIN_Master_Send_Message(void)
; Function ASCLIN_LIN_Master_Send_Message
.L13:
ASCLIN_LIN_Master_Send_Message:	.type	func
	sub.a	a10,#8
.L90:

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    81  {
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    82      uint8 id = MASTER_ID_0x26;
	mov	d15,#38
	st.b	[a10],d15
.L113:

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    83      HandleID = MASTER_ID_0x26;
	st.b	HandleID,d15
.L114:

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    84      /* Send LIN header */
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    85      IfxAsclin_Lin_sendHeader(&g_linMaster, &id); 
	movh.a	a4,#@his(g_linMaster)
	lea	a4,[a4]@los(g_linMaster)
.L115:
	mov.aa	a5,a10
	j	IfxAsclin_Lin_sendHeader
.L63:
	
__ASCLIN_LIN_Master_Send_Message_function_end:
	.size	ASCLIN_LIN_Master_Send_Message,__ASCLIN_LIN_Master_Send_Message_function_end-ASCLIN_LIN_Master_Send_Message
.L33:
	; End of function
	
	.sdecl	'.text.inttab0.intvec.064',code
	.sect	'.text.inttab0.intvec.064'

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    86  }
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    87  
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    88  IFX_INTERRUPT(ISR_ASCLIN_Rx, 0, ASCLIN_MASTER_RX)
	movh.a	a14,#@his(ISR_ASCLIN_Rx)
	lea	a14,[a14]@los(ISR_ASCLIN_Rx)
	ji	a14
	.sdecl	'.text.ASCLIN_LIN_Master.ISR_ASCLIN_Rx',code,cluster('ISR_ASCLIN_Rx')
	.sect	'.text.ASCLIN_LIN_Master.ISR_ASCLIN_Rx'
	.align	2
	
	.global	ISR_ASCLIN_Rx
; Function ISR_ASCLIN_Rx
.L15:
ISR_ASCLIN_Rx:	.type	func
	svlcx
	sub.a	a10,#8
.L91:

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    89  {
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    90      /* check Rx response end acknowledgement*/
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    91      if (IfxAsclin_getRxResponseEndFlagStatus(g_linMaster.asclin))
	fcall	.cocofun_3
.L120:
	jz.t	d15:3,.L3
.L68:

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    92      {
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    93          uint8 id = MASTER_ID_0x26;
	mov	d15,#38
	st.b	[a10],d15
.L121:

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    94          
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    95          IfxAsclin_Lin_clearFlagsStatus(g_linMaster.asclin);
	mov.aa	a4,a12
	call	IfxAsclin_Lin_clearFlagsStatus
.L122:

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    96          HandleID = MASTER_ID_0x26;
	st.b	HandleID,d15
.L123:

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    97          IfxAsclin_Lin_sendHeader(&g_linMaster, &id); 
	mov.aa	a5,a10
	mov.aa	a4,a15
	call	IfxAsclin_Lin_sendHeader
.L3:

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    98      }
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	    99  
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   100  }
	rslcx
	rfe
.L66:
	
__ISR_ASCLIN_Rx_function_end:
	.size	ISR_ASCLIN_Rx,__ISR_ASCLIN_Rx_function_end-ISR_ASCLIN_Rx
.L38:
	; End of function
	
	.sdecl	'.text.ASCLIN_LIN_Master..cocofun_3',code,cluster('.cocofun_3')
	.sect	'.text.ASCLIN_LIN_Master..cocofun_3'
	.align	2
; Function .cocofun_3
.L17:
.cocofun_3:	.type	func
; Function body .cocofun_3, coco_iter:0
	movh.a	a15,#@his(g_linMaster)
	lea	a15,[a15]@los(g_linMaster)
.L148:
	ld.a	a12,[a15]
.L149:

; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	     2   * \file IfxAsclin.h
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	     3   * \brief ASCLIN  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	     4   * \ingroup IfxLld_Asclin
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    10   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    11   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    14   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    16   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    19   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    20   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    21   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    22   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    23   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    24   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    25   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    26   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    27   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    28   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    29   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    30   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    31   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    32   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    33   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    40   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    42   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    43   * \defgroup IfxLld_Asclin_Std_Enumerations Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    44   * \ingroup IfxLld_Asclin_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    45   * \defgroup IfxLld_Asclin_Std_Operative Operative Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    46   * \ingroup IfxLld_Asclin_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    47   * \defgroup IfxLld_Asclin_Std_Utility Utility Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    48   * \ingroup IfxLld_Asclin_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    49   * \defgroup IfxLld_Asclin_Std_Configuration Configuration Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    50   * \ingroup IfxLld_Asclin_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    51   * \defgroup IfxLld_Asclin_Std_External External Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    52   * \ingroup IfxLld_Asclin_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    53   * \defgroup IfxLld_Asclin_Std_IO IO Pin Configuration Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    54   * \ingroup IfxLld_Asclin_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    55   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    56  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    57  #ifndef IFXASCLIN_H
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    58  #define IFXASCLIN_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    59  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    60  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    61  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    62  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    63  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    64  #include "_Impl/IfxAsclin_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    65  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    66  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    67  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    68  #include "IfxAsclin_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    69  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    70  #include "_PinMap/IfxAsclin_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    71  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    72  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    73  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    74  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    75  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    76  /** \addtogroup IfxLld_Asclin_Std_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    77   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    78  /** \brief Defines if the classic or the enhanced checksum will be calculated by the checksum block.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    79   * Definition in Ifx_ASCLIN.DATCON.B.CSM
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    83      IfxAsclin_Checksum_classic  = 0, /**< \brief classic checksum */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    84      IfxAsclin_Checksum_enhanced = 1  /**< \brief enhanced checksum */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    85  } IfxAsclin_Checksum;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    86  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    87  /** \brief Defines if the received checksum byte is written into the RXFifo or not.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    88   * Definition in Ifx_ASCLIN.LIN.CON.B.CSI
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    89   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    90  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    91  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    92      IfxAsclin_ChecksumInjection_notWritten = 0,  /**< \brief checksum byte is not written */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    93      IfxAsclin_ChecksumInjection_written    = 1   /**< \brief checksum byte is written */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    94  } IfxAsclin_ChecksumInjection;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    95  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    96  /** \brief CPOL defines the idle level of the clock signal in the SPI mode.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    97   * Idle level is the level outside the data transmission time intervals.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    98   * Definition in Ifx_ASCLIN.IOCR.B.CPOL
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    99   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   100  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   101  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   102      IfxAsclin_ClockPolarity_idleLow  = 0, /**< \brief idle low */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   103      IfxAsclin_ClockPolarity_idleHigh = 1  /**< \brief idle high */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   104  } IfxAsclin_ClockPolarity;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   105  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   106  /** \brief Selection of clock source\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   107   * Definition in Ifx_ASCLIN.CSR.B.CLKSEL
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   108   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   109  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   110  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   111      IfxAsclin_ClockSource_noClock      = 0,  /**< \brief no clock will be supplied */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   112      IfxAsclin_ClockSource_ascFastClock = 2,  /**< \brief f asclinf wiil be supplied */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   113      IfxAsclin_ClockSource_ascSlowClock = 4   /**< \brief f asclins will be supplied */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   114  } IfxAsclin_ClockSource;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   116  /** \brief CTS input pin selection\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   117   * Definition in Ifx_ASCLIN.IOCR.B.CTS
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   118   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   119  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   120  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   121      IfxAsclin_CtsInputSelect_0,     /**< \brief CTS input pin 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   122      IfxAsclin_CtsInputSelect_1,     /**< \brief CTS input pin 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   123      IfxAsclin_CtsInputSelect_2,     /**< \brief CTS input pin 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   124      IfxAsclin_CtsInputSelect_3      /**< \brief CTS input pin 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   125  } IfxAsclin_CtsInputSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   126  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   127  /** \brief Number of bits per transfer\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   128   * Definition in Ifx_ASCLIN.FRAMECON.B.DATALEN
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   129   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   130  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   131  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   132      IfxAsclin_DataLength_1 = 0,      /**< \brief number of bits per transfer 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   133      IfxAsclin_DataLength_2,          /**< \brief number of bits per transfer 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   134      IfxAsclin_DataLength_3,          /**< \brief number of bits per transfer 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   135      IfxAsclin_DataLength_4,          /**< \brief number of bits per transfer 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   136      IfxAsclin_DataLength_5,          /**< \brief number of bits per transfer 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   137      IfxAsclin_DataLength_6,          /**< \brief number of bits per transfer 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   138      IfxAsclin_DataLength_7,          /**< \brief number of bits per transfer 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   139      IfxAsclin_DataLength_8,          /**< \brief number of bits per transfer 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   140      IfxAsclin_DataLength_9,          /**< \brief number of bits per transfer 8  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   141      IfxAsclin_DataLength_10,         /**< \brief number of bits per transfer 9  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   142      IfxAsclin_DataLength_11,         /**< \brief number of bits per transfer 10  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   143      IfxAsclin_DataLength_12,         /**< \brief number of bits per transfer 11  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   144      IfxAsclin_DataLength_13,         /**< \brief number of bits per transfer 12  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   145      IfxAsclin_DataLength_14,         /**< \brief number of bits per transfer 13  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   146      IfxAsclin_DataLength_15,         /**< \brief number of bits per transfer 14  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   147      IfxAsclin_DataLength_16          /**< \brief number of bits per transfer 15  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   148  } IfxAsclin_DataLength;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   150  /** \brief Defines the interrupt generation modes of Tx FIFO and Rx FIFO\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   151   * Definition in Ifx_ASCLIN.RXFIFOCON.B.FM and Ifx_ASCLIN.TXFIFOCON.B.FM
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   155      IfxAsclin_FifoInterruptMode_combined,  /**< \brief Combined Move Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   156      IfxAsclin_FifoInterruptMode_single,    /**< \brief Single Move Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   157      IfxAsclin_FifoInterruptMode_batch      /**< \brief Batch Move Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   158  } IfxAsclin_FifoInterruptMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   159  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   160  /** \brief Defines the basic operating mode of the module. Changing the mode must be done by switching first to initialize mode, and then to the other mode.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   161   * Definition in Ifx_ASCLIN.FRAMECON.B.MODE
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   162   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   163  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   164  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   165      IfxAsclin_FrameMode_initialise = 0,  /**< \brief initialise mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   166      IfxAsclin_FrameMode_asc        = 1,  /**< \brief asc mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   167      IfxAsclin_FrameMode_spi        = 2,  /**< \brief spi mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   168      IfxAsclin_FrameMode_lin        = 3   /**< \brief lin mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   169  } IfxAsclin_FrameMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   170  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   171  /** \brief Defines if LIN frame shall consist of a header and response or of a header only.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   172   * Definition in Ifx_ASCLIN.DATCON.B.HO
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   173   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   174  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   175  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   176      IfxAsclin_HeaderResponseSelect_headerAndResponse = 0,  /**< \brief header and response expected */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   177      IfxAsclin_HeaderResponseSelect_headerOnly        = 1   /**< \brief header only expected */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   178  } IfxAsclin_HeaderResponseSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   179  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   180  /** \brief Defines the duration of the IDLE delay in bit times.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   181   * SPI mode: this is the idle time between the frames.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   182   * ASC and LIN mode: this is the pause inserted between transmission of bytes.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   183   * Definition in Ifx_ASCLIN.FRAMECON.B.IDLE
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   184   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   185  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   186  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   187      IfxAsclin_IdleDelay_0,     /**< \brief idle delay in 0 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   188      IfxAsclin_IdleDelay_1,     /**< \brief idle delay in 1 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   189      IfxAsclin_IdleDelay_2,     /**< \brief idle delay in 2 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   190      IfxAsclin_IdleDelay_3,     /**< \brief idle delay in 3 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   191      IfxAsclin_IdleDelay_4,     /**< \brief idle delay in 4 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   192      IfxAsclin_IdleDelay_5,     /**< \brief idle delay in 5 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   193      IfxAsclin_IdleDelay_6,     /**< \brief idle delay in 6 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   194      IfxAsclin_IdleDelay_7      /**< \brief idle delay in 7 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   195  } IfxAsclin_IdleDelay;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   196  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   197  /** \brief Defines the leading delay in bit times in SPI mode. ASC mode: not applicable.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   198   * LIN mode: delay between the end of the break and the start of the sync character.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   199   * Definition in Ifx_ASCLIN.FRAMECON.B.LEAD
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   200   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   201  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   202  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   203      IfxAsclin_LeadDelay_0,     /**< \brief lead delay in 0 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   204      IfxAsclin_LeadDelay_1,     /**< \brief lead delay in 1 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   205      IfxAsclin_LeadDelay_2,     /**< \brief lead delay in 2 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   206      IfxAsclin_LeadDelay_3,     /**< \brief lead delay in 3 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   207      IfxAsclin_LeadDelay_4,     /**< \brief lead delay in 4 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   208      IfxAsclin_LeadDelay_5,     /**< \brief lead delay in 5 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   209      IfxAsclin_LeadDelay_6,     /**< \brief lead delay in 6 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   210      IfxAsclin_LeadDelay_7      /**< \brief lead delay in 7 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   211  } IfxAsclin_LeadDelay;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   212  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   213  /** \brief Configures if the module in LIN mode operates as master or slave\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   214   * Definition in Ifx_ASCLIN.LIN.CON.B.MS
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   215   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   216  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   217  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   218      IfxAsclin_LinMode_slave  = 0, /**< \brief operates in slave mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   219      IfxAsclin_LinMode_master = 1  /**< \brief operates in master mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   220  } IfxAsclin_LinMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   221  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   222  /** \brief Defines the timeout threshold of RESPOSE bit is for LIN response timeout or LIN frame timeout.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   223   * Definition in Ifx_ASCLIN.DATCON.B.RM
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   224   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   225  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   226  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   227      IfxAsclin_LinResponseTimeoutMode_frameTimeout    = 0, /**< \brief timeout threshold is for frame */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   228      IfxAsclin_LinResponseTimeoutMode_responseTimeout = 1  /**< \brief timeout threshold is for reponse */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   229  } IfxAsclin_LinResponseTimeoutMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   230  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   231  /** \brief Defines the bit length in ticks in the range of 1 to 16. The lengths of 1 to 3 are not allowed\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   232   * Definition in Ifx_ASCLIN.BITCON.B.OVERSAMPLING
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   233   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   234  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   235  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   236      IfxAsclin_OversamplingFactor_4  = 3,   /**< \brief oversampling factor 4 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   237      IfxAsclin_OversamplingFactor_5  = 4,   /**< \brief oversampling factor 5 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   238      IfxAsclin_OversamplingFactor_6  = 5,   /**< \brief oversampling factor 6 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   239      IfxAsclin_OversamplingFactor_7  = 6,   /**< \brief oversampling factor 7 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   240      IfxAsclin_OversamplingFactor_8  = 7,   /**< \brief oversampling factor 8 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   241      IfxAsclin_OversamplingFactor_9  = 8,   /**< \brief oversampling factor 9 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   242      IfxAsclin_OversamplingFactor_10 = 9,   /**< \brief oversampling factor 10 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   243      IfxAsclin_OversamplingFactor_11 = 10,  /**< \brief oversampling factor 11 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   244      IfxAsclin_OversamplingFactor_12 = 11,  /**< \brief oversampling factor 12 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   245      IfxAsclin_OversamplingFactor_13 = 12,  /**< \brief oversampling factor 13 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   246      IfxAsclin_OversamplingFactor_14 = 13,  /**< \brief oversampling factor 14 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   247      IfxAsclin_OversamplingFactor_15 = 14,  /**< \brief oversampling factor 15 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   248      IfxAsclin_OversamplingFactor_16 = 15   /**< \brief oversampling factor 16 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   249  } IfxAsclin_OversamplingFactor;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   250  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   251  /** \brief Type of parity bit attached to data bits\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   252   * Definition in Ifx_ASCLIN.FRAMECON.B.ODD
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   253   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   254  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   255  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   256      IfxAsclin_ParityType_even = 0,  /**< \brief even parity */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   257      IfxAsclin_ParityType_odd  = 1   /**< \brief odd parity */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   258  } IfxAsclin_ParityType;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   260  /** \brief Receive buffer mode\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   261   * Definition in Ifx_ASCLIN.RXFIFOCON.B.BUF
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   262   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   263  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   264  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   265      IfxAsclin_ReceiveBufferMode_rxFifo   = 0, /**< \brief RxFIFO mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   266      IfxAsclin_ReceiveBufferMode_rxBuffer = 1  /**< \brief single stage Rx buffer */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   267  } IfxAsclin_ReceiveBufferMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   268  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   269  /** \brief Polarity of the RTS and CTS signals\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   270   * Definition in Ifx_ASCLIN.IOCR.B.RCPOL
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   272  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   273  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   274      IfxAsclin_RtsCtsPolarity_activeHigh = 0,  /**< \brief ready/clear are active-high */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   275      IfxAsclin_RtsCtsPolarity_activeLow  = 1   /**< \brief ready/clear are active-low */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   276  } IfxAsclin_RtsCtsPolarity;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   277  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   278  /** \brief Defines the filling level that triggers a drain (RX) interrupt or DMA access\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   279   * Definition in Ifx_ASCLIN.RXFIFOCON.B.INTLEVEL
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   280   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   281  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   282  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   283      IfxAsclin_RxFifoInterruptLevel_1,     /**< \brief RX FIFO level 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   284      IfxAsclin_RxFifoInterruptLevel_2,     /**< \brief RX FIFO level 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   285      IfxAsclin_RxFifoInterruptLevel_3,     /**< \brief RX FIFO level 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   286      IfxAsclin_RxFifoInterruptLevel_4,     /**< \brief RX FIFO level 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   287      IfxAsclin_RxFifoInterruptLevel_5,     /**< \brief RX FIFO level 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   288      IfxAsclin_RxFifoInterruptLevel_6,     /**< \brief RX FIFO level 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   289      IfxAsclin_RxFifoInterruptLevel_7,     /**< \brief RX FIFO level 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   290      IfxAsclin_RxFifoInterruptLevel_8,     /**< \brief RX FIFO level 8  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   291      IfxAsclin_RxFifoInterruptLevel_9,     /**< \brief RX FIFO level 9  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   292      IfxAsclin_RxFifoInterruptLevel_10,    /**< \brief RX FIFO level 10  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   293      IfxAsclin_RxFifoInterruptLevel_11,    /**< \brief RX FIFO level 11  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   294      IfxAsclin_RxFifoInterruptLevel_12,    /**< \brief RX FIFO level 12  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   295      IfxAsclin_RxFifoInterruptLevel_13,    /**< \brief RX FIFO level 13  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   296      IfxAsclin_RxFifoInterruptLevel_14,    /**< \brief RX FIFO level 14  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   297      IfxAsclin_RxFifoInterruptLevel_15,    /**< \brief RX FIFO level 15  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   298      IfxAsclin_RxFifoInterruptLevel_16     /**< \brief RX FIFO level 16  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   299  } IfxAsclin_RxFifoInterruptLevel;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   300  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   301  /** \brief Defines the number of bytes read from the Rx FIFO with one FPI bus read\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   302   * Definition in Ifx_ASCLIN.RXFIFOCON.B.OUTW
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   304  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   305  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   306      IfxAsclin_RxFifoOutletWidth_0,     /**< \brief number of bytes 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   307      IfxAsclin_RxFifoOutletWidth_1,     /**< \brief number of bytes 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   308      IfxAsclin_RxFifoOutletWidth_2,     /**< \brief number of bytes 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   309      IfxAsclin_RxFifoOutletWidth_3      /**< \brief number of bytes 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   310  } IfxAsclin_RxFifoOutletWidth;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   312  /** \brief Alternate input selection for Rx signal.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   313   * Definition in Ifx_ASCLIN.IOCR.B.ALTI
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   314   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   315  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   316  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   317      IfxAsclin_RxInputSelect_0,     /**< \brief alternate input selection 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   318      IfxAsclin_RxInputSelect_1,     /**< \brief alternate input selection 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   319      IfxAsclin_RxInputSelect_2,     /**< \brief alternate input selection 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   320      IfxAsclin_RxInputSelect_3,     /**< \brief alternate input selection 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   321      IfxAsclin_RxInputSelect_4,     /**< \brief alternate input selection 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   322      IfxAsclin_RxInputSelect_5,     /**< \brief alternate input selection 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   323      IfxAsclin_RxInputSelect_6,     /**< \brief alternate input selection 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   324      IfxAsclin_RxInputSelect_7      /**< \brief alternate input selection 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   325  } IfxAsclin_RxInputSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   326  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   327  /** \brief Sample point position\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   328   * Definition in Ifx_ASCLIN.BITCON.B.SAMPLEPOINT
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   330  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   331  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   332      IfxAsclin_SamplePointPosition_1  = 1,   /**< \brief sample point position at 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   333      IfxAsclin_SamplePointPosition_2  = 2,   /**< \brief sample point position at 2 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   334      IfxAsclin_SamplePointPosition_3  = 3,   /**< \brief sample point position at 3 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   335      IfxAsclin_SamplePointPosition_4  = 4,   /**< \brief sample point position at 4 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   336      IfxAsclin_SamplePointPosition_5  = 5,   /**< \brief sample point position at 5 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   337      IfxAsclin_SamplePointPosition_6  = 6,   /**< \brief sample point position at 6 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   338      IfxAsclin_SamplePointPosition_7  = 7,   /**< \brief sample point position at 7 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   339      IfxAsclin_SamplePointPosition_8  = 8,   /**< \brief sample point position at 8 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   340      IfxAsclin_SamplePointPosition_9  = 9,   /**< \brief sample point position at 9 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   341      IfxAsclin_SamplePointPosition_10 = 10,  /**< \brief sample point position at 10 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   342      IfxAsclin_SamplePointPosition_11 = 11,  /**< \brief sample point position at 11 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   343      IfxAsclin_SamplePointPosition_12 = 12,  /**< \brief sample point position at 12 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   344      IfxAsclin_SamplePointPosition_13 = 13,  /**< \brief sample point position at 13 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   345      IfxAsclin_SamplePointPosition_14 = 14,  /**< \brief sample point position at 14 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   346      IfxAsclin_SamplePointPosition_15 = 15   /**< \brief sample point position at 15 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   347  } IfxAsclin_SamplePointPosition;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   348  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   349  /** \brief Number of samples per bit, sample mode/medianfilter\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   350   * Definition in Ifx_ASCLIN.BITCON.B.SM
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   351   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   352  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   353  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   354      IfxAsclin_SamplesPerBit_one   = 0, /**< \brief one sample per bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   355      IfxAsclin_SamplesPerBit_three = 1  /**< \brief three samples per bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   356  } IfxAsclin_SamplesPerBit;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   357  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   358  /** \brief SPI mode: defines the shift direction of the shift register.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   359   * ASC and LIN mode: should be set to 0.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   360   * Definition in Ifx_ASCLIN.FRAMECON.B.MSB
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   361   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   362  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   363  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   364      IfxAsclin_ShiftDirection_lsbFirst = 0,  /**< \brief LSB first */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   365      IfxAsclin_ShiftDirection_msbFirst = 1   /**< \brief MSB first */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   366  } IfxAsclin_ShiftDirection;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   367  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   368  /** \brief Defines the idle level of the SLSO signal, which is the level.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   369   * Outside the data transmission, leading and trailing time intervals.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   370   * Definition in Ifx_ASCLIN.IOCR.B.SPOL
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   372  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   373  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   374      IfxAsclin_SlavePolarity_idleLow  = 0, /**< \brief idle low */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   375      IfxAsclin_SlavePolarity_idlehigh = 1  /**< \brief idle high */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   376  } IfxAsclin_SlavePolarity;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   377  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   378  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   379   * Definition in Ifx_ASCLIN.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   380   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   381  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   382  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   383      IfxAsclin_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   384      IfxAsclin_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   385  } IfxAsclin_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   386  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   387  /** \brief Error status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   388   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   389  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   390  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   391      IfxAsclin_Status_configurationError = 0,  /**< \brief Configuration error */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   392      IfxAsclin_Status_noError            = 1   /**< \brief No error */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   393  } IfxAsclin_Status;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   395  /** \brief ASC and LIN mode: number of stop bits (0 is not allowed), SPI mode: trailing delay.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   396   * Definition in Ifx_ASCLIN.FRAMECON.B.STOP
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   397   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   398  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   399  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   400      IfxAsclin_StopBit_0,     /**< \brief number of stop bits 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   401      IfxAsclin_StopBit_1,     /**< \brief number of stop bits 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   402      IfxAsclin_StopBit_2,     /**< \brief number of stop bits 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   403      IfxAsclin_StopBit_3,     /**< \brief number of stop bits 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   404      IfxAsclin_StopBit_4,     /**< \brief number of stop bits 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   405      IfxAsclin_StopBit_5,     /**< \brief number of stop bits 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   406      IfxAsclin_StopBit_6,     /**< \brief number of stop bits 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   407      IfxAsclin_StopBit_7      /**< \brief number of stop bits 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   408  } IfxAsclin_StopBit;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   409  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   410  /** \brief OCDS Suspend Control (OCDS.SUS)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   411   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   412  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   413  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   414      IfxAsclin_SuspendMode_none = 0,  /**< \brief No suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   415      IfxAsclin_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   416      IfxAsclin_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   417  } IfxAsclin_SuspendMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   418  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   419  /** \brief Defines the number of bytes written to the Tx FIFO with one FPI bus write\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   420   * Definition in Ifx_ASCLIN.TXFIFOCON.B.INW
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   421   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   422  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   423  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   424      IfxAsclin_TxFifoInletWidth_0,     /**< \brief number of bytes 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   425      IfxAsclin_TxFifoInletWidth_1,     /**< \brief number of bytes 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   426      IfxAsclin_TxFifoInletWidth_2,     /**< \brief number of bytes 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   427      IfxAsclin_TxFifoInletWidth_3      /**< \brief number of bytes 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   428  } IfxAsclin_TxFifoInletWidth;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   429  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   430  /** \brief Defines the filling level that triggers a refill (TX) interrupt or DMA access\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   431   * Definition in Ifx_ASCLIN.TXFIFOCON.B.INTLEVEL
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   432   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   433  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   434  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   435      IfxAsclin_TxFifoInterruptLevel_0,     /**< \brief TX FIFO level 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   436      IfxAsclin_TxFifoInterruptLevel_1,     /**< \brief TX FIFO level 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   437      IfxAsclin_TxFifoInterruptLevel_2,     /**< \brief TX FIFO level 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   438      IfxAsclin_TxFifoInterruptLevel_3,     /**< \brief TX FIFO level 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   439      IfxAsclin_TxFifoInterruptLevel_4,     /**< \brief TX FIFO level 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   440      IfxAsclin_TxFifoInterruptLevel_5,     /**< \brief TX FIFO level 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   441      IfxAsclin_TxFifoInterruptLevel_6,     /**< \brief TX FIFO level 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   442      IfxAsclin_TxFifoInterruptLevel_7,     /**< \brief TX FIFO level 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   443      IfxAsclin_TxFifoInterruptLevel_8,     /**< \brief TX FIFO level 8  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   444      IfxAsclin_TxFifoInterruptLevel_9,     /**< \brief TX FIFO level 9  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   445      IfxAsclin_TxFifoInterruptLevel_10,    /**< \brief TX FIFO level 10  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   446      IfxAsclin_TxFifoInterruptLevel_11,    /**< \brief TX FIFO level 11  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   447      IfxAsclin_TxFifoInterruptLevel_12,    /**< \brief TX FIFO level 12  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   448      IfxAsclin_TxFifoInterruptLevel_13,    /**< \brief TX FIFO level 13  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   449      IfxAsclin_TxFifoInterruptLevel_14,    /**< \brief TX FIFO level 14  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   450      IfxAsclin_TxFifoInterruptLevel_15     /**< \brief TX FIFO level 15  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   451  } IfxAsclin_TxFifoInterruptLevel;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   452  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   453  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   454  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   455  /** \addtogroup IfxLld_Asclin_Std_Operative
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   456   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   457  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   458  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   459  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   460  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   461  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   462  /** \brief clears all the flags
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   463   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   464   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   465   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   466  IFX_INLINE void IfxAsclin_clearAllFlags(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   467  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   468  /** \brief Clears the break detected flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   469   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   472  IFX_INLINE void IfxAsclin_clearBreakDetectedFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   474  /** \brief Clears the collision detection error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   475   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   476   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   478  IFX_INLINE void IfxAsclin_clearCollisionDetectionErrorFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   480  /** \brief Clears the falling edge detected flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   481   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   482   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   483   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   484  IFX_INLINE void IfxAsclin_clearFallingEdgeDetectedFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   485  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   486  /** \brief Clears the frame error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   487   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   488   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   489   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   490  IFX_INLINE void IfxAsclin_clearFrameErrorFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   491  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   492  /** \brief Clears the header timeout flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   493   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   494   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   495   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   496  IFX_INLINE void IfxAsclin_clearHeaderTimeoutFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   497  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   498  /** \brief Clears the kernel reset status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   499   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   500   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   501   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   502  IFX_INLINE void IfxAsclin_clearKernelResetStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   503  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   504  /** \brief Clears the auto baudrate detection error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   505   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   506   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   507   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   508  IFX_INLINE void IfxAsclin_clearLinAutoBaudDetectionErrorFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   509  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   510  /** \brief Clears the LIN checksum error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   511   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   512   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   513   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   514  IFX_INLINE void IfxAsclin_clearLinChecksumErrorFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   515  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   516  /** \brief Clears the LIN parity error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   517   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   518   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   519   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   520  IFX_INLINE void IfxAsclin_clearLinParityErrorFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   521  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   522  /** \brief Clears the parity error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   523   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   524   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   525   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   526  IFX_INLINE void IfxAsclin_clearParityErrorFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   527  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   528  /** \brief Clears the raising edge detected flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   529   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   530   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   531   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   532  IFX_INLINE void IfxAsclin_clearRaisingEdgeDetectedFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   533  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   534  /** \brief Clears the response timeout flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   535   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   536   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   537   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   538  IFX_INLINE void IfxAsclin_clearResponseTimeoutFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   539  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   540  /** \brief Clears the Rx FIFO level flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   541   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   542   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   543   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   544  IFX_INLINE void IfxAsclin_clearRxFifoFillLevelFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   545  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   546  /** \brief Clears the Rx FIFO overflow flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   547   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   548   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   549   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   550  IFX_INLINE void IfxAsclin_clearRxFifoOverflowFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   551  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   552  /** \brief Clears the Rx FIFO underflow flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   553   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   554   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   555   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   556  IFX_INLINE void IfxAsclin_clearRxFifoUnderflowFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   557  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   558  /** \brief Clears the receive header end flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   559   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   560   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   561   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   562  IFX_INLINE void IfxAsclin_clearRxHeaderEndFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   563  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   564  /** \brief Clears the receive response end flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   565   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   566   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   567   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   568  IFX_INLINE void IfxAsclin_clearRxResponseEndFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   569  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   570  /** \brief Clears the transmission pending flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   571   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   572   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   573   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   574  IFX_INLINE void IfxAsclin_clearTransmissionCompletedFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   575  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   576  /** \brief Clears the Tx FIFO level flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   577   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   578   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   579   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   580  IFX_INLINE void IfxAsclin_clearTxFifoFillLevelFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   581  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   582  /** \brief Clears the Tx FIFO overflow flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   583   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   584   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   585   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   586  IFX_INLINE void IfxAsclin_clearTxFifoOverflowFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   587  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   588  /** \brief Clears the transmit header end flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   589   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   590   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   591   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   592  IFX_INLINE void IfxAsclin_clearTxHeaderEndFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   593  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   594  /** \brief Clears the transmit response end flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   595   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   596   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   597   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   598  IFX_INLINE void IfxAsclin_clearTxResponseEndFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   599  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   600  /** \brief Flushes (empties) the Rx FIFO
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   601   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   602   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   603   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   604  IFX_INLINE void IfxAsclin_flushRxFifo(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   605  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   606  /** \brief Flushes (empties) the Tx FIFO
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   607   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   608   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   609   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   610  IFX_INLINE void IfxAsclin_flushTxFifo(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   611  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   612  /** \brief Sets the baudrate detection's lower limit
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   613   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   614   * \param limit value of the lower limit
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   615   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   616   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   617  IFX_INLINE void IfxAsclin_setBrdLowerlimt(Ifx_ASCLIN *asclin, uint8 limit);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   619  /** \brief Sets the baudrate detection's upper limit
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   620   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   621   * \param limit value of the upper limit
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   622   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   623   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   624  IFX_INLINE void IfxAsclin_setBrdUpperlimt(Ifx_ASCLIN *asclin, uint8 limit);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   626  /** \brief Sets the checksum injection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   627   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   628   * \param csi checksum injection selection (not written / written)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   629   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   630   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   631  IFX_INLINE void IfxAsclin_setChecksumInjection(Ifx_ASCLIN *asclin, IfxAsclin_ChecksumInjection csi);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   632  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   633  /** \brief Sets the checksum mode
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   634   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   635   * \param mode checksum mode selection (classic / enhanced)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   636   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   637   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   638  IFX_INLINE void IfxAsclin_setChecksumMode(Ifx_ASCLIN *asclin, IfxAsclin_Checksum mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   639  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   640  /** \brief Sets the data length (number of bits per transfer)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   641   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   642   * \param length data length selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   643   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   644   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   645  IFX_INLINE void IfxAsclin_setDataLength(Ifx_ASCLIN *asclin, IfxAsclin_DataLength length);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   646  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   647  /** \brief Sets the denominator of the fractional divider
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   648   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   649   * \param denominator value of the denominator
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   650   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   651   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   652  IFX_INLINE void IfxAsclin_setDenominator(Ifx_ASCLIN *asclin, uint16 denominator);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   653  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   654  /** \brief Sets the disable module request
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   655   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   656   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   657   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   658  IFX_INLINE void IfxAsclin_setDisableModuleRequest(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   659  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   660  /** \brief Sets the enable module request
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   661   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   662   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   663   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   664  IFX_INLINE void IfxAsclin_setEnableModuleRequest(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   665  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   666  /** \brief Sets digital glitch filter depth
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   667   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   668   * \param depth digital glitch filter depth selection (1 to 63)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   669   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   670   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   671  IFX_INLINE void IfxAsclin_setFilterDepth(Ifx_ASCLIN *asclin, uint8 depth);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   672  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   673  /** \brief Sets the header response selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   674   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   675   * \param type type of selection (header and response or header only)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   676   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   677   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   678  IFX_INLINE void IfxAsclin_setHeaderResponseSelect(Ifx_ASCLIN *asclin, IfxAsclin_HeaderResponseSelect type);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   679  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   680  /** \brief Sets the idle delay
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   681   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   682   * \param delay idle delay selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   683   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   684   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   685  IFX_INLINE void IfxAsclin_setIdleDelay(Ifx_ASCLIN *asclin, IfxAsclin_IdleDelay delay);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   686  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   687  /** \brief Sets the kernal reset of the KRST1
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   688   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   689   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   690   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   691  IFX_INLINE void IfxAsclin_setKernelResetOne(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   692  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   693  /** \brief Sets the kernel reset of the KRST0
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   694   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   695   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   696   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   697  IFX_INLINE void IfxAsclin_setKernelResetZero(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   698  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   699  /** \brief Sets the lead delay
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   700   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   701   * \param delay lead delay selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   702   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   703   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   704  IFX_INLINE void IfxAsclin_setLeadDelay(Ifx_ASCLIN *asclin, IfxAsclin_LeadDelay delay);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   705  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   706  /** \brief Sets the LIN break length
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   707   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   708   * \param length value of the break length
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   709   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   710   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   711  IFX_INLINE void IfxAsclin_setLinBreakLength(Ifx_ASCLIN *asclin, uint8 length);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   712  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   713  /** \brief Sets the LIN header timeout
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   714   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   715   * \param timeout value of the header timeout
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   716   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   717   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   718  IFX_INLINE void IfxAsclin_setLinHeaderTimeout(Ifx_ASCLIN *asclin, uint8 timeout);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   719  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   720  /** \brief Sets the LIN mode of operation
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   721   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   722   * \param mode mode selection (slave / master)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   723   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   724   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   725  IFX_INLINE void IfxAsclin_setLinMode(Ifx_ASCLIN *asclin, IfxAsclin_LinMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   726  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   727  /** \brief Sets the LIN response timeout mode
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   728   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   729   * \param mode LIN response timeout mode selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   730   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   731   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   732  IFX_INLINE void IfxAsclin_setLinResponseTimeoutMode(Ifx_ASCLIN *asclin, IfxAsclin_LinResponseTimeoutMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   733  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   734  /** \brief Sets the LIN response timeout threshold
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   735   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   736   * \param threshold value of the tomeout threshold (1 to 256 bit times)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   737   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   738   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   739  IFX_INLINE void IfxAsclin_setLinResponseTimeoutThreshold(Ifx_ASCLIN *asclin, uint16 threshold);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   740  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   741  /** \brief Sets the numerator of the fractional divider
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   742   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   743   * \param numerator value of the numerator
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   744   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   745   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   746  IFX_INLINE void IfxAsclin_setNumerator(Ifx_ASCLIN *asclin, uint16 numerator);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   747  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   748  /** \brief Sets the division ratio of the baudrate post divider
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   749   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   750   * \param ovsFactor value of oversampling factor
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   751   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   752   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   753  IFX_INLINE void IfxAsclin_setOversampling(Ifx_ASCLIN *asclin, IfxAsclin_OversamplingFactor ovsFactor);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   754  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   755  /** \brief Sets the parity type
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   756   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   757   * \param type parity type selction (even / odd)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   758   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   759   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   760  IFX_INLINE void IfxAsclin_setParityType(Ifx_ASCLIN *asclin, IfxAsclin_ParityType type);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   761  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   762  /** \brief Sets the division ratio of the predivider (prescaler)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   763   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   764   * \param prescaler value of prescaler
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   765   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   766   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   767  IFX_INLINE void IfxAsclin_setPrescaler(Ifx_ASCLIN *asclin, uint16 prescaler);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   768  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   769  /** \brief Sets the receive buffer mode
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   770   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   771   * \param mode receive buffer mode selection (Rx FIFO or single stage Rx buffer)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   772   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   773   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   774  IFX_INLINE void IfxAsclin_setRxBufferMode(Ifx_ASCLIN *asclin, IfxAsclin_ReceiveBufferMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   775  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   776  /** \brief Sets the Tx FIFO interrupt level
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   777   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   778   * \param level interrupt level selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   779   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   780   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   781  IFX_INLINE void IfxAsclin_setRxFifoInterruptLevel(Ifx_ASCLIN *asclin, IfxAsclin_RxFifoInterruptLevel level);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   782  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   783  /** \brief Sets the receive FIFO outlet width
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   784   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   785   * \param width number of bytes read to the Rx FIFO with one FPI bus read
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   786   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   787   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   788  IFX_INLINE void IfxAsclin_setRxFifoOutletWidth(Ifx_ASCLIN *asclin, IfxAsclin_RxFifoOutletWidth width);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   789  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   790  /** \brief Sets the sample mode (number of samples per bit / median filter)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   791   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   792   * \param medianFilter value of the median filter
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   793   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   794   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   795  IFX_INLINE void IfxAsclin_setSampleMode(Ifx_ASCLIN *asclin, IfxAsclin_SamplesPerBit medianFilter);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   796  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   797  /** \brief Sets the sampling point position
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   798   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   799   * \param spPosition sample point position selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   800   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   801   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   802  IFX_INLINE void IfxAsclin_setSamplePointPosition(Ifx_ASCLIN *asclin, IfxAsclin_SamplePointPosition spPosition);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   803  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   804  /** \brief Sets the shift direction
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   805   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   806   * \param dir shift direction selection (LSB / MSB first)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   807   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   808   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   809  IFX_INLINE void IfxAsclin_setShiftDirection(Ifx_ASCLIN *asclin, IfxAsclin_ShiftDirection dir);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   810  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   811  /** \brief Sets the number of stop bits
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   812   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   813   * \param stopBit number of stop bits selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   814   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   815   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   816  IFX_INLINE void IfxAsclin_setStopBit(Ifx_ASCLIN *asclin, IfxAsclin_StopBit stopBit);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   817  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   818  /** \brief Sets the transmit header request flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   819   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   820   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   821   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   822  IFX_INLINE void IfxAsclin_setTransmitHeaderRequestFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   823  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   824  /** \brief Sets the transmit response request flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   825   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   826   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   827   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   828  IFX_INLINE void IfxAsclin_setTransmitResponseRequestFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   829  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   830  /** \brief Sets the transmission wake request flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   831   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   832   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   833   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   834  IFX_INLINE void IfxAsclin_setTransmitWakeRequestFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   835  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   836  /** \brief Sets the transmit FIFO inlet width
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   837   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   838   * \param width number of bytes written to the Tx FIFO with one FPI bus write
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   839   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   840   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   841  IFX_INLINE void IfxAsclin_setTxFifoInletWidth(Ifx_ASCLIN *asclin, IfxAsclin_TxFifoInletWidth width);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   842  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   843  /** \brief Sets the Tx FIFO interrupt level
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   844   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   845   * \param level interrupt level selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   846   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   847   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   848  IFX_INLINE void IfxAsclin_setTxFifoInterruptLevel(Ifx_ASCLIN *asclin, IfxAsclin_TxFifoInterruptLevel level);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   849  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   850  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   851  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   852  /** \addtogroup IfxLld_Asclin_Std_Utility
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   853   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   854  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   855  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   856  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   857  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   858  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   859  /** \brief Returns the break detected flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   860   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   861   * \return break detected flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   862   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   863  IFX_INLINE boolean IfxAsclin_getBreakDetectedFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   864  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   865  /** \brief Returns the clock source
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   866   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   867   * \return clock source
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   868   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   869  IFX_INLINE uint8 IfxAsclin_getClockSource(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   870  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   871  /** \brief Returns the clock status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   872   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   873   * \return clock status (off / on)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   874   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   875  IFX_INLINE boolean IfxAsclin_getClockStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   876  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   877  /** \brief Returns the collision detection error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   878   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   879   * \return collision detection error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   880   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   881  IFX_INLINE boolean IfxAsclin_getCollisionDetectionErrorFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   882  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   883  /** \brief Returns  the falling edge detected flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   884   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   885   * \return falling edge detected flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   886   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   887  IFX_INLINE boolean IfxAsclin_getFallingEdgeDetectedFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   888  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   889  /** \brief Returns the frame error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   890   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   891   * \return frame error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   892   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   893  IFX_INLINE boolean IfxAsclin_getFrameErrorFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   894  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   895  /** \brief Returns the header timeout flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   896   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   897   * \return header timeout flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   898   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   899  IFX_INLINE boolean IfxAsclin_getHeaderTimeoutFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   900  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   901  /** \brief Returns the kernel reset status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   902   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   903   * \return kernel reset status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   904   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   905  IFX_INLINE boolean IfxAsclin_getKernelResetStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   906  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   907  /** \brief Returns the LIN auto baudrate detection error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   908   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   909   * \return LIN auto baudrate detection error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   910   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   911  IFX_INLINE boolean IfxAsclin_getLinAutoBaudDetectionErrorFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   912  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   913  /** \brief Returns the LIN checksum error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   914   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   915   * \return LIN checksum error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   916   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   917  IFX_INLINE boolean IfxAsclin_getLinChecksumErrorFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   918  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   919  /** \brief Returns the LIN parity error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   920   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   921   * \return LIN parity error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   922   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   923  IFX_INLINE boolean IfxAsclin_getLinParityErrorFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   924  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   925  /** \brief Returns the module status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   926   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   927   * \return module status (enabled / disabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   928   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   929  IFX_INLINE boolean IfxAsclin_getModuleStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   930  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   931  /** \brief Returns the parity error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   932   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   933   * \return parity error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   934   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   935  IFX_INLINE boolean IfxAsclin_getParityErrorFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   936  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   937  /** \brief Returns the division ratio of the predivider (prescaler)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   938   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   939   * \return value of prescaler
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   940   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   941  IFX_INLINE uint16 IfxAsclin_getPrescaler(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   942  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   943  /** \brief Returns the raising edge detected flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   944   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   945   * \return raising edge detected flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   946   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   947  IFX_INLINE boolean IfxAsclin_getRaisingEdgeDetectedFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   948  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   949  /** \brief Returns the received signal status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   950   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   951   * \return received signal status (0 is low & 1 is high)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   952   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   953  IFX_INLINE boolean IfxAsclin_getReceiveSignalStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   954  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   955  /** \brief Returns the response timeout flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   956   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   957   * \return response timeout flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   958   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   959  IFX_INLINE boolean IfxAsclin_getResponseTimeoutFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   960  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   961  /** \brief Returns the current filling level of Tx FIFO
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   962   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   963   * \return current filling level of Rx FIFO
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   964   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   965  IFX_INLINE uint8 IfxAsclin_getRxFifoFillLevel(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   966  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   967  /** \brief Returns the Rx FIFO level flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   968   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   969   * \return Rx FIFO level flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   970   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   971  IFX_INLINE boolean IfxAsclin_getRxFifoFillLevelFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   972  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   973  /** \brief Returns the receive FIFO inlet width
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   974   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   975   * \return number of bytes read to the Rx FIFO with one FPI bus read
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   976   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   977  IFX_INLINE uint8 IfxAsclin_getRxFifoOutletWidth(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   978  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   979  /** \brief Returns the Rx FIFO overflow flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   980   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   981   * \return Rx FIFO overflow flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   982   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   983  IFX_INLINE boolean IfxAsclin_getRxFifoOverflowFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   984  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   985  /** \brief Returns the Rx FIFO underflow flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   986   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   987   * \return Rx FIFO underflow flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   988   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   989  IFX_INLINE boolean IfxAsclin_getRxFifoUnderflowFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   990  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   991  /** \brief Returns the receive header end flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   992   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   993   * \return receive header end flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   994   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   995  IFX_INLINE boolean IfxAsclin_getRxHeaderEndFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   996  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   997  /** \brief Returns the receive response end flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   998   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   999   * \return receive response end flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1000   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1001  IFX_INLINE boolean IfxAsclin_getRxResponseEndFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1002  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1003  /** \brief Returns the transmission pending flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1004   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1005   * \return transmission pending flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1006   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1007  IFX_INLINE boolean IfxAsclin_getTransmissionCompletedFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1008  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1009  /** \brief Returns the transmit signal status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1010   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1011   * \return transmit signal status (0 is low & 1 is high)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1012   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1013  IFX_INLINE boolean IfxAsclin_getTransmitSignalStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1014  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1015  /** \brief Returns the current filling level of Tx FIFO
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1016   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1017   * \return current filling level of Tx FIFO
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1018   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1019  IFX_INLINE uint8 IfxAsclin_getTxFifoFillLevel(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1020  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1021  /** \brief Returns the Tx FIFO level flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1022   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1023   * \return Tx FIFO level flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1024   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1025  IFX_INLINE boolean IfxAsclin_getTxFifoFillLevelFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1026  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1027  /** \brief Returns the transmit FIFO inlet width
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1028   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1029   * \return number of bytes written to the Tx FIFO with one FPI bus write
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1030   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1031  IFX_INLINE uint8 IfxAsclin_getTxFifoInletWidth(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1032  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1033  /** \brief Returns the Tx FIFO overflow flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1034   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1035   * \return Tx FIFO overflow flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1036   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1037  IFX_INLINE boolean IfxAsclin_getTxFifoOverflowFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1038  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1039  /** \brief Returns the transmit header end flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1040   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1041   * \return transmit header end flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1042   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1043  IFX_INLINE boolean IfxAsclin_getTxHeaderEndFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1044  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1045  /** \brief Returns the transmit response end flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1046   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1047   * \return transmit response end flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1048   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1049  IFX_INLINE boolean IfxAsclin_getTxResponseEndFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1050  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1051  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1052   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1053   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1054   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1055   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1056  IFX_INLINE void IfxAsclin_setSleepMode(Ifx_ASCLIN *asclin, IfxAsclin_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1057  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1058  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1059  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1060  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1061  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1062  /** \brief API to get the address for ASCLIN HW module register memory map
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1063   * \param asclin Resource index of the ASCLIN
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1064   * \return ASCLIN module register address
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1065   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1066  IFX_EXTERN Ifx_ASCLIN *IfxAsclin_getAddress(IfxAsclin_Index asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1067  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1068  /** \brief Returns the ASCLIN module FA frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1069   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1070   * \return Returns the ASCLIN module FA frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1071   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1072  IFX_EXTERN float32 IfxAsclin_getFaFrequency(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1073  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1074  /** \brief API to get the resource index of the ASCLIN specified.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1075   * \return asclin resource index
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1076   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1077  IFX_EXTERN IfxAsclin_Index IfxAsclin_getIndex(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1078  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1079  /** \brief Returns the OVS frequency
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1080   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1081   * \return Returns the ASCLIN module OVS frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1082   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1083  IFX_EXTERN float32 IfxAsclin_getOvsFrequency(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1084  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1085  /** \brief Returns the PD frequency
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1086   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1087   * \return Returns the ASCLIN module PD frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1088   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1089  IFX_EXTERN float32 IfxAsclin_getPdFrequency(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1090  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1091  /** \brief Returns the SHIFT frequency
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1092   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1093   * \return Returns the ASCLIN module SHIFT frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1094   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1095  IFX_EXTERN float32 IfxAsclin_getShiftFrequency(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1096  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1097  /** \brief resets Asclin kernel
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1098   * \param asclin pointer to ASCLIN resgisters
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1099   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1100   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1101  IFX_EXTERN void IfxAsclin_resetModule(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1102  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1103  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1104  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1105  /** \addtogroup IfxLld_Asclin_Std_Configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1106   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1107  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1108  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1109  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1110  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1111  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1112  /** \brief disables all flags
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1113   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1114   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1115   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1116  IFX_INLINE void IfxAsclin_disableAllFlags(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1117  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1118  /** \brief Enables/disables the auto baudrate detection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1119   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1120   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1121   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1122   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1123  IFX_INLINE void IfxAsclin_enableAutoBaudrateDetection(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1124  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1125  /** \brief Enables/disables break detected flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1126   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1127   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1128   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1129   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1130  IFX_INLINE void IfxAsclin_enableBreakDetectedFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1131  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1132  /** \brief Enables/disables the collision detection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1133   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1134   * \param enable choice (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1135   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1136   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1137  IFX_INLINE void IfxAsclin_enableCollisionDetection(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1138  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1139  /** \brief Enables/disables LIN collision detection error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1140   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1141   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1142   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1143   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1144  IFX_INLINE void IfxAsclin_enableCollisionDetectionErrorFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1145  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1146  /** \brief Enables/disables CTS
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1147   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1148   * \param enable choice (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1149   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1150   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1151  IFX_INLINE void IfxAsclin_enableCts(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1152  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1153  /** \brief Enables/disables falling edge detected flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1154   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1155   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1156   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1157   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1158  IFX_INLINE void IfxAsclin_enableFallingEdgeDetectedFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1159  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1160  /** \brief Enables/disables frame error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1161   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1162   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1163   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1164   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1165  IFX_INLINE void IfxAsclin_enableFrameErrorFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1166  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1167  /** \brief Enables/disables the hardware checksum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1168   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1169   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1170   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1171   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1172  IFX_INLINE void IfxAsclin_enableHardwareChecksum(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1173  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1174  /** \brief Enables/disables header timeout flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1175   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1176   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1177   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1178   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1179  IFX_INLINE void IfxAsclin_enableHeaderTimeoutFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1180  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1181  /** \brief Enables/disables LIN auto baudrate detection error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1182   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1183   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1184   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1185   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1186  IFX_INLINE void IfxAsclin_enableLinAutoBaudDetectionErrorFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1187  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1188  /** \brief Enables/disables LIN checksum error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1189   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1190   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1192   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1193  IFX_INLINE void IfxAsclin_enableLinChecksumErrorFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1194  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1195  /** \brief Enables/disables LIN parity error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1196   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1197   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1198   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1199   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1200  IFX_INLINE void IfxAsclin_enableLinParityErrorFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1201  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1202  /** \brief Enables/disables the loop back mode
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1203   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1204   * \param enable choice (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1205   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1206   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1207  IFX_INLINE void IfxAsclin_enableLoopBackMode(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1208  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1209  /** \brief Enables/disables the parity bit attachment to tha data bits
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1210   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1211   * \param enable choice (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1212   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1213   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1214  IFX_INLINE void IfxAsclin_enableParity(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1215  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1216  /** \brief Enables/disables parity error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1217   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1218   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1219   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1220   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1221  IFX_INLINE void IfxAsclin_enableParityErrorFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1222  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1223  /** \brief Enables/disables raising edge detected flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1224   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1225   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1226   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1227   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1228  IFX_INLINE void IfxAsclin_enableRaisingEdgeDetectedFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1229  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1230  /** \brief Enables/disables response timeout flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1231   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1232   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1233   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1234   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1235  IFX_INLINE void IfxAsclin_enableResponseTimeoutFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1236  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1237  /** \brief Enables/disables Rx FIFO level flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1238   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1239   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1240   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1241   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1242  IFX_INLINE void IfxAsclin_enableRxFifoFillLevelFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1243  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1244  /** \brief Enables/disables the receive FIFO outlet to allow filling of Rx FIFO through shift register
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1245   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1246   * \param enable choice (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1247   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1248   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1249  IFX_INLINE void IfxAsclin_enableRxFifoInlet(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1250  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1251  /** \brief Enables/disables Rx FIFO overflow flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1252   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1253   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1254   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1255   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1256  IFX_INLINE void IfxAsclin_enableRxFifoOverflowFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1257  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1258  /** \brief Enables/disables Rx FIFO underflow flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1259   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1260   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1261   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1262   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1263  IFX_INLINE void IfxAsclin_enableRxFifoUnderflowFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1264  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1265  /** \brief Enables/disables receive header end flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1266   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1267   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1268   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1269   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1270  IFX_INLINE void IfxAsclin_enableRxHeaderEndFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1271  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1272  /** \brief Enables/disables receive response end flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1273   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1274   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1275   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1276   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1277  IFX_INLINE void IfxAsclin_enableRxResponseEndFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1278  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1279  /** \brief Enables/disables transmission completed flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1280   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1281   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1282   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1283   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1284  IFX_INLINE void IfxAsclin_enableTransmissionCompletedFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1285  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1286  /** \brief Enables/disables Tx FIFO level flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1287   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1288   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1290   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1291  IFX_INLINE void IfxAsclin_enableTxFifoFillLevelFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1292  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1293  /** \brief Enables/disables the transmit FIFO outlet to allow transmission
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1294   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1295   * \param enable choice (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1297   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1298  IFX_INLINE void IfxAsclin_enableTxFifoOutlet(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1299  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1300  /** \brief Enables/disables Tx FIFO overflow flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1301   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1302   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1303   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1304   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1305  IFX_INLINE void IfxAsclin_enableTxFifoOverflowFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1306  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1307  /** \brief Enables/disables transmit header end flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1308   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1309   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1310   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1311   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1312  IFX_INLINE void IfxAsclin_enableTxHeaderEndFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1313  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1314  /** \brief Enables/disables transmit response end flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1315   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1316   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1317   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1318   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1319  IFX_INLINE void IfxAsclin_enableTxResponseEndFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1320  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1321  /** \brief Returns the module's suspend state.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1322   * TRUE :if module is suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1323   * FALSE:if module is not yet suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1324   * \param asclin Pointer to ASCLIN module registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1325   * \return Suspend status (TRUE / FALSE)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1326   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1327  IFX_INLINE boolean IfxAsclin_isModuleSuspended(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1328  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1329  /** \brief Selects the clock polarity
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1330   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1331   * \param cpol CPOL selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1332   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1333   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1334  IFX_INLINE void IfxAsclin_setClockPolarity(Ifx_ASCLIN *asclin, IfxAsclin_ClockPolarity cpol);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1335  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1336  /** \brief Selects the CTS input pin
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1337   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1338   * \param ctsi CTS input pin selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1339   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1340   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1341  IFX_INLINE void IfxAsclin_setCtsInput(Ifx_ASCLIN *asclin, IfxAsclin_CtsInputSelect ctsi);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1342  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1343  /** \brief Selects the module's mode of operation
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1344   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1345   * \param mode mode selction
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1346   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1347   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1348  IFX_INLINE void IfxAsclin_setFrameMode(Ifx_ASCLIN *asclin, IfxAsclin_FrameMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1349  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1350  /** \brief Selects the RTS/CTS polarity
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1351   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1352   * \param rcpol RCPOL selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1353   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1354   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1355  IFX_INLINE void IfxAsclin_setRtsCtsPolarity(Ifx_ASCLIN *asclin, IfxAsclin_RtsCtsPolarity rcpol);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1356  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1357  /** \brief Selects the Rx FIFO interupt generation mode
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1358   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1359   * \param mode mode selction
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1360   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1361   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1362  IFX_INLINE void IfxAsclin_setRxFifoInterruptMode(Ifx_ASCLIN *asclin, IfxAsclin_FifoInterruptMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1363  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1364  /** \brief Selects the alternate input for Rx signal
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1365   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1366   * \param alti alternate input selection of Rx signal
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1367   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1368   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1369  IFX_INLINE void IfxAsclin_setRxInput(Ifx_ASCLIN *asclin, IfxAsclin_RxInputSelect alti);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1370  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1371  /** \brief Selects the slave polarity
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1372   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1373   * \param spol SPOL selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1374   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1375   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1376  IFX_INLINE void IfxAsclin_setSlavePolarity(Ifx_ASCLIN *asclin, IfxAsclin_SlavePolarity spol);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1377  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1378  /** \brief Configure the Module to Hard/Soft suspend mode.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1379   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1380   * \param asclin Pointer to ASCLIN module registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1381   * \param mode Module suspend mode
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1382   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1383   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1384  IFX_INLINE void IfxAsclin_setSuspendMode(Ifx_ASCLIN *asclin, IfxAsclin_SuspendMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1385  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1386  /** \brief Selects the Tx FIFO interupt generation mode
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1387   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1388   * \param mode mode selction
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1389   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1390   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1391  IFX_INLINE void IfxAsclin_setTxFifoInterruptMode(Ifx_ASCLIN *asclin, IfxAsclin_FifoInterruptMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1392  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1393  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1394  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1395  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1396  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1397  /** \brief Set the bit timing
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1398   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1399   * \note this function required FA source and the PD frequency to be set to their final values
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1400   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1401   * \param baudrate Required baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1402   * \param oversampling The oversampling factor
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1403   * \param samplepoint The sample point position
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1404   * \param medianFilter Number of samples per bit (median filter)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1405   * \return TRUE if configuration was successfull
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1406   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1407  IFX_EXTERN boolean IfxAsclin_setBitTiming(Ifx_ASCLIN *asclin, float32 baudrate, IfxAsclin_OversamplingFactor oversampling, IfxAsclin_SamplePointPosition samplepoint, IfxAsclin_SamplesPerBit medianFilter);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1408  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1409  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1410  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1411  /** \addtogroup IfxLld_Asclin_Std_External
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1412   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1413  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1414  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1415  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1416  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1417  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1418  /** \brief Disables the module
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1419   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1420   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1421   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1422  IFX_EXTERN void IfxAsclin_disableModule(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1423  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1424  /** \brief Enables the ASC error interrupt Flags
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1425   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1426   * \param parEnable parity error
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1427   * \param rfoEnable Rx FIFO overflow error
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1428   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1429   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1430  IFX_EXTERN void IfxAsclin_enableAscErrorFlags(Ifx_ASCLIN *asclin, boolean parEnable, boolean rfoEnable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1431  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1432  /** \brief Enables the module
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1433   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1435   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1436  IFX_EXTERN void IfxAsclin_enableModule(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1437  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1438  /** \brief Returns the SRC pointer for ERR
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1439   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1440   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1441  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxAsclin_getSrcPointerEr(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1442  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1443  /** \brief Returns the  SRC pointer for Rx
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1444   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1445   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1446  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxAsclin_getSrcPointerRx(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1447  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1448  /** \brief Returns the SRC pointer for Tx
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1449   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1450   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1451  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxAsclin_getSrcPointerTx(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1452  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1453  /** \brief Reads data up to 16 bits
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1454   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1455   * \param data Array where the read data shall be stored
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1456   * \param count number of items to read
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1457   * \return number of items that could not be read
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1458   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1459  IFX_EXTERN uint32 IfxAsclin_read16(Ifx_ASCLIN *asclin, uint16 *data, uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1460  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1461  /** \brief Reads data up to 32 bits
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1462   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1463   * \param data Array where the read data shall be stored
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1464   * \param count number of items to read
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1465   * \return number of items that could not be read
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1466   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1467  IFX_EXTERN uint32 IfxAsclin_read32(Ifx_ASCLIN *asclin, uint32 *data, uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1468  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1469  /** \brief Reads data up to 8 bits
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1470   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1471   * \param data Array where the read data shall be stored
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1472   * \param count number of items to read
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1473   * \return number of items that could not be read
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1474   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1475  IFX_EXTERN uint32 IfxAsclin_read8(Ifx_ASCLIN *asclin, uint8 *data, uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1476  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1477  /** \brief Sets the baudrate bit fields
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1478   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1479   * \param prescaler division ratio of the predivider
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1480   * \param numerator numerator of the fractional divider
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1481   * \param denominator denominator of the fractional divider
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1482   * \param oversampling division ratio of the baudrate postdivider
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1483   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1484   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1485  IFX_EXTERN void IfxAsclin_setBaudrateBitFields(Ifx_ASCLIN *asclin, uint16 prescaler, uint16 numerator, uint16 denominator, IfxAsclin_OversamplingFactor oversampling);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1486  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1487  /** \brief Sets the  clock source
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1488   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1489   * \param clockSource clock source selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1490   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1491   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1492  IFX_EXTERN void IfxAsclin_setClockSource(Ifx_ASCLIN *asclin, IfxAsclin_ClockSource clockSource);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1493  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1494  /** \brief Writes data up to 16 bits
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1495   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1496   * \param data Array of data to be send
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1497   * \param count number of items to be send
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1498   * \return the number of items that could not be send
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1499   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1500  IFX_EXTERN uint32 IfxAsclin_write16(Ifx_ASCLIN *asclin, uint16 *data, uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1501  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1502  /** \brief Writes data up to 32 bits
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1503   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1504   * \param data Array of data to be send
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1505   * \param count number of items to be send
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1506   * \return the number of items that could not be send
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1507   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1508  IFX_EXTERN uint32 IfxAsclin_write32(Ifx_ASCLIN *asclin, uint32 *data, uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1509  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1510  /** \brief Writes data up to 8 bits
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1511   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1512   * \param data Array of data to be send
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1513   * \param count number of items to be send
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1514   * \return the number of items that could not be send
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1515   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1516  IFX_EXTERN uint32 IfxAsclin_write8(Ifx_ASCLIN *asclin, uint8 *data, uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1517  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1518  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1519  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1520  /** \addtogroup IfxLld_Asclin_Std_IO
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1521   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1522  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1524  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1525  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1526  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1527  /** \brief Initializes a CTS input
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1528   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1529   * Attention: the kernel clock has to be disabled whenever the input multiplexer is changed.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1530   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1531   * This can be done with IfxAsclin_setClockSource(asclinSFR, IfxAsclin_ClockSource_noClock);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1532   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1533   * After the function call, the current clock can be enabled again.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1534   * \param cts the CTS Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1535   * \param inputMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1536   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1537   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1538   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1539  IFX_INLINE void IfxAsclin_initCtsPin(const IfxAsclin_Cts_In *cts, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1540  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1541  /** \brief Initializes a RTS output
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1542   * \param rts the RTS Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1543   * \param outputMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1544   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1545   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1546   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1547  IFX_INLINE void IfxAsclin_initRtsPin(const IfxAsclin_Rts_Out *rts, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1548  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1549  /** \brief Initializes a RX input
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1550   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1551   * Attention: the kernel clock has to be disabled whenever the input multiplexer is changed.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1552   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1553   * This can be done with IfxAsclin_setClockSource(asclinSFR, IfxAsclin_ClockSource_noClock);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1554   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1555   * After the function call, the current clock can be enabled again.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1556   * \param rx the RX Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1557   * \param inputMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1558   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1559   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1560   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1561  IFX_INLINE void IfxAsclin_initRxPin(const IfxAsclin_Rx_In *rx, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1562  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1563  /** \brief Initializes a SCLK output
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1564   * \param sclk the SCLK Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1565   * \param outputMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1566   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1567   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1568   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1569  IFX_INLINE void IfxAsclin_initSclkPin(const IfxAsclin_Sclk_Out *sclk, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1570  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1571  /** \brief Initializes a SLSO output
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1572   * \param slso the SLSO Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1573   * \param outputMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1574   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1575   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1576   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1577  IFX_INLINE void IfxAsclin_initSlsoPin(const IfxAsclin_Slso_Out *slso, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1578  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1579  /** \brief Initializes a TX output
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1580   * \param tx the TX Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1581   * \param outputMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1582   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1583   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1584   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1585  IFX_INLINE void IfxAsclin_initTxPin(const IfxAsclin_Tx_Out *tx, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1586  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1587  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1588  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1589  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1590  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1591  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1592  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1593  /**
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1594   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1595   * \return returns the value of RxDATA register
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1596   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1597  IFX_INLINE uint32 IfxAsclin_readRxData(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1598  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1599  /**
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1600   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1601   * \param data data to be written
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1602   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1603   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1604  IFX_INLINE void IfxAsclin_writeTxData(Ifx_ASCLIN *asclin, uint32 data);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1605  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1606  /** \brief Returns the status of all error flags
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1607   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1608   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1609   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1610  IFX_INLINE uint16 IfxAsclin_getAllErrorFlagsStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1611  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1612  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1613  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1614  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1615  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1616  IFX_INLINE void IfxAsclin_clearAllFlags(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1617  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1618      asclin->FLAGSCLEAR.U = 0xFFFFFFFF;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1619  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1620  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1621  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1622  IFX_INLINE void IfxAsclin_clearBreakDetectedFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1623  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1624      asclin->FLAGSCLEAR.B.BDC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1625  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1626  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1627  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1628  IFX_INLINE void IfxAsclin_clearCollisionDetectionErrorFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1629  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1630      asclin->FLAGSCLEAR.B.CEC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1631  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1632  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1633  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1634  IFX_INLINE void IfxAsclin_clearFallingEdgeDetectedFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1635  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1636      asclin->FLAGSCLEAR.B.FEDC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1637  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1638  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1639  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1640  IFX_INLINE void IfxAsclin_clearFrameErrorFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1641  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1642      asclin->FLAGSCLEAR.B.FEC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1643  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1644  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1645  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1646  IFX_INLINE void IfxAsclin_clearHeaderTimeoutFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1647  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1648      asclin->FLAGSCLEAR.B.HTC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1649  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1650  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1651  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1652  IFX_INLINE void IfxAsclin_clearKernelResetStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1653  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1654      asclin->KRSTCLR.B.CLR = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1655  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1656  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1657  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1658  IFX_INLINE void IfxAsclin_clearLinAutoBaudDetectionErrorFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1659  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1660      asclin->FLAGSCLEAR.B.LAC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1661  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1662  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1663  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1664  IFX_INLINE void IfxAsclin_clearLinChecksumErrorFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1665  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1666      asclin->FLAGSCLEAR.B.LCC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1667  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1668  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1669  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1670  IFX_INLINE void IfxAsclin_clearLinParityErrorFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1671  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1672      asclin->FLAGSCLEAR.B.LPC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1673  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1674  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1675  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1676  IFX_INLINE void IfxAsclin_clearParityErrorFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1677  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1678      asclin->FLAGSCLEAR.B.PEC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1679  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1680  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1681  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1682  IFX_INLINE void IfxAsclin_clearRaisingEdgeDetectedFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1683  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1684      asclin->FLAGSCLEAR.B.REDC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1685  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1686  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1687  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1688  IFX_INLINE void IfxAsclin_clearResponseTimeoutFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1689  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1690      asclin->FLAGSCLEAR.B.RTC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1691  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1692  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1693  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1694  IFX_INLINE void IfxAsclin_clearRxFifoFillLevelFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1695  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1696      asclin->FLAGSCLEAR.B.RFLC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1697  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1698  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1699  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1700  IFX_INLINE void IfxAsclin_clearRxFifoOverflowFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1701  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1702      asclin->FLAGSCLEAR.B.RFOC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1703  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1704  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1705  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1706  IFX_INLINE void IfxAsclin_clearRxFifoUnderflowFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1707  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1708      asclin->FLAGSCLEAR.B.RFUC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1709  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1710  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1711  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1712  IFX_INLINE void IfxAsclin_clearRxHeaderEndFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1713  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1714      asclin->FLAGSCLEAR.B.RHC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1715  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1716  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1717  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1718  IFX_INLINE void IfxAsclin_clearRxResponseEndFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1719  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1720      asclin->FLAGSCLEAR.B.RRC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1721  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1722  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1723  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1724  IFX_INLINE void IfxAsclin_clearTransmissionCompletedFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1725  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1726      asclin->FLAGSCLEAR.B.TCC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1727  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1728  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1729  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1730  IFX_INLINE void IfxAsclin_clearTxFifoFillLevelFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1731  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1732      asclin->FLAGSCLEAR.B.TFLC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1733  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1734  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1735  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1736  IFX_INLINE void IfxAsclin_clearTxFifoOverflowFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1737  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1738      asclin->FLAGSCLEAR.B.TFOC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1739  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1740  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1741  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1742  IFX_INLINE void IfxAsclin_clearTxHeaderEndFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1743  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1744      asclin->FLAGSCLEAR.B.THC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1745  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1746  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1747  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1748  IFX_INLINE void IfxAsclin_clearTxResponseEndFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1749  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1750      asclin->FLAGSCLEAR.B.TRC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1751  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1752  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1753  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1754  IFX_INLINE void IfxAsclin_disableAllFlags(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1755  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1756      asclin->FLAGSENABLE.U = 0x00000000;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1757  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1758  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1759  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1760  IFX_INLINE void IfxAsclin_enableAutoBaudrateDetection(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1761  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1762      asclin->LIN.CON.B.ABD = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1763  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1764  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1765  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1766  IFX_INLINE void IfxAsclin_enableBreakDetectedFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1767  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1768      asclin->FLAGSENABLE.B.BDE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1769  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1770  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1771  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1772  IFX_INLINE void IfxAsclin_enableCollisionDetection(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1773  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1774      asclin->FRAMECON.B.CEN = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1775  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1776  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1777  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1778  IFX_INLINE void IfxAsclin_enableCollisionDetectionErrorFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1779  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1780      asclin->FLAGSENABLE.B.CEE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1781  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1782  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1783  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1784  IFX_INLINE void IfxAsclin_enableCts(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1785  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1786      asclin->IOCR.B.CTSEN = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1787  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1788  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1789  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1790  IFX_INLINE void IfxAsclin_enableFallingEdgeDetectedFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1791  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1792      asclin->FLAGSENABLE.B.FEDE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1793  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1794  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1795  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1796  IFX_INLINE void IfxAsclin_enableFrameErrorFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1797  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1798      asclin->FLAGSENABLE.B.FEE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1799  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1800  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1801  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1802  IFX_INLINE void IfxAsclin_enableHardwareChecksum(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1803  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1804      asclin->LIN.CON.B.CSEN = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1805  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1806  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1807  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1808  IFX_INLINE void IfxAsclin_enableHeaderTimeoutFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1809  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1810      asclin->FLAGSENABLE.B.HTE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1811  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1812  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1813  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1814  IFX_INLINE void IfxAsclin_enableLinAutoBaudDetectionErrorFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1815  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1816      asclin->FLAGSENABLE.B.LAE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1817  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1818  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1819  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1820  IFX_INLINE void IfxAsclin_enableLinChecksumErrorFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1821  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1822      asclin->FLAGSENABLE.B.LCE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1823  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1824  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1825  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1826  IFX_INLINE void IfxAsclin_enableLinParityErrorFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1827  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1828      asclin->FLAGSENABLE.B.LPE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1829  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1830  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1831  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1832  IFX_INLINE void IfxAsclin_enableLoopBackMode(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1833  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1834      asclin->IOCR.B.LB = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1835  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1836  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1837  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1838  IFX_INLINE void IfxAsclin_enableParity(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1839  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1840      asclin->FRAMECON.B.PEN = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1841  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1842  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1843  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1844  IFX_INLINE void IfxAsclin_enableParityErrorFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1845  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1846      asclin->FLAGSENABLE.B.PEE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1847  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1848  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1849  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1850  IFX_INLINE void IfxAsclin_enableRaisingEdgeDetectedFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1851  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1852      asclin->FLAGSENABLE.B.REDE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1853  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1854  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1855  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1856  IFX_INLINE void IfxAsclin_enableResponseTimeoutFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1857  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1858      asclin->FLAGSENABLE.B.RTE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1859  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1860  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1861  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1862  IFX_INLINE void IfxAsclin_enableRxFifoFillLevelFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1863  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1864      asclin->FLAGSENABLE.B.RFLE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1865  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1866  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1867  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1868  IFX_INLINE void IfxAsclin_enableRxFifoInlet(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1869  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1870      asclin->RXFIFOCON.B.ENI = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1871  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1872  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1873  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1874  IFX_INLINE void IfxAsclin_enableRxFifoOverflowFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1875  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1876      asclin->FLAGSENABLE.B.RFOE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1877  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1878  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1879  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1880  IFX_INLINE void IfxAsclin_enableRxFifoUnderflowFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1881  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1882      asclin->FLAGSENABLE.B.RFUE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1883  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1884  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1885  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1886  IFX_INLINE void IfxAsclin_enableRxHeaderEndFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1887  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1888      asclin->FLAGSENABLE.B.RHE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1889  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1890  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1891  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1892  IFX_INLINE void IfxAsclin_enableRxResponseEndFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1893  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1894      asclin->FLAGSENABLE.B.RRE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1895  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1896  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1897  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1898  IFX_INLINE void IfxAsclin_enableTransmissionCompletedFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1899  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1900      asclin->FLAGSENABLE.B.TCE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1901  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1902  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1903  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1904  IFX_INLINE void IfxAsclin_enableTxFifoFillLevelFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1905  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1906      asclin->FLAGSENABLE.B.TFLE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1907  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1908  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1909  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1910  IFX_INLINE void IfxAsclin_enableTxFifoOutlet(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1911  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1912      asclin->TXFIFOCON.B.ENO = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1913  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1914  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1915  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1916  IFX_INLINE void IfxAsclin_enableTxFifoOverflowFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1917  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1918      asclin->FLAGSENABLE.B.TFOE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1919  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1920  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1921  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1922  IFX_INLINE void IfxAsclin_enableTxHeaderEndFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1923  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1924      asclin->FLAGSENABLE.B.THE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1925  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1926  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1927  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1928  IFX_INLINE void IfxAsclin_enableTxResponseEndFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1929  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1930      asclin->FLAGSENABLE.B.TRE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1931  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1932  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1933  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1934  IFX_INLINE void IfxAsclin_flushRxFifo(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1935  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1936      asclin->RXFIFOCON.B.FLUSH = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1937  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1938  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1939  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1940  IFX_INLINE void IfxAsclin_flushTxFifo(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1941  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1942      asclin->TXFIFOCON.B.FLUSH = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1943  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1944  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1945  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1946  IFX_INLINE boolean IfxAsclin_getBreakDetectedFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1947  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1948      return asclin->FLAGS.B.BD;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1949  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1950  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1951  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1952  IFX_INLINE uint8 IfxAsclin_getClockSource(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1953  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1954      return asclin->CSR.B.CLKSEL;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1955  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1956  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1957  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1958  IFX_INLINE boolean IfxAsclin_getClockStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1959  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1960      return asclin->CSR.B.CON;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1961  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1962  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1963  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1964  IFX_INLINE boolean IfxAsclin_getCollisionDetectionErrorFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1965  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1966      return asclin->FLAGS.B.CE;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1967  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1968  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1969  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1970  IFX_INLINE boolean IfxAsclin_getFallingEdgeDetectedFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1971  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1972      return asclin->FLAGS.B.FED;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1973  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1974  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1975  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1976  IFX_INLINE boolean IfxAsclin_getFrameErrorFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1977  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1978      return asclin->FLAGS.B.FE;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1979  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1980  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1981  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1982  IFX_INLINE boolean IfxAsclin_getHeaderTimeoutFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1983  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1984      return asclin->FLAGS.B.HT;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1985  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1986  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1987  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1988  IFX_INLINE boolean IfxAsclin_getKernelResetStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1989  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1990      return asclin->KRST0.B.RSTSTAT;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1991  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1992  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1993  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1994  IFX_INLINE boolean IfxAsclin_getLinAutoBaudDetectionErrorFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1995  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1996      return asclin->FLAGS.B.LA;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1997  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1998  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1999  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2000  IFX_INLINE boolean IfxAsclin_getLinChecksumErrorFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2001  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2002      return asclin->FLAGS.B.LC;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2003  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2004  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2005  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2006  IFX_INLINE boolean IfxAsclin_getLinParityErrorFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2007  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2008      return asclin->FLAGS.B.LP;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2009  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2010  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2011  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2012  IFX_INLINE boolean IfxAsclin_getModuleStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2013  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2014      return asclin->CLC.B.DISS;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2015  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2016  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2017  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2018  IFX_INLINE boolean IfxAsclin_getParityErrorFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2019  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2020      return asclin->FLAGS.B.PE;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2021  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2022  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2023  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2024  IFX_INLINE uint16 IfxAsclin_getPrescaler(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2025  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2026      return asclin->BITCON.B.PRESCALER + 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2027  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2028  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2029  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2030  IFX_INLINE boolean IfxAsclin_getRaisingEdgeDetectedFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2031  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2032      return asclin->FLAGS.B.RED;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2033  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2034  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2035  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2036  IFX_INLINE boolean IfxAsclin_getReceiveSignalStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2037  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2038      return asclin->IOCR.B.RXM;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2039  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2040  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2041  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2042  IFX_INLINE boolean IfxAsclin_getResponseTimeoutFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2043  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2044      return asclin->FLAGS.B.RT;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2045  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2046  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2047  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2048  IFX_INLINE uint8 IfxAsclin_getRxFifoFillLevel(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2049  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2050      return asclin->RXFIFOCON.B.FILL;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2051  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2052  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2053  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2054  IFX_INLINE boolean IfxAsclin_getRxFifoFillLevelFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2055  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2056      return asclin->FLAGS.B.RFL;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2057  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2058  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2059  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2060  IFX_INLINE uint8 IfxAsclin_getRxFifoOutletWidth(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2061  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2062      return asclin->RXFIFOCON.B.OUTW;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2063  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2064  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2065  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2066  IFX_INLINE boolean IfxAsclin_getRxFifoOverflowFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2067  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2068      return asclin->FLAGS.B.RFO;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2069  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2070  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2071  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2072  IFX_INLINE boolean IfxAsclin_getRxFifoUnderflowFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2073  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2074      return asclin->FLAGS.B.RFU;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2075  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2076  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2077  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2078  IFX_INLINE boolean IfxAsclin_getRxHeaderEndFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2079  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2080      return asclin->FLAGS.B.RH;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2081  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2082  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2083  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2084  IFX_INLINE boolean IfxAsclin_getRxResponseEndFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2085  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2086      return asclin->FLAGS.B.RR;
	ld.bu	d15,[a12]52
.L150:
	fret
.L48:
	; End of function
	.sdecl	'.text.inttab0.intvec.065',code
	.sect	'.text.inttab0.intvec.065'

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   101  
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   102  IFX_INTERRUPT(ISR_ASCLIN_Tx, 0, ASCLIN_MASTER_TX)
	movh.a	a14,#@his(ISR_ASCLIN_Tx)
	lea	a14,[a14]@los(ISR_ASCLIN_Tx)
	ji	a14
	.sdecl	'.text.ASCLIN_LIN_Master.ISR_ASCLIN_Tx',code,cluster('ISR_ASCLIN_Tx')
	.sect	'.text.ASCLIN_LIN_Master.ISR_ASCLIN_Tx'
	.align	2
	
	.global	ISR_ASCLIN_Tx
; Function ISR_ASCLIN_Tx
.L19:
ISR_ASCLIN_Tx:	.type	func
	svlcx
	sub.a	a10,#8
.L92:

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   103  {
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   104        /* check Tx header end acknowledgement */
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   105      if (IfxAsclin_getTxHeaderEndFlagStatus(g_linMaster.asclin)) /* THE flag*/
	fcall	.cocofun_3
.L128:
	jz.t	d15:0,.L4
.L129:

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   106      {
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   107          if (HandleID == MASTER_ID_0x26)
	ld.bu	d0,HandleID
.L130:
	mov	d15,#38
.L131:
	jne	d15,d0,.L5
.L132:

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   108          {
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   109              IfxAsclin_Lin_sendResponse(&g_linMaster, Tx_data, 8);
	lea	a5,Tx_data
.L133:
	mov	d4,#8
	mov.aa	a4,a15
	call	IfxAsclin_Lin_sendResponse
.L134:
	j	.L6
.L5:

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   110          }
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   111          else if(HandleID == SLAVE_ID_0x33)
	mov	d15,#51
.L135:
	jne	d15,d0,.L7
.L136:

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   112          {
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   113              IfxAsclin_Lin_receiveResponse(&g_linMaster, Rx_data, 8);
	lea	a5,Rx_data
.L137:
	mov	d4,#8
	mov.aa	a4,a15
	call	IfxAsclin_Lin_receiveResponse
.L138:

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   114  
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   115              /* Receive interrupt occurred */
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   116              if (IfxAsclin_getRxFifoFillLevelFlagStatus(g_linMaster.asclin))
	ld.a	a2,[a15]
.L72:

; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	     2   * \file IfxAsclin.h
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	     3   * \brief ASCLIN  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	     4   * \ingroup IfxLld_Asclin
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    10   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    11   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    14   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    16   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    19   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    20   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    21   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    22   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    23   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    24   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    25   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    26   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    27   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    28   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    29   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    30   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    31   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    32   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    33   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    40   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    42   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    43   * \defgroup IfxLld_Asclin_Std_Enumerations Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    44   * \ingroup IfxLld_Asclin_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    45   * \defgroup IfxLld_Asclin_Std_Operative Operative Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    46   * \ingroup IfxLld_Asclin_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    47   * \defgroup IfxLld_Asclin_Std_Utility Utility Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    48   * \ingroup IfxLld_Asclin_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    49   * \defgroup IfxLld_Asclin_Std_Configuration Configuration Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    50   * \ingroup IfxLld_Asclin_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    51   * \defgroup IfxLld_Asclin_Std_External External Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    52   * \ingroup IfxLld_Asclin_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    53   * \defgroup IfxLld_Asclin_Std_IO IO Pin Configuration Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    54   * \ingroup IfxLld_Asclin_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    55   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    56  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    57  #ifndef IFXASCLIN_H
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    58  #define IFXASCLIN_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    59  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    60  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    61  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    62  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    63  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    64  #include "_Impl/IfxAsclin_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    65  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    66  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    67  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    68  #include "IfxAsclin_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    69  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    70  #include "_PinMap/IfxAsclin_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    71  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    72  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    73  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    74  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    75  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    76  /** \addtogroup IfxLld_Asclin_Std_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    77   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    78  /** \brief Defines if the classic or the enhanced checksum will be calculated by the checksum block.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    79   * Definition in Ifx_ASCLIN.DATCON.B.CSM
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    83      IfxAsclin_Checksum_classic  = 0, /**< \brief classic checksum */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    84      IfxAsclin_Checksum_enhanced = 1  /**< \brief enhanced checksum */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    85  } IfxAsclin_Checksum;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    86  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    87  /** \brief Defines if the received checksum byte is written into the RXFifo or not.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    88   * Definition in Ifx_ASCLIN.LIN.CON.B.CSI
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    89   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    90  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    91  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    92      IfxAsclin_ChecksumInjection_notWritten = 0,  /**< \brief checksum byte is not written */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    93      IfxAsclin_ChecksumInjection_written    = 1   /**< \brief checksum byte is written */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    94  } IfxAsclin_ChecksumInjection;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    95  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    96  /** \brief CPOL defines the idle level of the clock signal in the SPI mode.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    97   * Idle level is the level outside the data transmission time intervals.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    98   * Definition in Ifx_ASCLIN.IOCR.B.CPOL
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    99   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   100  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   101  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   102      IfxAsclin_ClockPolarity_idleLow  = 0, /**< \brief idle low */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   103      IfxAsclin_ClockPolarity_idleHigh = 1  /**< \brief idle high */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   104  } IfxAsclin_ClockPolarity;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   105  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   106  /** \brief Selection of clock source\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   107   * Definition in Ifx_ASCLIN.CSR.B.CLKSEL
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   108   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   109  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   110  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   111      IfxAsclin_ClockSource_noClock      = 0,  /**< \brief no clock will be supplied */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   112      IfxAsclin_ClockSource_ascFastClock = 2,  /**< \brief f asclinf wiil be supplied */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   113      IfxAsclin_ClockSource_ascSlowClock = 4   /**< \brief f asclins will be supplied */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   114  } IfxAsclin_ClockSource;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   116  /** \brief CTS input pin selection\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   117   * Definition in Ifx_ASCLIN.IOCR.B.CTS
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   118   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   119  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   120  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   121      IfxAsclin_CtsInputSelect_0,     /**< \brief CTS input pin 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   122      IfxAsclin_CtsInputSelect_1,     /**< \brief CTS input pin 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   123      IfxAsclin_CtsInputSelect_2,     /**< \brief CTS input pin 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   124      IfxAsclin_CtsInputSelect_3      /**< \brief CTS input pin 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   125  } IfxAsclin_CtsInputSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   126  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   127  /** \brief Number of bits per transfer\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   128   * Definition in Ifx_ASCLIN.FRAMECON.B.DATALEN
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   129   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   130  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   131  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   132      IfxAsclin_DataLength_1 = 0,      /**< \brief number of bits per transfer 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   133      IfxAsclin_DataLength_2,          /**< \brief number of bits per transfer 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   134      IfxAsclin_DataLength_3,          /**< \brief number of bits per transfer 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   135      IfxAsclin_DataLength_4,          /**< \brief number of bits per transfer 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   136      IfxAsclin_DataLength_5,          /**< \brief number of bits per transfer 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   137      IfxAsclin_DataLength_6,          /**< \brief number of bits per transfer 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   138      IfxAsclin_DataLength_7,          /**< \brief number of bits per transfer 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   139      IfxAsclin_DataLength_8,          /**< \brief number of bits per transfer 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   140      IfxAsclin_DataLength_9,          /**< \brief number of bits per transfer 8  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   141      IfxAsclin_DataLength_10,         /**< \brief number of bits per transfer 9  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   142      IfxAsclin_DataLength_11,         /**< \brief number of bits per transfer 10  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   143      IfxAsclin_DataLength_12,         /**< \brief number of bits per transfer 11  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   144      IfxAsclin_DataLength_13,         /**< \brief number of bits per transfer 12  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   145      IfxAsclin_DataLength_14,         /**< \brief number of bits per transfer 13  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   146      IfxAsclin_DataLength_15,         /**< \brief number of bits per transfer 14  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   147      IfxAsclin_DataLength_16          /**< \brief number of bits per transfer 15  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   148  } IfxAsclin_DataLength;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   150  /** \brief Defines the interrupt generation modes of Tx FIFO and Rx FIFO\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   151   * Definition in Ifx_ASCLIN.RXFIFOCON.B.FM and Ifx_ASCLIN.TXFIFOCON.B.FM
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   155      IfxAsclin_FifoInterruptMode_combined,  /**< \brief Combined Move Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   156      IfxAsclin_FifoInterruptMode_single,    /**< \brief Single Move Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   157      IfxAsclin_FifoInterruptMode_batch      /**< \brief Batch Move Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   158  } IfxAsclin_FifoInterruptMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   159  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   160  /** \brief Defines the basic operating mode of the module. Changing the mode must be done by switching first to initialize mode, and then to the other mode.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   161   * Definition in Ifx_ASCLIN.FRAMECON.B.MODE
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   162   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   163  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   164  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   165      IfxAsclin_FrameMode_initialise = 0,  /**< \brief initialise mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   166      IfxAsclin_FrameMode_asc        = 1,  /**< \brief asc mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   167      IfxAsclin_FrameMode_spi        = 2,  /**< \brief spi mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   168      IfxAsclin_FrameMode_lin        = 3   /**< \brief lin mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   169  } IfxAsclin_FrameMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   170  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   171  /** \brief Defines if LIN frame shall consist of a header and response or of a header only.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   172   * Definition in Ifx_ASCLIN.DATCON.B.HO
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   173   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   174  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   175  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   176      IfxAsclin_HeaderResponseSelect_headerAndResponse = 0,  /**< \brief header and response expected */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   177      IfxAsclin_HeaderResponseSelect_headerOnly        = 1   /**< \brief header only expected */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   178  } IfxAsclin_HeaderResponseSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   179  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   180  /** \brief Defines the duration of the IDLE delay in bit times.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   181   * SPI mode: this is the idle time between the frames.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   182   * ASC and LIN mode: this is the pause inserted between transmission of bytes.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   183   * Definition in Ifx_ASCLIN.FRAMECON.B.IDLE
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   184   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   185  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   186  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   187      IfxAsclin_IdleDelay_0,     /**< \brief idle delay in 0 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   188      IfxAsclin_IdleDelay_1,     /**< \brief idle delay in 1 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   189      IfxAsclin_IdleDelay_2,     /**< \brief idle delay in 2 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   190      IfxAsclin_IdleDelay_3,     /**< \brief idle delay in 3 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   191      IfxAsclin_IdleDelay_4,     /**< \brief idle delay in 4 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   192      IfxAsclin_IdleDelay_5,     /**< \brief idle delay in 5 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   193      IfxAsclin_IdleDelay_6,     /**< \brief idle delay in 6 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   194      IfxAsclin_IdleDelay_7      /**< \brief idle delay in 7 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   195  } IfxAsclin_IdleDelay;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   196  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   197  /** \brief Defines the leading delay in bit times in SPI mode. ASC mode: not applicable.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   198   * LIN mode: delay between the end of the break and the start of the sync character.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   199   * Definition in Ifx_ASCLIN.FRAMECON.B.LEAD
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   200   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   201  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   202  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   203      IfxAsclin_LeadDelay_0,     /**< \brief lead delay in 0 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   204      IfxAsclin_LeadDelay_1,     /**< \brief lead delay in 1 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   205      IfxAsclin_LeadDelay_2,     /**< \brief lead delay in 2 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   206      IfxAsclin_LeadDelay_3,     /**< \brief lead delay in 3 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   207      IfxAsclin_LeadDelay_4,     /**< \brief lead delay in 4 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   208      IfxAsclin_LeadDelay_5,     /**< \brief lead delay in 5 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   209      IfxAsclin_LeadDelay_6,     /**< \brief lead delay in 6 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   210      IfxAsclin_LeadDelay_7      /**< \brief lead delay in 7 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   211  } IfxAsclin_LeadDelay;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   212  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   213  /** \brief Configures if the module in LIN mode operates as master or slave\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   214   * Definition in Ifx_ASCLIN.LIN.CON.B.MS
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   215   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   216  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   217  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   218      IfxAsclin_LinMode_slave  = 0, /**< \brief operates in slave mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   219      IfxAsclin_LinMode_master = 1  /**< \brief operates in master mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   220  } IfxAsclin_LinMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   221  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   222  /** \brief Defines the timeout threshold of RESPOSE bit is for LIN response timeout or LIN frame timeout.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   223   * Definition in Ifx_ASCLIN.DATCON.B.RM
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   224   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   225  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   226  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   227      IfxAsclin_LinResponseTimeoutMode_frameTimeout    = 0, /**< \brief timeout threshold is for frame */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   228      IfxAsclin_LinResponseTimeoutMode_responseTimeout = 1  /**< \brief timeout threshold is for reponse */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   229  } IfxAsclin_LinResponseTimeoutMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   230  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   231  /** \brief Defines the bit length in ticks in the range of 1 to 16. The lengths of 1 to 3 are not allowed\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   232   * Definition in Ifx_ASCLIN.BITCON.B.OVERSAMPLING
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   233   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   234  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   235  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   236      IfxAsclin_OversamplingFactor_4  = 3,   /**< \brief oversampling factor 4 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   237      IfxAsclin_OversamplingFactor_5  = 4,   /**< \brief oversampling factor 5 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   238      IfxAsclin_OversamplingFactor_6  = 5,   /**< \brief oversampling factor 6 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   239      IfxAsclin_OversamplingFactor_7  = 6,   /**< \brief oversampling factor 7 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   240      IfxAsclin_OversamplingFactor_8  = 7,   /**< \brief oversampling factor 8 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   241      IfxAsclin_OversamplingFactor_9  = 8,   /**< \brief oversampling factor 9 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   242      IfxAsclin_OversamplingFactor_10 = 9,   /**< \brief oversampling factor 10 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   243      IfxAsclin_OversamplingFactor_11 = 10,  /**< \brief oversampling factor 11 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   244      IfxAsclin_OversamplingFactor_12 = 11,  /**< \brief oversampling factor 12 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   245      IfxAsclin_OversamplingFactor_13 = 12,  /**< \brief oversampling factor 13 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   246      IfxAsclin_OversamplingFactor_14 = 13,  /**< \brief oversampling factor 14 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   247      IfxAsclin_OversamplingFactor_15 = 14,  /**< \brief oversampling factor 15 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   248      IfxAsclin_OversamplingFactor_16 = 15   /**< \brief oversampling factor 16 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   249  } IfxAsclin_OversamplingFactor;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   250  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   251  /** \brief Type of parity bit attached to data bits\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   252   * Definition in Ifx_ASCLIN.FRAMECON.B.ODD
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   253   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   254  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   255  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   256      IfxAsclin_ParityType_even = 0,  /**< \brief even parity */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   257      IfxAsclin_ParityType_odd  = 1   /**< \brief odd parity */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   258  } IfxAsclin_ParityType;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   260  /** \brief Receive buffer mode\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   261   * Definition in Ifx_ASCLIN.RXFIFOCON.B.BUF
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   262   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   263  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   264  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   265      IfxAsclin_ReceiveBufferMode_rxFifo   = 0, /**< \brief RxFIFO mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   266      IfxAsclin_ReceiveBufferMode_rxBuffer = 1  /**< \brief single stage Rx buffer */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   267  } IfxAsclin_ReceiveBufferMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   268  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   269  /** \brief Polarity of the RTS and CTS signals\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   270   * Definition in Ifx_ASCLIN.IOCR.B.RCPOL
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   272  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   273  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   274      IfxAsclin_RtsCtsPolarity_activeHigh = 0,  /**< \brief ready/clear are active-high */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   275      IfxAsclin_RtsCtsPolarity_activeLow  = 1   /**< \brief ready/clear are active-low */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   276  } IfxAsclin_RtsCtsPolarity;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   277  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   278  /** \brief Defines the filling level that triggers a drain (RX) interrupt or DMA access\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   279   * Definition in Ifx_ASCLIN.RXFIFOCON.B.INTLEVEL
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   280   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   281  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   282  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   283      IfxAsclin_RxFifoInterruptLevel_1,     /**< \brief RX FIFO level 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   284      IfxAsclin_RxFifoInterruptLevel_2,     /**< \brief RX FIFO level 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   285      IfxAsclin_RxFifoInterruptLevel_3,     /**< \brief RX FIFO level 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   286      IfxAsclin_RxFifoInterruptLevel_4,     /**< \brief RX FIFO level 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   287      IfxAsclin_RxFifoInterruptLevel_5,     /**< \brief RX FIFO level 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   288      IfxAsclin_RxFifoInterruptLevel_6,     /**< \brief RX FIFO level 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   289      IfxAsclin_RxFifoInterruptLevel_7,     /**< \brief RX FIFO level 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   290      IfxAsclin_RxFifoInterruptLevel_8,     /**< \brief RX FIFO level 8  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   291      IfxAsclin_RxFifoInterruptLevel_9,     /**< \brief RX FIFO level 9  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   292      IfxAsclin_RxFifoInterruptLevel_10,    /**< \brief RX FIFO level 10  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   293      IfxAsclin_RxFifoInterruptLevel_11,    /**< \brief RX FIFO level 11  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   294      IfxAsclin_RxFifoInterruptLevel_12,    /**< \brief RX FIFO level 12  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   295      IfxAsclin_RxFifoInterruptLevel_13,    /**< \brief RX FIFO level 13  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   296      IfxAsclin_RxFifoInterruptLevel_14,    /**< \brief RX FIFO level 14  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   297      IfxAsclin_RxFifoInterruptLevel_15,    /**< \brief RX FIFO level 15  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   298      IfxAsclin_RxFifoInterruptLevel_16     /**< \brief RX FIFO level 16  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   299  } IfxAsclin_RxFifoInterruptLevel;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   300  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   301  /** \brief Defines the number of bytes read from the Rx FIFO with one FPI bus read\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   302   * Definition in Ifx_ASCLIN.RXFIFOCON.B.OUTW
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   304  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   305  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   306      IfxAsclin_RxFifoOutletWidth_0,     /**< \brief number of bytes 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   307      IfxAsclin_RxFifoOutletWidth_1,     /**< \brief number of bytes 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   308      IfxAsclin_RxFifoOutletWidth_2,     /**< \brief number of bytes 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   309      IfxAsclin_RxFifoOutletWidth_3      /**< \brief number of bytes 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   310  } IfxAsclin_RxFifoOutletWidth;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   312  /** \brief Alternate input selection for Rx signal.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   313   * Definition in Ifx_ASCLIN.IOCR.B.ALTI
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   314   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   315  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   316  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   317      IfxAsclin_RxInputSelect_0,     /**< \brief alternate input selection 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   318      IfxAsclin_RxInputSelect_1,     /**< \brief alternate input selection 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   319      IfxAsclin_RxInputSelect_2,     /**< \brief alternate input selection 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   320      IfxAsclin_RxInputSelect_3,     /**< \brief alternate input selection 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   321      IfxAsclin_RxInputSelect_4,     /**< \brief alternate input selection 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   322      IfxAsclin_RxInputSelect_5,     /**< \brief alternate input selection 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   323      IfxAsclin_RxInputSelect_6,     /**< \brief alternate input selection 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   324      IfxAsclin_RxInputSelect_7      /**< \brief alternate input selection 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   325  } IfxAsclin_RxInputSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   326  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   327  /** \brief Sample point position\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   328   * Definition in Ifx_ASCLIN.BITCON.B.SAMPLEPOINT
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   330  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   331  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   332      IfxAsclin_SamplePointPosition_1  = 1,   /**< \brief sample point position at 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   333      IfxAsclin_SamplePointPosition_2  = 2,   /**< \brief sample point position at 2 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   334      IfxAsclin_SamplePointPosition_3  = 3,   /**< \brief sample point position at 3 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   335      IfxAsclin_SamplePointPosition_4  = 4,   /**< \brief sample point position at 4 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   336      IfxAsclin_SamplePointPosition_5  = 5,   /**< \brief sample point position at 5 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   337      IfxAsclin_SamplePointPosition_6  = 6,   /**< \brief sample point position at 6 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   338      IfxAsclin_SamplePointPosition_7  = 7,   /**< \brief sample point position at 7 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   339      IfxAsclin_SamplePointPosition_8  = 8,   /**< \brief sample point position at 8 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   340      IfxAsclin_SamplePointPosition_9  = 9,   /**< \brief sample point position at 9 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   341      IfxAsclin_SamplePointPosition_10 = 10,  /**< \brief sample point position at 10 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   342      IfxAsclin_SamplePointPosition_11 = 11,  /**< \brief sample point position at 11 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   343      IfxAsclin_SamplePointPosition_12 = 12,  /**< \brief sample point position at 12 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   344      IfxAsclin_SamplePointPosition_13 = 13,  /**< \brief sample point position at 13 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   345      IfxAsclin_SamplePointPosition_14 = 14,  /**< \brief sample point position at 14 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   346      IfxAsclin_SamplePointPosition_15 = 15   /**< \brief sample point position at 15 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   347  } IfxAsclin_SamplePointPosition;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   348  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   349  /** \brief Number of samples per bit, sample mode/medianfilter\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   350   * Definition in Ifx_ASCLIN.BITCON.B.SM
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   351   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   352  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   353  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   354      IfxAsclin_SamplesPerBit_one   = 0, /**< \brief one sample per bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   355      IfxAsclin_SamplesPerBit_three = 1  /**< \brief three samples per bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   356  } IfxAsclin_SamplesPerBit;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   357  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   358  /** \brief SPI mode: defines the shift direction of the shift register.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   359   * ASC and LIN mode: should be set to 0.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   360   * Definition in Ifx_ASCLIN.FRAMECON.B.MSB
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   361   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   362  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   363  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   364      IfxAsclin_ShiftDirection_lsbFirst = 0,  /**< \brief LSB first */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   365      IfxAsclin_ShiftDirection_msbFirst = 1   /**< \brief MSB first */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   366  } IfxAsclin_ShiftDirection;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   367  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   368  /** \brief Defines the idle level of the SLSO signal, which is the level.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   369   * Outside the data transmission, leading and trailing time intervals.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   370   * Definition in Ifx_ASCLIN.IOCR.B.SPOL
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   372  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   373  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   374      IfxAsclin_SlavePolarity_idleLow  = 0, /**< \brief idle low */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   375      IfxAsclin_SlavePolarity_idlehigh = 1  /**< \brief idle high */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   376  } IfxAsclin_SlavePolarity;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   377  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   378  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   379   * Definition in Ifx_ASCLIN.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   380   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   381  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   382  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   383      IfxAsclin_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   384      IfxAsclin_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   385  } IfxAsclin_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   386  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   387  /** \brief Error status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   388   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   389  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   390  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   391      IfxAsclin_Status_configurationError = 0,  /**< \brief Configuration error */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   392      IfxAsclin_Status_noError            = 1   /**< \brief No error */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   393  } IfxAsclin_Status;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   395  /** \brief ASC and LIN mode: number of stop bits (0 is not allowed), SPI mode: trailing delay.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   396   * Definition in Ifx_ASCLIN.FRAMECON.B.STOP
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   397   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   398  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   399  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   400      IfxAsclin_StopBit_0,     /**< \brief number of stop bits 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   401      IfxAsclin_StopBit_1,     /**< \brief number of stop bits 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   402      IfxAsclin_StopBit_2,     /**< \brief number of stop bits 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   403      IfxAsclin_StopBit_3,     /**< \brief number of stop bits 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   404      IfxAsclin_StopBit_4,     /**< \brief number of stop bits 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   405      IfxAsclin_StopBit_5,     /**< \brief number of stop bits 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   406      IfxAsclin_StopBit_6,     /**< \brief number of stop bits 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   407      IfxAsclin_StopBit_7      /**< \brief number of stop bits 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   408  } IfxAsclin_StopBit;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   409  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   410  /** \brief OCDS Suspend Control (OCDS.SUS)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   411   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   412  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   413  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   414      IfxAsclin_SuspendMode_none = 0,  /**< \brief No suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   415      IfxAsclin_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   416      IfxAsclin_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   417  } IfxAsclin_SuspendMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   418  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   419  /** \brief Defines the number of bytes written to the Tx FIFO with one FPI bus write\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   420   * Definition in Ifx_ASCLIN.TXFIFOCON.B.INW
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   421   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   422  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   423  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   424      IfxAsclin_TxFifoInletWidth_0,     /**< \brief number of bytes 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   425      IfxAsclin_TxFifoInletWidth_1,     /**< \brief number of bytes 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   426      IfxAsclin_TxFifoInletWidth_2,     /**< \brief number of bytes 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   427      IfxAsclin_TxFifoInletWidth_3      /**< \brief number of bytes 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   428  } IfxAsclin_TxFifoInletWidth;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   429  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   430  /** \brief Defines the filling level that triggers a refill (TX) interrupt or DMA access\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   431   * Definition in Ifx_ASCLIN.TXFIFOCON.B.INTLEVEL
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   432   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   433  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   434  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   435      IfxAsclin_TxFifoInterruptLevel_0,     /**< \brief TX FIFO level 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   436      IfxAsclin_TxFifoInterruptLevel_1,     /**< \brief TX FIFO level 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   437      IfxAsclin_TxFifoInterruptLevel_2,     /**< \brief TX FIFO level 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   438      IfxAsclin_TxFifoInterruptLevel_3,     /**< \brief TX FIFO level 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   439      IfxAsclin_TxFifoInterruptLevel_4,     /**< \brief TX FIFO level 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   440      IfxAsclin_TxFifoInterruptLevel_5,     /**< \brief TX FIFO level 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   441      IfxAsclin_TxFifoInterruptLevel_6,     /**< \brief TX FIFO level 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   442      IfxAsclin_TxFifoInterruptLevel_7,     /**< \brief TX FIFO level 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   443      IfxAsclin_TxFifoInterruptLevel_8,     /**< \brief TX FIFO level 8  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   444      IfxAsclin_TxFifoInterruptLevel_9,     /**< \brief TX FIFO level 9  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   445      IfxAsclin_TxFifoInterruptLevel_10,    /**< \brief TX FIFO level 10  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   446      IfxAsclin_TxFifoInterruptLevel_11,    /**< \brief TX FIFO level 11  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   447      IfxAsclin_TxFifoInterruptLevel_12,    /**< \brief TX FIFO level 12  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   448      IfxAsclin_TxFifoInterruptLevel_13,    /**< \brief TX FIFO level 13  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   449      IfxAsclin_TxFifoInterruptLevel_14,    /**< \brief TX FIFO level 14  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   450      IfxAsclin_TxFifoInterruptLevel_15     /**< \brief TX FIFO level 15  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   451  } IfxAsclin_TxFifoInterruptLevel;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   452  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   453  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   454  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   455  /** \addtogroup IfxLld_Asclin_Std_Operative
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   456   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   457  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   458  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   459  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   460  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   461  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   462  /** \brief clears all the flags
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   463   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   464   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   465   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   466  IFX_INLINE void IfxAsclin_clearAllFlags(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   467  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   468  /** \brief Clears the break detected flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   469   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   472  IFX_INLINE void IfxAsclin_clearBreakDetectedFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   474  /** \brief Clears the collision detection error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   475   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   476   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   478  IFX_INLINE void IfxAsclin_clearCollisionDetectionErrorFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   480  /** \brief Clears the falling edge detected flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   481   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   482   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   483   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   484  IFX_INLINE void IfxAsclin_clearFallingEdgeDetectedFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   485  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   486  /** \brief Clears the frame error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   487   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   488   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   489   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   490  IFX_INLINE void IfxAsclin_clearFrameErrorFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   491  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   492  /** \brief Clears the header timeout flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   493   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   494   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   495   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   496  IFX_INLINE void IfxAsclin_clearHeaderTimeoutFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   497  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   498  /** \brief Clears the kernel reset status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   499   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   500   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   501   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   502  IFX_INLINE void IfxAsclin_clearKernelResetStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   503  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   504  /** \brief Clears the auto baudrate detection error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   505   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   506   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   507   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   508  IFX_INLINE void IfxAsclin_clearLinAutoBaudDetectionErrorFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   509  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   510  /** \brief Clears the LIN checksum error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   511   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   512   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   513   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   514  IFX_INLINE void IfxAsclin_clearLinChecksumErrorFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   515  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   516  /** \brief Clears the LIN parity error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   517   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   518   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   519   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   520  IFX_INLINE void IfxAsclin_clearLinParityErrorFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   521  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   522  /** \brief Clears the parity error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   523   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   524   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   525   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   526  IFX_INLINE void IfxAsclin_clearParityErrorFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   527  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   528  /** \brief Clears the raising edge detected flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   529   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   530   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   531   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   532  IFX_INLINE void IfxAsclin_clearRaisingEdgeDetectedFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   533  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   534  /** \brief Clears the response timeout flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   535   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   536   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   537   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   538  IFX_INLINE void IfxAsclin_clearResponseTimeoutFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   539  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   540  /** \brief Clears the Rx FIFO level flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   541   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   542   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   543   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   544  IFX_INLINE void IfxAsclin_clearRxFifoFillLevelFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   545  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   546  /** \brief Clears the Rx FIFO overflow flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   547   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   548   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   549   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   550  IFX_INLINE void IfxAsclin_clearRxFifoOverflowFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   551  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   552  /** \brief Clears the Rx FIFO underflow flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   553   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   554   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   555   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   556  IFX_INLINE void IfxAsclin_clearRxFifoUnderflowFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   557  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   558  /** \brief Clears the receive header end flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   559   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   560   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   561   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   562  IFX_INLINE void IfxAsclin_clearRxHeaderEndFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   563  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   564  /** \brief Clears the receive response end flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   565   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   566   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   567   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   568  IFX_INLINE void IfxAsclin_clearRxResponseEndFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   569  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   570  /** \brief Clears the transmission pending flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   571   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   572   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   573   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   574  IFX_INLINE void IfxAsclin_clearTransmissionCompletedFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   575  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   576  /** \brief Clears the Tx FIFO level flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   577   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   578   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   579   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   580  IFX_INLINE void IfxAsclin_clearTxFifoFillLevelFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   581  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   582  /** \brief Clears the Tx FIFO overflow flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   583   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   584   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   585   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   586  IFX_INLINE void IfxAsclin_clearTxFifoOverflowFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   587  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   588  /** \brief Clears the transmit header end flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   589   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   590   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   591   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   592  IFX_INLINE void IfxAsclin_clearTxHeaderEndFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   593  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   594  /** \brief Clears the transmit response end flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   595   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   596   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   597   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   598  IFX_INLINE void IfxAsclin_clearTxResponseEndFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   599  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   600  /** \brief Flushes (empties) the Rx FIFO
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   601   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   602   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   603   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   604  IFX_INLINE void IfxAsclin_flushRxFifo(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   605  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   606  /** \brief Flushes (empties) the Tx FIFO
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   607   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   608   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   609   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   610  IFX_INLINE void IfxAsclin_flushTxFifo(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   611  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   612  /** \brief Sets the baudrate detection's lower limit
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   613   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   614   * \param limit value of the lower limit
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   615   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   616   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   617  IFX_INLINE void IfxAsclin_setBrdLowerlimt(Ifx_ASCLIN *asclin, uint8 limit);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   619  /** \brief Sets the baudrate detection's upper limit
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   620   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   621   * \param limit value of the upper limit
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   622   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   623   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   624  IFX_INLINE void IfxAsclin_setBrdUpperlimt(Ifx_ASCLIN *asclin, uint8 limit);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   626  /** \brief Sets the checksum injection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   627   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   628   * \param csi checksum injection selection (not written / written)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   629   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   630   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   631  IFX_INLINE void IfxAsclin_setChecksumInjection(Ifx_ASCLIN *asclin, IfxAsclin_ChecksumInjection csi);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   632  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   633  /** \brief Sets the checksum mode
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   634   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   635   * \param mode checksum mode selection (classic / enhanced)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   636   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   637   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   638  IFX_INLINE void IfxAsclin_setChecksumMode(Ifx_ASCLIN *asclin, IfxAsclin_Checksum mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   639  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   640  /** \brief Sets the data length (number of bits per transfer)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   641   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   642   * \param length data length selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   643   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   644   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   645  IFX_INLINE void IfxAsclin_setDataLength(Ifx_ASCLIN *asclin, IfxAsclin_DataLength length);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   646  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   647  /** \brief Sets the denominator of the fractional divider
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   648   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   649   * \param denominator value of the denominator
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   650   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   651   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   652  IFX_INLINE void IfxAsclin_setDenominator(Ifx_ASCLIN *asclin, uint16 denominator);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   653  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   654  /** \brief Sets the disable module request
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   655   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   656   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   657   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   658  IFX_INLINE void IfxAsclin_setDisableModuleRequest(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   659  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   660  /** \brief Sets the enable module request
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   661   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   662   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   663   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   664  IFX_INLINE void IfxAsclin_setEnableModuleRequest(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   665  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   666  /** \brief Sets digital glitch filter depth
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   667   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   668   * \param depth digital glitch filter depth selection (1 to 63)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   669   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   670   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   671  IFX_INLINE void IfxAsclin_setFilterDepth(Ifx_ASCLIN *asclin, uint8 depth);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   672  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   673  /** \brief Sets the header response selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   674   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   675   * \param type type of selection (header and response or header only)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   676   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   677   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   678  IFX_INLINE void IfxAsclin_setHeaderResponseSelect(Ifx_ASCLIN *asclin, IfxAsclin_HeaderResponseSelect type);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   679  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   680  /** \brief Sets the idle delay
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   681   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   682   * \param delay idle delay selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   683   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   684   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   685  IFX_INLINE void IfxAsclin_setIdleDelay(Ifx_ASCLIN *asclin, IfxAsclin_IdleDelay delay);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   686  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   687  /** \brief Sets the kernal reset of the KRST1
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   688   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   689   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   690   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   691  IFX_INLINE void IfxAsclin_setKernelResetOne(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   692  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   693  /** \brief Sets the kernel reset of the KRST0
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   694   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   695   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   696   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   697  IFX_INLINE void IfxAsclin_setKernelResetZero(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   698  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   699  /** \brief Sets the lead delay
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   700   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   701   * \param delay lead delay selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   702   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   703   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   704  IFX_INLINE void IfxAsclin_setLeadDelay(Ifx_ASCLIN *asclin, IfxAsclin_LeadDelay delay);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   705  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   706  /** \brief Sets the LIN break length
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   707   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   708   * \param length value of the break length
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   709   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   710   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   711  IFX_INLINE void IfxAsclin_setLinBreakLength(Ifx_ASCLIN *asclin, uint8 length);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   712  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   713  /** \brief Sets the LIN header timeout
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   714   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   715   * \param timeout value of the header timeout
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   716   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   717   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   718  IFX_INLINE void IfxAsclin_setLinHeaderTimeout(Ifx_ASCLIN *asclin, uint8 timeout);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   719  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   720  /** \brief Sets the LIN mode of operation
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   721   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   722   * \param mode mode selection (slave / master)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   723   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   724   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   725  IFX_INLINE void IfxAsclin_setLinMode(Ifx_ASCLIN *asclin, IfxAsclin_LinMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   726  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   727  /** \brief Sets the LIN response timeout mode
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   728   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   729   * \param mode LIN response timeout mode selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   730   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   731   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   732  IFX_INLINE void IfxAsclin_setLinResponseTimeoutMode(Ifx_ASCLIN *asclin, IfxAsclin_LinResponseTimeoutMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   733  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   734  /** \brief Sets the LIN response timeout threshold
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   735   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   736   * \param threshold value of the tomeout threshold (1 to 256 bit times)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   737   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   738   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   739  IFX_INLINE void IfxAsclin_setLinResponseTimeoutThreshold(Ifx_ASCLIN *asclin, uint16 threshold);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   740  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   741  /** \brief Sets the numerator of the fractional divider
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   742   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   743   * \param numerator value of the numerator
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   744   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   745   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   746  IFX_INLINE void IfxAsclin_setNumerator(Ifx_ASCLIN *asclin, uint16 numerator);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   747  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   748  /** \brief Sets the division ratio of the baudrate post divider
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   749   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   750   * \param ovsFactor value of oversampling factor
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   751   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   752   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   753  IFX_INLINE void IfxAsclin_setOversampling(Ifx_ASCLIN *asclin, IfxAsclin_OversamplingFactor ovsFactor);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   754  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   755  /** \brief Sets the parity type
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   756   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   757   * \param type parity type selction (even / odd)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   758   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   759   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   760  IFX_INLINE void IfxAsclin_setParityType(Ifx_ASCLIN *asclin, IfxAsclin_ParityType type);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   761  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   762  /** \brief Sets the division ratio of the predivider (prescaler)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   763   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   764   * \param prescaler value of prescaler
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   765   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   766   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   767  IFX_INLINE void IfxAsclin_setPrescaler(Ifx_ASCLIN *asclin, uint16 prescaler);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   768  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   769  /** \brief Sets the receive buffer mode
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   770   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   771   * \param mode receive buffer mode selection (Rx FIFO or single stage Rx buffer)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   772   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   773   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   774  IFX_INLINE void IfxAsclin_setRxBufferMode(Ifx_ASCLIN *asclin, IfxAsclin_ReceiveBufferMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   775  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   776  /** \brief Sets the Tx FIFO interrupt level
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   777   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   778   * \param level interrupt level selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   779   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   780   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   781  IFX_INLINE void IfxAsclin_setRxFifoInterruptLevel(Ifx_ASCLIN *asclin, IfxAsclin_RxFifoInterruptLevel level);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   782  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   783  /** \brief Sets the receive FIFO outlet width
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   784   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   785   * \param width number of bytes read to the Rx FIFO with one FPI bus read
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   786   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   787   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   788  IFX_INLINE void IfxAsclin_setRxFifoOutletWidth(Ifx_ASCLIN *asclin, IfxAsclin_RxFifoOutletWidth width);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   789  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   790  /** \brief Sets the sample mode (number of samples per bit / median filter)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   791   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   792   * \param medianFilter value of the median filter
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   793   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   794   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   795  IFX_INLINE void IfxAsclin_setSampleMode(Ifx_ASCLIN *asclin, IfxAsclin_SamplesPerBit medianFilter);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   796  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   797  /** \brief Sets the sampling point position
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   798   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   799   * \param spPosition sample point position selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   800   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   801   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   802  IFX_INLINE void IfxAsclin_setSamplePointPosition(Ifx_ASCLIN *asclin, IfxAsclin_SamplePointPosition spPosition);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   803  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   804  /** \brief Sets the shift direction
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   805   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   806   * \param dir shift direction selection (LSB / MSB first)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   807   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   808   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   809  IFX_INLINE void IfxAsclin_setShiftDirection(Ifx_ASCLIN *asclin, IfxAsclin_ShiftDirection dir);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   810  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   811  /** \brief Sets the number of stop bits
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   812   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   813   * \param stopBit number of stop bits selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   814   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   815   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   816  IFX_INLINE void IfxAsclin_setStopBit(Ifx_ASCLIN *asclin, IfxAsclin_StopBit stopBit);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   817  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   818  /** \brief Sets the transmit header request flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   819   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   820   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   821   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   822  IFX_INLINE void IfxAsclin_setTransmitHeaderRequestFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   823  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   824  /** \brief Sets the transmit response request flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   825   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   826   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   827   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   828  IFX_INLINE void IfxAsclin_setTransmitResponseRequestFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   829  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   830  /** \brief Sets the transmission wake request flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   831   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   832   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   833   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   834  IFX_INLINE void IfxAsclin_setTransmitWakeRequestFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   835  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   836  /** \brief Sets the transmit FIFO inlet width
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   837   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   838   * \param width number of bytes written to the Tx FIFO with one FPI bus write
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   839   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   840   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   841  IFX_INLINE void IfxAsclin_setTxFifoInletWidth(Ifx_ASCLIN *asclin, IfxAsclin_TxFifoInletWidth width);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   842  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   843  /** \brief Sets the Tx FIFO interrupt level
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   844   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   845   * \param level interrupt level selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   846   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   847   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   848  IFX_INLINE void IfxAsclin_setTxFifoInterruptLevel(Ifx_ASCLIN *asclin, IfxAsclin_TxFifoInterruptLevel level);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   849  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   850  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   851  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   852  /** \addtogroup IfxLld_Asclin_Std_Utility
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   853   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   854  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   855  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   856  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   857  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   858  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   859  /** \brief Returns the break detected flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   860   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   861   * \return break detected flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   862   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   863  IFX_INLINE boolean IfxAsclin_getBreakDetectedFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   864  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   865  /** \brief Returns the clock source
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   866   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   867   * \return clock source
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   868   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   869  IFX_INLINE uint8 IfxAsclin_getClockSource(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   870  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   871  /** \brief Returns the clock status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   872   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   873   * \return clock status (off / on)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   874   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   875  IFX_INLINE boolean IfxAsclin_getClockStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   876  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   877  /** \brief Returns the collision detection error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   878   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   879   * \return collision detection error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   880   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   881  IFX_INLINE boolean IfxAsclin_getCollisionDetectionErrorFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   882  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   883  /** \brief Returns  the falling edge detected flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   884   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   885   * \return falling edge detected flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   886   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   887  IFX_INLINE boolean IfxAsclin_getFallingEdgeDetectedFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   888  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   889  /** \brief Returns the frame error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   890   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   891   * \return frame error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   892   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   893  IFX_INLINE boolean IfxAsclin_getFrameErrorFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   894  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   895  /** \brief Returns the header timeout flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   896   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   897   * \return header timeout flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   898   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   899  IFX_INLINE boolean IfxAsclin_getHeaderTimeoutFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   900  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   901  /** \brief Returns the kernel reset status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   902   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   903   * \return kernel reset status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   904   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   905  IFX_INLINE boolean IfxAsclin_getKernelResetStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   906  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   907  /** \brief Returns the LIN auto baudrate detection error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   908   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   909   * \return LIN auto baudrate detection error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   910   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   911  IFX_INLINE boolean IfxAsclin_getLinAutoBaudDetectionErrorFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   912  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   913  /** \brief Returns the LIN checksum error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   914   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   915   * \return LIN checksum error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   916   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   917  IFX_INLINE boolean IfxAsclin_getLinChecksumErrorFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   918  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   919  /** \brief Returns the LIN parity error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   920   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   921   * \return LIN parity error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   922   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   923  IFX_INLINE boolean IfxAsclin_getLinParityErrorFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   924  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   925  /** \brief Returns the module status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   926   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   927   * \return module status (enabled / disabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   928   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   929  IFX_INLINE boolean IfxAsclin_getModuleStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   930  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   931  /** \brief Returns the parity error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   932   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   933   * \return parity error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   934   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   935  IFX_INLINE boolean IfxAsclin_getParityErrorFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   936  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   937  /** \brief Returns the division ratio of the predivider (prescaler)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   938   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   939   * \return value of prescaler
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   940   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   941  IFX_INLINE uint16 IfxAsclin_getPrescaler(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   942  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   943  /** \brief Returns the raising edge detected flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   944   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   945   * \return raising edge detected flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   946   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   947  IFX_INLINE boolean IfxAsclin_getRaisingEdgeDetectedFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   948  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   949  /** \brief Returns the received signal status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   950   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   951   * \return received signal status (0 is low & 1 is high)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   952   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   953  IFX_INLINE boolean IfxAsclin_getReceiveSignalStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   954  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   955  /** \brief Returns the response timeout flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   956   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   957   * \return response timeout flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   958   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   959  IFX_INLINE boolean IfxAsclin_getResponseTimeoutFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   960  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   961  /** \brief Returns the current filling level of Tx FIFO
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   962   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   963   * \return current filling level of Rx FIFO
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   964   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   965  IFX_INLINE uint8 IfxAsclin_getRxFifoFillLevel(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   966  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   967  /** \brief Returns the Rx FIFO level flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   968   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   969   * \return Rx FIFO level flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   970   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   971  IFX_INLINE boolean IfxAsclin_getRxFifoFillLevelFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   972  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   973  /** \brief Returns the receive FIFO inlet width
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   974   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   975   * \return number of bytes read to the Rx FIFO with one FPI bus read
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   976   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   977  IFX_INLINE uint8 IfxAsclin_getRxFifoOutletWidth(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   978  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   979  /** \brief Returns the Rx FIFO overflow flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   980   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   981   * \return Rx FIFO overflow flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   982   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   983  IFX_INLINE boolean IfxAsclin_getRxFifoOverflowFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   984  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   985  /** \brief Returns the Rx FIFO underflow flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   986   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   987   * \return Rx FIFO underflow flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   988   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   989  IFX_INLINE boolean IfxAsclin_getRxFifoUnderflowFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   990  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   991  /** \brief Returns the receive header end flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   992   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   993   * \return receive header end flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   994   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   995  IFX_INLINE boolean IfxAsclin_getRxHeaderEndFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   996  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   997  /** \brief Returns the receive response end flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   998   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   999   * \return receive response end flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1000   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1001  IFX_INLINE boolean IfxAsclin_getRxResponseEndFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1002  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1003  /** \brief Returns the transmission pending flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1004   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1005   * \return transmission pending flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1006   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1007  IFX_INLINE boolean IfxAsclin_getTransmissionCompletedFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1008  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1009  /** \brief Returns the transmit signal status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1010   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1011   * \return transmit signal status (0 is low & 1 is high)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1012   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1013  IFX_INLINE boolean IfxAsclin_getTransmitSignalStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1014  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1015  /** \brief Returns the current filling level of Tx FIFO
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1016   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1017   * \return current filling level of Tx FIFO
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1018   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1019  IFX_INLINE uint8 IfxAsclin_getTxFifoFillLevel(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1020  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1021  /** \brief Returns the Tx FIFO level flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1022   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1023   * \return Tx FIFO level flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1024   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1025  IFX_INLINE boolean IfxAsclin_getTxFifoFillLevelFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1026  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1027  /** \brief Returns the transmit FIFO inlet width
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1028   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1029   * \return number of bytes written to the Tx FIFO with one FPI bus write
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1030   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1031  IFX_INLINE uint8 IfxAsclin_getTxFifoInletWidth(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1032  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1033  /** \brief Returns the Tx FIFO overflow flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1034   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1035   * \return Tx FIFO overflow flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1036   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1037  IFX_INLINE boolean IfxAsclin_getTxFifoOverflowFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1038  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1039  /** \brief Returns the transmit header end flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1040   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1041   * \return transmit header end flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1042   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1043  IFX_INLINE boolean IfxAsclin_getTxHeaderEndFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1044  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1045  /** \brief Returns the transmit response end flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1046   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1047   * \return transmit response end flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1048   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1049  IFX_INLINE boolean IfxAsclin_getTxResponseEndFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1050  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1051  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1052   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1053   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1054   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1055   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1056  IFX_INLINE void IfxAsclin_setSleepMode(Ifx_ASCLIN *asclin, IfxAsclin_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1057  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1058  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1059  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1060  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1061  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1062  /** \brief API to get the address for ASCLIN HW module register memory map
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1063   * \param asclin Resource index of the ASCLIN
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1064   * \return ASCLIN module register address
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1065   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1066  IFX_EXTERN Ifx_ASCLIN *IfxAsclin_getAddress(IfxAsclin_Index asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1067  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1068  /** \brief Returns the ASCLIN module FA frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1069   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1070   * \return Returns the ASCLIN module FA frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1071   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1072  IFX_EXTERN float32 IfxAsclin_getFaFrequency(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1073  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1074  /** \brief API to get the resource index of the ASCLIN specified.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1075   * \return asclin resource index
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1076   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1077  IFX_EXTERN IfxAsclin_Index IfxAsclin_getIndex(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1078  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1079  /** \brief Returns the OVS frequency
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1080   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1081   * \return Returns the ASCLIN module OVS frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1082   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1083  IFX_EXTERN float32 IfxAsclin_getOvsFrequency(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1084  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1085  /** \brief Returns the PD frequency
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1086   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1087   * \return Returns the ASCLIN module PD frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1088   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1089  IFX_EXTERN float32 IfxAsclin_getPdFrequency(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1090  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1091  /** \brief Returns the SHIFT frequency
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1092   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1093   * \return Returns the ASCLIN module SHIFT frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1094   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1095  IFX_EXTERN float32 IfxAsclin_getShiftFrequency(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1096  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1097  /** \brief resets Asclin kernel
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1098   * \param asclin pointer to ASCLIN resgisters
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1099   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1100   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1101  IFX_EXTERN void IfxAsclin_resetModule(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1102  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1103  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1104  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1105  /** \addtogroup IfxLld_Asclin_Std_Configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1106   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1107  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1108  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1109  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1110  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1111  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1112  /** \brief disables all flags
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1113   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1114   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1115   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1116  IFX_INLINE void IfxAsclin_disableAllFlags(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1117  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1118  /** \brief Enables/disables the auto baudrate detection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1119   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1120   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1121   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1122   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1123  IFX_INLINE void IfxAsclin_enableAutoBaudrateDetection(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1124  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1125  /** \brief Enables/disables break detected flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1126   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1127   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1128   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1129   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1130  IFX_INLINE void IfxAsclin_enableBreakDetectedFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1131  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1132  /** \brief Enables/disables the collision detection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1133   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1134   * \param enable choice (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1135   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1136   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1137  IFX_INLINE void IfxAsclin_enableCollisionDetection(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1138  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1139  /** \brief Enables/disables LIN collision detection error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1140   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1141   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1142   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1143   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1144  IFX_INLINE void IfxAsclin_enableCollisionDetectionErrorFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1145  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1146  /** \brief Enables/disables CTS
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1147   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1148   * \param enable choice (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1149   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1150   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1151  IFX_INLINE void IfxAsclin_enableCts(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1152  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1153  /** \brief Enables/disables falling edge detected flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1154   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1155   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1156   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1157   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1158  IFX_INLINE void IfxAsclin_enableFallingEdgeDetectedFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1159  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1160  /** \brief Enables/disables frame error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1161   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1162   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1163   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1164   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1165  IFX_INLINE void IfxAsclin_enableFrameErrorFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1166  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1167  /** \brief Enables/disables the hardware checksum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1168   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1169   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1170   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1171   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1172  IFX_INLINE void IfxAsclin_enableHardwareChecksum(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1173  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1174  /** \brief Enables/disables header timeout flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1175   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1176   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1177   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1178   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1179  IFX_INLINE void IfxAsclin_enableHeaderTimeoutFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1180  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1181  /** \brief Enables/disables LIN auto baudrate detection error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1182   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1183   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1184   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1185   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1186  IFX_INLINE void IfxAsclin_enableLinAutoBaudDetectionErrorFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1187  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1188  /** \brief Enables/disables LIN checksum error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1189   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1190   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1192   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1193  IFX_INLINE void IfxAsclin_enableLinChecksumErrorFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1194  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1195  /** \brief Enables/disables LIN parity error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1196   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1197   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1198   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1199   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1200  IFX_INLINE void IfxAsclin_enableLinParityErrorFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1201  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1202  /** \brief Enables/disables the loop back mode
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1203   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1204   * \param enable choice (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1205   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1206   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1207  IFX_INLINE void IfxAsclin_enableLoopBackMode(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1208  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1209  /** \brief Enables/disables the parity bit attachment to tha data bits
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1210   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1211   * \param enable choice (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1212   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1213   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1214  IFX_INLINE void IfxAsclin_enableParity(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1215  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1216  /** \brief Enables/disables parity error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1217   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1218   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1219   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1220   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1221  IFX_INLINE void IfxAsclin_enableParityErrorFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1222  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1223  /** \brief Enables/disables raising edge detected flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1224   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1225   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1226   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1227   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1228  IFX_INLINE void IfxAsclin_enableRaisingEdgeDetectedFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1229  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1230  /** \brief Enables/disables response timeout flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1231   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1232   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1233   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1234   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1235  IFX_INLINE void IfxAsclin_enableResponseTimeoutFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1236  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1237  /** \brief Enables/disables Rx FIFO level flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1238   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1239   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1240   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1241   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1242  IFX_INLINE void IfxAsclin_enableRxFifoFillLevelFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1243  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1244  /** \brief Enables/disables the receive FIFO outlet to allow filling of Rx FIFO through shift register
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1245   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1246   * \param enable choice (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1247   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1248   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1249  IFX_INLINE void IfxAsclin_enableRxFifoInlet(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1250  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1251  /** \brief Enables/disables Rx FIFO overflow flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1252   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1253   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1254   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1255   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1256  IFX_INLINE void IfxAsclin_enableRxFifoOverflowFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1257  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1258  /** \brief Enables/disables Rx FIFO underflow flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1259   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1260   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1261   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1262   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1263  IFX_INLINE void IfxAsclin_enableRxFifoUnderflowFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1264  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1265  /** \brief Enables/disables receive header end flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1266   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1267   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1268   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1269   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1270  IFX_INLINE void IfxAsclin_enableRxHeaderEndFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1271  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1272  /** \brief Enables/disables receive response end flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1273   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1274   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1275   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1276   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1277  IFX_INLINE void IfxAsclin_enableRxResponseEndFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1278  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1279  /** \brief Enables/disables transmission completed flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1280   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1281   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1282   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1283   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1284  IFX_INLINE void IfxAsclin_enableTransmissionCompletedFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1285  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1286  /** \brief Enables/disables Tx FIFO level flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1287   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1288   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1290   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1291  IFX_INLINE void IfxAsclin_enableTxFifoFillLevelFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1292  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1293  /** \brief Enables/disables the transmit FIFO outlet to allow transmission
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1294   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1295   * \param enable choice (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1297   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1298  IFX_INLINE void IfxAsclin_enableTxFifoOutlet(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1299  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1300  /** \brief Enables/disables Tx FIFO overflow flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1301   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1302   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1303   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1304   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1305  IFX_INLINE void IfxAsclin_enableTxFifoOverflowFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1306  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1307  /** \brief Enables/disables transmit header end flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1308   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1309   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1310   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1311   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1312  IFX_INLINE void IfxAsclin_enableTxHeaderEndFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1313  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1314  /** \brief Enables/disables transmit response end flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1315   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1316   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1317   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1318   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1319  IFX_INLINE void IfxAsclin_enableTxResponseEndFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1320  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1321  /** \brief Returns the module's suspend state.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1322   * TRUE :if module is suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1323   * FALSE:if module is not yet suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1324   * \param asclin Pointer to ASCLIN module registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1325   * \return Suspend status (TRUE / FALSE)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1326   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1327  IFX_INLINE boolean IfxAsclin_isModuleSuspended(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1328  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1329  /** \brief Selects the clock polarity
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1330   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1331   * \param cpol CPOL selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1332   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1333   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1334  IFX_INLINE void IfxAsclin_setClockPolarity(Ifx_ASCLIN *asclin, IfxAsclin_ClockPolarity cpol);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1335  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1336  /** \brief Selects the CTS input pin
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1337   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1338   * \param ctsi CTS input pin selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1339   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1340   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1341  IFX_INLINE void IfxAsclin_setCtsInput(Ifx_ASCLIN *asclin, IfxAsclin_CtsInputSelect ctsi);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1342  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1343  /** \brief Selects the module's mode of operation
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1344   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1345   * \param mode mode selction
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1346   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1347   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1348  IFX_INLINE void IfxAsclin_setFrameMode(Ifx_ASCLIN *asclin, IfxAsclin_FrameMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1349  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1350  /** \brief Selects the RTS/CTS polarity
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1351   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1352   * \param rcpol RCPOL selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1353   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1354   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1355  IFX_INLINE void IfxAsclin_setRtsCtsPolarity(Ifx_ASCLIN *asclin, IfxAsclin_RtsCtsPolarity rcpol);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1356  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1357  /** \brief Selects the Rx FIFO interupt generation mode
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1358   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1359   * \param mode mode selction
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1360   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1361   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1362  IFX_INLINE void IfxAsclin_setRxFifoInterruptMode(Ifx_ASCLIN *asclin, IfxAsclin_FifoInterruptMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1363  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1364  /** \brief Selects the alternate input for Rx signal
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1365   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1366   * \param alti alternate input selection of Rx signal
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1367   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1368   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1369  IFX_INLINE void IfxAsclin_setRxInput(Ifx_ASCLIN *asclin, IfxAsclin_RxInputSelect alti);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1370  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1371  /** \brief Selects the slave polarity
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1372   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1373   * \param spol SPOL selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1374   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1375   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1376  IFX_INLINE void IfxAsclin_setSlavePolarity(Ifx_ASCLIN *asclin, IfxAsclin_SlavePolarity spol);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1377  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1378  /** \brief Configure the Module to Hard/Soft suspend mode.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1379   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1380   * \param asclin Pointer to ASCLIN module registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1381   * \param mode Module suspend mode
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1382   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1383   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1384  IFX_INLINE void IfxAsclin_setSuspendMode(Ifx_ASCLIN *asclin, IfxAsclin_SuspendMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1385  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1386  /** \brief Selects the Tx FIFO interupt generation mode
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1387   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1388   * \param mode mode selction
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1389   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1390   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1391  IFX_INLINE void IfxAsclin_setTxFifoInterruptMode(Ifx_ASCLIN *asclin, IfxAsclin_FifoInterruptMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1392  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1393  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1394  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1395  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1396  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1397  /** \brief Set the bit timing
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1398   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1399   * \note this function required FA source and the PD frequency to be set to their final values
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1400   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1401   * \param baudrate Required baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1402   * \param oversampling The oversampling factor
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1403   * \param samplepoint The sample point position
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1404   * \param medianFilter Number of samples per bit (median filter)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1405   * \return TRUE if configuration was successfull
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1406   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1407  IFX_EXTERN boolean IfxAsclin_setBitTiming(Ifx_ASCLIN *asclin, float32 baudrate, IfxAsclin_OversamplingFactor oversampling, IfxAsclin_SamplePointPosition samplepoint, IfxAsclin_SamplesPerBit medianFilter);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1408  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1409  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1410  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1411  /** \addtogroup IfxLld_Asclin_Std_External
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1412   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1413  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1414  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1415  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1416  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1417  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1418  /** \brief Disables the module
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1419   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1420   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1421   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1422  IFX_EXTERN void IfxAsclin_disableModule(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1423  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1424  /** \brief Enables the ASC error interrupt Flags
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1425   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1426   * \param parEnable parity error
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1427   * \param rfoEnable Rx FIFO overflow error
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1428   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1429   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1430  IFX_EXTERN void IfxAsclin_enableAscErrorFlags(Ifx_ASCLIN *asclin, boolean parEnable, boolean rfoEnable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1431  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1432  /** \brief Enables the module
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1433   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1435   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1436  IFX_EXTERN void IfxAsclin_enableModule(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1437  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1438  /** \brief Returns the SRC pointer for ERR
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1439   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1440   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1441  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxAsclin_getSrcPointerEr(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1442  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1443  /** \brief Returns the  SRC pointer for Rx
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1444   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1445   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1446  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxAsclin_getSrcPointerRx(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1447  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1448  /** \brief Returns the SRC pointer for Tx
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1449   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1450   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1451  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxAsclin_getSrcPointerTx(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1452  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1453  /** \brief Reads data up to 16 bits
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1454   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1455   * \param data Array where the read data shall be stored
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1456   * \param count number of items to read
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1457   * \return number of items that could not be read
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1458   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1459  IFX_EXTERN uint32 IfxAsclin_read16(Ifx_ASCLIN *asclin, uint16 *data, uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1460  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1461  /** \brief Reads data up to 32 bits
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1462   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1463   * \param data Array where the read data shall be stored
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1464   * \param count number of items to read
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1465   * \return number of items that could not be read
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1466   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1467  IFX_EXTERN uint32 IfxAsclin_read32(Ifx_ASCLIN *asclin, uint32 *data, uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1468  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1469  /** \brief Reads data up to 8 bits
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1470   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1471   * \param data Array where the read data shall be stored
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1472   * \param count number of items to read
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1473   * \return number of items that could not be read
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1474   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1475  IFX_EXTERN uint32 IfxAsclin_read8(Ifx_ASCLIN *asclin, uint8 *data, uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1476  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1477  /** \brief Sets the baudrate bit fields
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1478   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1479   * \param prescaler division ratio of the predivider
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1480   * \param numerator numerator of the fractional divider
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1481   * \param denominator denominator of the fractional divider
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1482   * \param oversampling division ratio of the baudrate postdivider
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1483   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1484   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1485  IFX_EXTERN void IfxAsclin_setBaudrateBitFields(Ifx_ASCLIN *asclin, uint16 prescaler, uint16 numerator, uint16 denominator, IfxAsclin_OversamplingFactor oversampling);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1486  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1487  /** \brief Sets the  clock source
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1488   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1489   * \param clockSource clock source selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1490   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1491   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1492  IFX_EXTERN void IfxAsclin_setClockSource(Ifx_ASCLIN *asclin, IfxAsclin_ClockSource clockSource);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1493  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1494  /** \brief Writes data up to 16 bits
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1495   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1496   * \param data Array of data to be send
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1497   * \param count number of items to be send
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1498   * \return the number of items that could not be send
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1499   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1500  IFX_EXTERN uint32 IfxAsclin_write16(Ifx_ASCLIN *asclin, uint16 *data, uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1501  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1502  /** \brief Writes data up to 32 bits
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1503   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1504   * \param data Array of data to be send
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1505   * \param count number of items to be send
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1506   * \return the number of items that could not be send
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1507   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1508  IFX_EXTERN uint32 IfxAsclin_write32(Ifx_ASCLIN *asclin, uint32 *data, uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1509  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1510  /** \brief Writes data up to 8 bits
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1511   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1512   * \param data Array of data to be send
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1513   * \param count number of items to be send
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1514   * \return the number of items that could not be send
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1515   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1516  IFX_EXTERN uint32 IfxAsclin_write8(Ifx_ASCLIN *asclin, uint8 *data, uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1517  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1518  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1519  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1520  /** \addtogroup IfxLld_Asclin_Std_IO
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1521   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1522  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1524  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1525  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1526  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1527  /** \brief Initializes a CTS input
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1528   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1529   * Attention: the kernel clock has to be disabled whenever the input multiplexer is changed.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1530   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1531   * This can be done with IfxAsclin_setClockSource(asclinSFR, IfxAsclin_ClockSource_noClock);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1532   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1533   * After the function call, the current clock can be enabled again.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1534   * \param cts the CTS Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1535   * \param inputMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1536   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1537   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1538   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1539  IFX_INLINE void IfxAsclin_initCtsPin(const IfxAsclin_Cts_In *cts, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1540  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1541  /** \brief Initializes a RTS output
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1542   * \param rts the RTS Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1543   * \param outputMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1544   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1545   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1546   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1547  IFX_INLINE void IfxAsclin_initRtsPin(const IfxAsclin_Rts_Out *rts, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1548  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1549  /** \brief Initializes a RX input
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1550   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1551   * Attention: the kernel clock has to be disabled whenever the input multiplexer is changed.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1552   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1553   * This can be done with IfxAsclin_setClockSource(asclinSFR, IfxAsclin_ClockSource_noClock);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1554   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1555   * After the function call, the current clock can be enabled again.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1556   * \param rx the RX Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1557   * \param inputMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1558   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1559   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1560   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1561  IFX_INLINE void IfxAsclin_initRxPin(const IfxAsclin_Rx_In *rx, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1562  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1563  /** \brief Initializes a SCLK output
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1564   * \param sclk the SCLK Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1565   * \param outputMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1566   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1567   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1568   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1569  IFX_INLINE void IfxAsclin_initSclkPin(const IfxAsclin_Sclk_Out *sclk, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1570  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1571  /** \brief Initializes a SLSO output
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1572   * \param slso the SLSO Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1573   * \param outputMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1574   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1575   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1576   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1577  IFX_INLINE void IfxAsclin_initSlsoPin(const IfxAsclin_Slso_Out *slso, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1578  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1579  /** \brief Initializes a TX output
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1580   * \param tx the TX Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1581   * \param outputMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1582   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1583   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1584   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1585  IFX_INLINE void IfxAsclin_initTxPin(const IfxAsclin_Tx_Out *tx, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1586  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1587  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1588  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1589  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1590  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1591  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1592  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1593  /**
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1594   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1595   * \return returns the value of RxDATA register
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1596   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1597  IFX_INLINE uint32 IfxAsclin_readRxData(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1598  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1599  /**
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1600   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1601   * \param data data to be written
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1602   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1603   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1604  IFX_INLINE void IfxAsclin_writeTxData(Ifx_ASCLIN *asclin, uint32 data);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1605  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1606  /** \brief Returns the status of all error flags
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1607   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1608   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1609   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1610  IFX_INLINE uint16 IfxAsclin_getAllErrorFlagsStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1611  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1612  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1613  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1614  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1615  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1616  IFX_INLINE void IfxAsclin_clearAllFlags(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1617  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1618      asclin->FLAGSCLEAR.U = 0xFFFFFFFF;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1619  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1620  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1621  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1622  IFX_INLINE void IfxAsclin_clearBreakDetectedFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1623  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1624      asclin->FLAGSCLEAR.B.BDC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1625  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1626  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1627  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1628  IFX_INLINE void IfxAsclin_clearCollisionDetectionErrorFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1629  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1630      asclin->FLAGSCLEAR.B.CEC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1631  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1632  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1633  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1634  IFX_INLINE void IfxAsclin_clearFallingEdgeDetectedFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1635  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1636      asclin->FLAGSCLEAR.B.FEDC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1637  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1638  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1639  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1640  IFX_INLINE void IfxAsclin_clearFrameErrorFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1641  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1642      asclin->FLAGSCLEAR.B.FEC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1643  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1644  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1645  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1646  IFX_INLINE void IfxAsclin_clearHeaderTimeoutFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1647  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1648      asclin->FLAGSCLEAR.B.HTC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1649  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1650  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1651  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1652  IFX_INLINE void IfxAsclin_clearKernelResetStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1653  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1654      asclin->KRSTCLR.B.CLR = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1655  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1656  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1657  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1658  IFX_INLINE void IfxAsclin_clearLinAutoBaudDetectionErrorFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1659  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1660      asclin->FLAGSCLEAR.B.LAC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1661  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1662  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1663  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1664  IFX_INLINE void IfxAsclin_clearLinChecksumErrorFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1665  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1666      asclin->FLAGSCLEAR.B.LCC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1667  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1668  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1669  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1670  IFX_INLINE void IfxAsclin_clearLinParityErrorFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1671  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1672      asclin->FLAGSCLEAR.B.LPC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1673  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1674  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1675  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1676  IFX_INLINE void IfxAsclin_clearParityErrorFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1677  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1678      asclin->FLAGSCLEAR.B.PEC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1679  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1680  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1681  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1682  IFX_INLINE void IfxAsclin_clearRaisingEdgeDetectedFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1683  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1684      asclin->FLAGSCLEAR.B.REDC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1685  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1686  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1687  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1688  IFX_INLINE void IfxAsclin_clearResponseTimeoutFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1689  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1690      asclin->FLAGSCLEAR.B.RTC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1691  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1692  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1693  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1694  IFX_INLINE void IfxAsclin_clearRxFifoFillLevelFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1695  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1696      asclin->FLAGSCLEAR.B.RFLC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1697  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1698  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1699  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1700  IFX_INLINE void IfxAsclin_clearRxFifoOverflowFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1701  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1702      asclin->FLAGSCLEAR.B.RFOC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1703  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1704  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1705  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1706  IFX_INLINE void IfxAsclin_clearRxFifoUnderflowFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1707  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1708      asclin->FLAGSCLEAR.B.RFUC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1709  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1710  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1711  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1712  IFX_INLINE void IfxAsclin_clearRxHeaderEndFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1713  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1714      asclin->FLAGSCLEAR.B.RHC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1715  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1716  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1717  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1718  IFX_INLINE void IfxAsclin_clearRxResponseEndFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1719  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1720      asclin->FLAGSCLEAR.B.RRC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1721  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1722  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1723  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1724  IFX_INLINE void IfxAsclin_clearTransmissionCompletedFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1725  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1726      asclin->FLAGSCLEAR.B.TCC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1727  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1728  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1729  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1730  IFX_INLINE void IfxAsclin_clearTxFifoFillLevelFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1731  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1732      asclin->FLAGSCLEAR.B.TFLC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1733  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1734  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1735  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1736  IFX_INLINE void IfxAsclin_clearTxFifoOverflowFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1737  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1738      asclin->FLAGSCLEAR.B.TFOC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1739  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1740  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1741  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1742  IFX_INLINE void IfxAsclin_clearTxHeaderEndFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1743  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1744      asclin->FLAGSCLEAR.B.THC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1745  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1746  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1747  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1748  IFX_INLINE void IfxAsclin_clearTxResponseEndFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1749  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1750      asclin->FLAGSCLEAR.B.TRC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1751  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1752  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1753  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1754  IFX_INLINE void IfxAsclin_disableAllFlags(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1755  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1756      asclin->FLAGSENABLE.U = 0x00000000;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1757  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1758  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1759  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1760  IFX_INLINE void IfxAsclin_enableAutoBaudrateDetection(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1761  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1762      asclin->LIN.CON.B.ABD = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1763  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1764  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1765  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1766  IFX_INLINE void IfxAsclin_enableBreakDetectedFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1767  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1768      asclin->FLAGSENABLE.B.BDE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1769  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1770  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1771  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1772  IFX_INLINE void IfxAsclin_enableCollisionDetection(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1773  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1774      asclin->FRAMECON.B.CEN = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1775  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1776  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1777  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1778  IFX_INLINE void IfxAsclin_enableCollisionDetectionErrorFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1779  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1780      asclin->FLAGSENABLE.B.CEE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1781  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1782  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1783  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1784  IFX_INLINE void IfxAsclin_enableCts(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1785  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1786      asclin->IOCR.B.CTSEN = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1787  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1788  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1789  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1790  IFX_INLINE void IfxAsclin_enableFallingEdgeDetectedFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1791  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1792      asclin->FLAGSENABLE.B.FEDE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1793  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1794  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1795  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1796  IFX_INLINE void IfxAsclin_enableFrameErrorFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1797  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1798      asclin->FLAGSENABLE.B.FEE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1799  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1800  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1801  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1802  IFX_INLINE void IfxAsclin_enableHardwareChecksum(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1803  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1804      asclin->LIN.CON.B.CSEN = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1805  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1806  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1807  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1808  IFX_INLINE void IfxAsclin_enableHeaderTimeoutFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1809  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1810      asclin->FLAGSENABLE.B.HTE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1811  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1812  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1813  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1814  IFX_INLINE void IfxAsclin_enableLinAutoBaudDetectionErrorFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1815  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1816      asclin->FLAGSENABLE.B.LAE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1817  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1818  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1819  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1820  IFX_INLINE void IfxAsclin_enableLinChecksumErrorFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1821  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1822      asclin->FLAGSENABLE.B.LCE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1823  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1824  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1825  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1826  IFX_INLINE void IfxAsclin_enableLinParityErrorFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1827  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1828      asclin->FLAGSENABLE.B.LPE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1829  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1830  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1831  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1832  IFX_INLINE void IfxAsclin_enableLoopBackMode(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1833  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1834      asclin->IOCR.B.LB = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1835  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1836  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1837  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1838  IFX_INLINE void IfxAsclin_enableParity(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1839  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1840      asclin->FRAMECON.B.PEN = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1841  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1842  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1843  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1844  IFX_INLINE void IfxAsclin_enableParityErrorFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1845  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1846      asclin->FLAGSENABLE.B.PEE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1847  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1848  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1849  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1850  IFX_INLINE void IfxAsclin_enableRaisingEdgeDetectedFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1851  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1852      asclin->FLAGSENABLE.B.REDE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1853  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1854  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1855  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1856  IFX_INLINE void IfxAsclin_enableResponseTimeoutFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1857  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1858      asclin->FLAGSENABLE.B.RTE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1859  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1860  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1861  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1862  IFX_INLINE void IfxAsclin_enableRxFifoFillLevelFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1863  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1864      asclin->FLAGSENABLE.B.RFLE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1865  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1866  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1867  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1868  IFX_INLINE void IfxAsclin_enableRxFifoInlet(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1869  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1870      asclin->RXFIFOCON.B.ENI = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1871  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1872  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1873  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1874  IFX_INLINE void IfxAsclin_enableRxFifoOverflowFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1875  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1876      asclin->FLAGSENABLE.B.RFOE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1877  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1878  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1879  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1880  IFX_INLINE void IfxAsclin_enableRxFifoUnderflowFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1881  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1882      asclin->FLAGSENABLE.B.RFUE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1883  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1884  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1885  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1886  IFX_INLINE void IfxAsclin_enableRxHeaderEndFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1887  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1888      asclin->FLAGSENABLE.B.RHE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1889  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1890  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1891  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1892  IFX_INLINE void IfxAsclin_enableRxResponseEndFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1893  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1894      asclin->FLAGSENABLE.B.RRE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1895  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1896  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1897  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1898  IFX_INLINE void IfxAsclin_enableTransmissionCompletedFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1899  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1900      asclin->FLAGSENABLE.B.TCE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1901  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1902  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1903  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1904  IFX_INLINE void IfxAsclin_enableTxFifoFillLevelFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1905  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1906      asclin->FLAGSENABLE.B.TFLE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1907  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1908  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1909  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1910  IFX_INLINE void IfxAsclin_enableTxFifoOutlet(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1911  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1912      asclin->TXFIFOCON.B.ENO = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1913  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1914  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1915  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1916  IFX_INLINE void IfxAsclin_enableTxFifoOverflowFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1917  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1918      asclin->FLAGSENABLE.B.TFOE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1919  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1920  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1921  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1922  IFX_INLINE void IfxAsclin_enableTxHeaderEndFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1923  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1924      asclin->FLAGSENABLE.B.THE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1925  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1926  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1927  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1928  IFX_INLINE void IfxAsclin_enableTxResponseEndFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1929  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1930      asclin->FLAGSENABLE.B.TRE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1931  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1932  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1933  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1934  IFX_INLINE void IfxAsclin_flushRxFifo(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1935  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1936      asclin->RXFIFOCON.B.FLUSH = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1937  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1938  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1939  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1940  IFX_INLINE void IfxAsclin_flushTxFifo(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1941  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1942      asclin->TXFIFOCON.B.FLUSH = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1943  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1944  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1945  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1946  IFX_INLINE boolean IfxAsclin_getBreakDetectedFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1947  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1948      return asclin->FLAGS.B.BD;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1949  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1950  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1951  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1952  IFX_INLINE uint8 IfxAsclin_getClockSource(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1953  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1954      return asclin->CSR.B.CLKSEL;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1955  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1956  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1957  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1958  IFX_INLINE boolean IfxAsclin_getClockStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1959  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1960      return asclin->CSR.B.CON;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1961  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1962  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1963  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1964  IFX_INLINE boolean IfxAsclin_getCollisionDetectionErrorFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1965  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1966      return asclin->FLAGS.B.CE;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1967  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1968  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1969  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1970  IFX_INLINE boolean IfxAsclin_getFallingEdgeDetectedFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1971  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1972      return asclin->FLAGS.B.FED;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1973  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1974  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1975  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1976  IFX_INLINE boolean IfxAsclin_getFrameErrorFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1977  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1978      return asclin->FLAGS.B.FE;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1979  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1980  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1981  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1982  IFX_INLINE boolean IfxAsclin_getHeaderTimeoutFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1983  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1984      return asclin->FLAGS.B.HT;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1985  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1986  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1987  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1988  IFX_INLINE boolean IfxAsclin_getKernelResetStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1989  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1990      return asclin->KRST0.B.RSTSTAT;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1991  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1992  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1993  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1994  IFX_INLINE boolean IfxAsclin_getLinAutoBaudDetectionErrorFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1995  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1996      return asclin->FLAGS.B.LA;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1997  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1998  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1999  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2000  IFX_INLINE boolean IfxAsclin_getLinChecksumErrorFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2001  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2002      return asclin->FLAGS.B.LC;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2003  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2004  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2005  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2006  IFX_INLINE boolean IfxAsclin_getLinParityErrorFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2007  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2008      return asclin->FLAGS.B.LP;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2009  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2010  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2011  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2012  IFX_INLINE boolean IfxAsclin_getModuleStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2013  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2014      return asclin->CLC.B.DISS;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2015  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2016  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2017  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2018  IFX_INLINE boolean IfxAsclin_getParityErrorFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2019  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2020      return asclin->FLAGS.B.PE;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2021  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2022  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2023  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2024  IFX_INLINE uint16 IfxAsclin_getPrescaler(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2025  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2026      return asclin->BITCON.B.PRESCALER + 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2027  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2028  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2029  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2030  IFX_INLINE boolean IfxAsclin_getRaisingEdgeDetectedFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2031  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2032      return asclin->FLAGS.B.RED;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2033  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2034  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2035  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2036  IFX_INLINE boolean IfxAsclin_getReceiveSignalStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2037  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2038      return asclin->IOCR.B.RXM;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2039  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2040  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2041  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2042  IFX_INLINE boolean IfxAsclin_getResponseTimeoutFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2043  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2044      return asclin->FLAGS.B.RT;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2045  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2046  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2047  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2048  IFX_INLINE uint8 IfxAsclin_getRxFifoFillLevel(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2049  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2050      return asclin->RXFIFOCON.B.FILL;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2051  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2052  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2053  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2054  IFX_INLINE boolean IfxAsclin_getRxFifoFillLevelFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2055  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2056      return asclin->FLAGS.B.RFL;
	ld.bu	d15,[a2]55
.L73:
	jz.t	d15:4,.L8
.L77:

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   117              {
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   118                  uint8 id = MASTER_ID_0x26;
	mov	d15,#38
	st.b	[a10],d15
.L139:

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   119                  HandleID = MASTER_ID_0x26;
	st.b	HandleID,d15
.L140:

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   120                  IfxAsclin_Lin_sendHeader(&g_linMaster, &id); 
	mov.aa	a5,a10
	mov.aa	a4,a15
	call	IfxAsclin_Lin_sendHeader
.L8:
.L7:
.L6:

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   121              }
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   122          }
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   123  
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   124          IfxAsclin_Lin_clearFlagsStatus(g_linMaster.asclin);
	ld.a	a4,[a15]
	call	IfxAsclin_Lin_clearFlagsStatus
.L4:

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   125      }
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   126  
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   127      /* check Tx completed */
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   128      if (IfxAsclin_getTransmissionCompletedFlagStatus(g_linMaster.asclin))
	ld.a	a12,[a15]
.L80:

; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	     1  /**
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	     2   * \file IfxAsclin.h
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	     3   * \brief ASCLIN  basic functionality
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	     4   * \ingroup IfxLld_Asclin
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	     5   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	     6   * \version iLLD_1_0_1_12_0
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	     7   * \copyright Copyright (c) 2019 Infineon Technologies AG. All rights reserved.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	     8   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	     9   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    10   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    11   *                                 IMPORTANT NOTICE
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    12   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    13   * Use of this file is subject to the terms of use agreed between (i) you or
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    14   * the company in which ordinary course of business you are acting and (ii)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    15   * Infineon Technologies AG or its licensees. If and as long as no such terms
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    16   * of use are agreed, use of this file is subject to following:
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    17   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    18   * Boost Software License - Version 1.0 - August 17th, 2003
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    19   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    20   * Permission is hereby granted, free of charge, to any person or organization
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    21   * obtaining a copy of the software and accompanying documentation covered by
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    22   * this license (the "Software") to use, reproduce, display, distribute,
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    23   * execute, and transmit the Software, and to prepare derivative works of the
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    24   * Software, and to permit third-parties to whom the Software is furnished to
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    25   * do so, all subject to the following:
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    26   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    27   * The copyright notices in the Software and this entire statement, including
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    28   * the above license grant, this restriction and the following disclaimer, must
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    29   * be included in all copies of the Software, in whole or in part, and all
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    30   * derivative works of the Software, unless such copies or derivative works are
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    31   * solely in the form of machine-executable object code generated by a source
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    32   * language processor.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    33   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    34   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    35   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    36   * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    37   * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    38   * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    39   * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    40   * DEALINGS IN THE SOFTWARE.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    41   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    42   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    43   * \defgroup IfxLld_Asclin_Std_Enumerations Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    44   * \ingroup IfxLld_Asclin_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    45   * \defgroup IfxLld_Asclin_Std_Operative Operative Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    46   * \ingroup IfxLld_Asclin_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    47   * \defgroup IfxLld_Asclin_Std_Utility Utility Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    48   * \ingroup IfxLld_Asclin_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    49   * \defgroup IfxLld_Asclin_Std_Configuration Configuration Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    50   * \ingroup IfxLld_Asclin_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    51   * \defgroup IfxLld_Asclin_Std_External External Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    52   * \ingroup IfxLld_Asclin_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    53   * \defgroup IfxLld_Asclin_Std_IO IO Pin Configuration Functions
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    54   * \ingroup IfxLld_Asclin_Std
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    55   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    56  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    57  #ifndef IFXASCLIN_H
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    58  #define IFXASCLIN_H 1
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    59  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    60  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    61  /*----------------------------------Includes----------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    62  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    63  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    64  #include "_Impl/IfxAsclin_cfg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    65  #include "Scu/Std/IfxScuCcu.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    66  #include "Scu/Std/IfxScuWdt.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    67  #include "Cpu/Std/IfxCpu_Intrinsics.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    68  #include "IfxAsclin_reg.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    69  #include "Src/Std/IfxSrc.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    70  #include "_PinMap/IfxAsclin_PinMap.h"
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    71  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    72  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    73  /*--------------------------------Enumerations--------------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    74  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    75  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    76  /** \addtogroup IfxLld_Asclin_Std_Enumerations
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    77   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    78  /** \brief Defines if the classic or the enhanced checksum will be calculated by the checksum block.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    79   * Definition in Ifx_ASCLIN.DATCON.B.CSM
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    80   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    81  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    82  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    83      IfxAsclin_Checksum_classic  = 0, /**< \brief classic checksum */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    84      IfxAsclin_Checksum_enhanced = 1  /**< \brief enhanced checksum */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    85  } IfxAsclin_Checksum;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    86  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    87  /** \brief Defines if the received checksum byte is written into the RXFifo or not.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    88   * Definition in Ifx_ASCLIN.LIN.CON.B.CSI
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    89   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    90  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    91  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    92      IfxAsclin_ChecksumInjection_notWritten = 0,  /**< \brief checksum byte is not written */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    93      IfxAsclin_ChecksumInjection_written    = 1   /**< \brief checksum byte is written */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    94  } IfxAsclin_ChecksumInjection;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    95  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    96  /** \brief CPOL defines the idle level of the clock signal in the SPI mode.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    97   * Idle level is the level outside the data transmission time intervals.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    98   * Definition in Ifx_ASCLIN.IOCR.B.CPOL
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	    99   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   100  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   101  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   102      IfxAsclin_ClockPolarity_idleLow  = 0, /**< \brief idle low */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   103      IfxAsclin_ClockPolarity_idleHigh = 1  /**< \brief idle high */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   104  } IfxAsclin_ClockPolarity;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   105  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   106  /** \brief Selection of clock source\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   107   * Definition in Ifx_ASCLIN.CSR.B.CLKSEL
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   108   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   109  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   110  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   111      IfxAsclin_ClockSource_noClock      = 0,  /**< \brief no clock will be supplied */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   112      IfxAsclin_ClockSource_ascFastClock = 2,  /**< \brief f asclinf wiil be supplied */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   113      IfxAsclin_ClockSource_ascSlowClock = 4   /**< \brief f asclins will be supplied */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   114  } IfxAsclin_ClockSource;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   115  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   116  /** \brief CTS input pin selection\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   117   * Definition in Ifx_ASCLIN.IOCR.B.CTS
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   118   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   119  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   120  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   121      IfxAsclin_CtsInputSelect_0,     /**< \brief CTS input pin 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   122      IfxAsclin_CtsInputSelect_1,     /**< \brief CTS input pin 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   123      IfxAsclin_CtsInputSelect_2,     /**< \brief CTS input pin 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   124      IfxAsclin_CtsInputSelect_3      /**< \brief CTS input pin 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   125  } IfxAsclin_CtsInputSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   126  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   127  /** \brief Number of bits per transfer\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   128   * Definition in Ifx_ASCLIN.FRAMECON.B.DATALEN
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   129   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   130  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   131  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   132      IfxAsclin_DataLength_1 = 0,      /**< \brief number of bits per transfer 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   133      IfxAsclin_DataLength_2,          /**< \brief number of bits per transfer 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   134      IfxAsclin_DataLength_3,          /**< \brief number of bits per transfer 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   135      IfxAsclin_DataLength_4,          /**< \brief number of bits per transfer 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   136      IfxAsclin_DataLength_5,          /**< \brief number of bits per transfer 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   137      IfxAsclin_DataLength_6,          /**< \brief number of bits per transfer 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   138      IfxAsclin_DataLength_7,          /**< \brief number of bits per transfer 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   139      IfxAsclin_DataLength_8,          /**< \brief number of bits per transfer 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   140      IfxAsclin_DataLength_9,          /**< \brief number of bits per transfer 8  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   141      IfxAsclin_DataLength_10,         /**< \brief number of bits per transfer 9  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   142      IfxAsclin_DataLength_11,         /**< \brief number of bits per transfer 10  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   143      IfxAsclin_DataLength_12,         /**< \brief number of bits per transfer 11  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   144      IfxAsclin_DataLength_13,         /**< \brief number of bits per transfer 12  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   145      IfxAsclin_DataLength_14,         /**< \brief number of bits per transfer 13  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   146      IfxAsclin_DataLength_15,         /**< \brief number of bits per transfer 14  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   147      IfxAsclin_DataLength_16          /**< \brief number of bits per transfer 15  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   148  } IfxAsclin_DataLength;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   149  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   150  /** \brief Defines the interrupt generation modes of Tx FIFO and Rx FIFO\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   151   * Definition in Ifx_ASCLIN.RXFIFOCON.B.FM and Ifx_ASCLIN.TXFIFOCON.B.FM
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   152   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   153  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   154  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   155      IfxAsclin_FifoInterruptMode_combined,  /**< \brief Combined Move Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   156      IfxAsclin_FifoInterruptMode_single,    /**< \brief Single Move Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   157      IfxAsclin_FifoInterruptMode_batch      /**< \brief Batch Move Mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   158  } IfxAsclin_FifoInterruptMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   159  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   160  /** \brief Defines the basic operating mode of the module. Changing the mode must be done by switching first to initialize mode, and then to the other mode.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   161   * Definition in Ifx_ASCLIN.FRAMECON.B.MODE
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   162   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   163  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   164  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   165      IfxAsclin_FrameMode_initialise = 0,  /**< \brief initialise mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   166      IfxAsclin_FrameMode_asc        = 1,  /**< \brief asc mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   167      IfxAsclin_FrameMode_spi        = 2,  /**< \brief spi mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   168      IfxAsclin_FrameMode_lin        = 3   /**< \brief lin mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   169  } IfxAsclin_FrameMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   170  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   171  /** \brief Defines if LIN frame shall consist of a header and response or of a header only.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   172   * Definition in Ifx_ASCLIN.DATCON.B.HO
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   173   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   174  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   175  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   176      IfxAsclin_HeaderResponseSelect_headerAndResponse = 0,  /**< \brief header and response expected */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   177      IfxAsclin_HeaderResponseSelect_headerOnly        = 1   /**< \brief header only expected */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   178  } IfxAsclin_HeaderResponseSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   179  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   180  /** \brief Defines the duration of the IDLE delay in bit times.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   181   * SPI mode: this is the idle time between the frames.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   182   * ASC and LIN mode: this is the pause inserted between transmission of bytes.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   183   * Definition in Ifx_ASCLIN.FRAMECON.B.IDLE
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   184   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   185  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   186  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   187      IfxAsclin_IdleDelay_0,     /**< \brief idle delay in 0 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   188      IfxAsclin_IdleDelay_1,     /**< \brief idle delay in 1 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   189      IfxAsclin_IdleDelay_2,     /**< \brief idle delay in 2 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   190      IfxAsclin_IdleDelay_3,     /**< \brief idle delay in 3 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   191      IfxAsclin_IdleDelay_4,     /**< \brief idle delay in 4 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   192      IfxAsclin_IdleDelay_5,     /**< \brief idle delay in 5 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   193      IfxAsclin_IdleDelay_6,     /**< \brief idle delay in 6 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   194      IfxAsclin_IdleDelay_7      /**< \brief idle delay in 7 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   195  } IfxAsclin_IdleDelay;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   196  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   197  /** \brief Defines the leading delay in bit times in SPI mode. ASC mode: not applicable.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   198   * LIN mode: delay between the end of the break and the start of the sync character.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   199   * Definition in Ifx_ASCLIN.FRAMECON.B.LEAD
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   200   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   201  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   202  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   203      IfxAsclin_LeadDelay_0,     /**< \brief lead delay in 0 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   204      IfxAsclin_LeadDelay_1,     /**< \brief lead delay in 1 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   205      IfxAsclin_LeadDelay_2,     /**< \brief lead delay in 2 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   206      IfxAsclin_LeadDelay_3,     /**< \brief lead delay in 3 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   207      IfxAsclin_LeadDelay_4,     /**< \brief lead delay in 4 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   208      IfxAsclin_LeadDelay_5,     /**< \brief lead delay in 5 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   209      IfxAsclin_LeadDelay_6,     /**< \brief lead delay in 6 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   210      IfxAsclin_LeadDelay_7      /**< \brief lead delay in 7 bit times  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   211  } IfxAsclin_LeadDelay;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   212  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   213  /** \brief Configures if the module in LIN mode operates as master or slave\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   214   * Definition in Ifx_ASCLIN.LIN.CON.B.MS
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   215   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   216  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   217  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   218      IfxAsclin_LinMode_slave  = 0, /**< \brief operates in slave mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   219      IfxAsclin_LinMode_master = 1  /**< \brief operates in master mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   220  } IfxAsclin_LinMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   221  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   222  /** \brief Defines the timeout threshold of RESPOSE bit is for LIN response timeout or LIN frame timeout.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   223   * Definition in Ifx_ASCLIN.DATCON.B.RM
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   224   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   225  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   226  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   227      IfxAsclin_LinResponseTimeoutMode_frameTimeout    = 0, /**< \brief timeout threshold is for frame */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   228      IfxAsclin_LinResponseTimeoutMode_responseTimeout = 1  /**< \brief timeout threshold is for reponse */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   229  } IfxAsclin_LinResponseTimeoutMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   230  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   231  /** \brief Defines the bit length in ticks in the range of 1 to 16. The lengths of 1 to 3 are not allowed\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   232   * Definition in Ifx_ASCLIN.BITCON.B.OVERSAMPLING
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   233   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   234  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   235  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   236      IfxAsclin_OversamplingFactor_4  = 3,   /**< \brief oversampling factor 4 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   237      IfxAsclin_OversamplingFactor_5  = 4,   /**< \brief oversampling factor 5 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   238      IfxAsclin_OversamplingFactor_6  = 5,   /**< \brief oversampling factor 6 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   239      IfxAsclin_OversamplingFactor_7  = 6,   /**< \brief oversampling factor 7 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   240      IfxAsclin_OversamplingFactor_8  = 7,   /**< \brief oversampling factor 8 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   241      IfxAsclin_OversamplingFactor_9  = 8,   /**< \brief oversampling factor 9 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   242      IfxAsclin_OversamplingFactor_10 = 9,   /**< \brief oversampling factor 10 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   243      IfxAsclin_OversamplingFactor_11 = 10,  /**< \brief oversampling factor 11 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   244      IfxAsclin_OversamplingFactor_12 = 11,  /**< \brief oversampling factor 12 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   245      IfxAsclin_OversamplingFactor_13 = 12,  /**< \brief oversampling factor 13 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   246      IfxAsclin_OversamplingFactor_14 = 13,  /**< \brief oversampling factor 14 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   247      IfxAsclin_OversamplingFactor_15 = 14,  /**< \brief oversampling factor 15 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   248      IfxAsclin_OversamplingFactor_16 = 15   /**< \brief oversampling factor 16 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   249  } IfxAsclin_OversamplingFactor;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   250  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   251  /** \brief Type of parity bit attached to data bits\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   252   * Definition in Ifx_ASCLIN.FRAMECON.B.ODD
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   253   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   254  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   255  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   256      IfxAsclin_ParityType_even = 0,  /**< \brief even parity */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   257      IfxAsclin_ParityType_odd  = 1   /**< \brief odd parity */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   258  } IfxAsclin_ParityType;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   259  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   260  /** \brief Receive buffer mode\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   261   * Definition in Ifx_ASCLIN.RXFIFOCON.B.BUF
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   262   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   263  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   264  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   265      IfxAsclin_ReceiveBufferMode_rxFifo   = 0, /**< \brief RxFIFO mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   266      IfxAsclin_ReceiveBufferMode_rxBuffer = 1  /**< \brief single stage Rx buffer */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   267  } IfxAsclin_ReceiveBufferMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   268  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   269  /** \brief Polarity of the RTS and CTS signals\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   270   * Definition in Ifx_ASCLIN.IOCR.B.RCPOL
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   271   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   272  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   273  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   274      IfxAsclin_RtsCtsPolarity_activeHigh = 0,  /**< \brief ready/clear are active-high */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   275      IfxAsclin_RtsCtsPolarity_activeLow  = 1   /**< \brief ready/clear are active-low */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   276  } IfxAsclin_RtsCtsPolarity;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   277  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   278  /** \brief Defines the filling level that triggers a drain (RX) interrupt or DMA access\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   279   * Definition in Ifx_ASCLIN.RXFIFOCON.B.INTLEVEL
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   280   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   281  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   282  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   283      IfxAsclin_RxFifoInterruptLevel_1,     /**< \brief RX FIFO level 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   284      IfxAsclin_RxFifoInterruptLevel_2,     /**< \brief RX FIFO level 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   285      IfxAsclin_RxFifoInterruptLevel_3,     /**< \brief RX FIFO level 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   286      IfxAsclin_RxFifoInterruptLevel_4,     /**< \brief RX FIFO level 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   287      IfxAsclin_RxFifoInterruptLevel_5,     /**< \brief RX FIFO level 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   288      IfxAsclin_RxFifoInterruptLevel_6,     /**< \brief RX FIFO level 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   289      IfxAsclin_RxFifoInterruptLevel_7,     /**< \brief RX FIFO level 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   290      IfxAsclin_RxFifoInterruptLevel_8,     /**< \brief RX FIFO level 8  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   291      IfxAsclin_RxFifoInterruptLevel_9,     /**< \brief RX FIFO level 9  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   292      IfxAsclin_RxFifoInterruptLevel_10,    /**< \brief RX FIFO level 10  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   293      IfxAsclin_RxFifoInterruptLevel_11,    /**< \brief RX FIFO level 11  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   294      IfxAsclin_RxFifoInterruptLevel_12,    /**< \brief RX FIFO level 12  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   295      IfxAsclin_RxFifoInterruptLevel_13,    /**< \brief RX FIFO level 13  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   296      IfxAsclin_RxFifoInterruptLevel_14,    /**< \brief RX FIFO level 14  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   297      IfxAsclin_RxFifoInterruptLevel_15,    /**< \brief RX FIFO level 15  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   298      IfxAsclin_RxFifoInterruptLevel_16     /**< \brief RX FIFO level 16  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   299  } IfxAsclin_RxFifoInterruptLevel;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   300  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   301  /** \brief Defines the number of bytes read from the Rx FIFO with one FPI bus read\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   302   * Definition in Ifx_ASCLIN.RXFIFOCON.B.OUTW
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   303   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   304  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   305  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   306      IfxAsclin_RxFifoOutletWidth_0,     /**< \brief number of bytes 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   307      IfxAsclin_RxFifoOutletWidth_1,     /**< \brief number of bytes 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   308      IfxAsclin_RxFifoOutletWidth_2,     /**< \brief number of bytes 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   309      IfxAsclin_RxFifoOutletWidth_3      /**< \brief number of bytes 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   310  } IfxAsclin_RxFifoOutletWidth;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   311  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   312  /** \brief Alternate input selection for Rx signal.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   313   * Definition in Ifx_ASCLIN.IOCR.B.ALTI
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   314   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   315  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   316  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   317      IfxAsclin_RxInputSelect_0,     /**< \brief alternate input selection 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   318      IfxAsclin_RxInputSelect_1,     /**< \brief alternate input selection 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   319      IfxAsclin_RxInputSelect_2,     /**< \brief alternate input selection 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   320      IfxAsclin_RxInputSelect_3,     /**< \brief alternate input selection 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   321      IfxAsclin_RxInputSelect_4,     /**< \brief alternate input selection 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   322      IfxAsclin_RxInputSelect_5,     /**< \brief alternate input selection 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   323      IfxAsclin_RxInputSelect_6,     /**< \brief alternate input selection 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   324      IfxAsclin_RxInputSelect_7      /**< \brief alternate input selection 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   325  } IfxAsclin_RxInputSelect;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   326  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   327  /** \brief Sample point position\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   328   * Definition in Ifx_ASCLIN.BITCON.B.SAMPLEPOINT
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   329   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   330  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   331  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   332      IfxAsclin_SamplePointPosition_1  = 1,   /**< \brief sample point position at 1 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   333      IfxAsclin_SamplePointPosition_2  = 2,   /**< \brief sample point position at 2 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   334      IfxAsclin_SamplePointPosition_3  = 3,   /**< \brief sample point position at 3 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   335      IfxAsclin_SamplePointPosition_4  = 4,   /**< \brief sample point position at 4 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   336      IfxAsclin_SamplePointPosition_5  = 5,   /**< \brief sample point position at 5 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   337      IfxAsclin_SamplePointPosition_6  = 6,   /**< \brief sample point position at 6 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   338      IfxAsclin_SamplePointPosition_7  = 7,   /**< \brief sample point position at 7 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   339      IfxAsclin_SamplePointPosition_8  = 8,   /**< \brief sample point position at 8 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   340      IfxAsclin_SamplePointPosition_9  = 9,   /**< \brief sample point position at 9 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   341      IfxAsclin_SamplePointPosition_10 = 10,  /**< \brief sample point position at 10 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   342      IfxAsclin_SamplePointPosition_11 = 11,  /**< \brief sample point position at 11 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   343      IfxAsclin_SamplePointPosition_12 = 12,  /**< \brief sample point position at 12 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   344      IfxAsclin_SamplePointPosition_13 = 13,  /**< \brief sample point position at 13 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   345      IfxAsclin_SamplePointPosition_14 = 14,  /**< \brief sample point position at 14 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   346      IfxAsclin_SamplePointPosition_15 = 15   /**< \brief sample point position at 15 */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   347  } IfxAsclin_SamplePointPosition;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   348  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   349  /** \brief Number of samples per bit, sample mode/medianfilter\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   350   * Definition in Ifx_ASCLIN.BITCON.B.SM
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   351   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   352  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   353  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   354      IfxAsclin_SamplesPerBit_one   = 0, /**< \brief one sample per bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   355      IfxAsclin_SamplesPerBit_three = 1  /**< \brief three samples per bit */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   356  } IfxAsclin_SamplesPerBit;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   357  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   358  /** \brief SPI mode: defines the shift direction of the shift register.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   359   * ASC and LIN mode: should be set to 0.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   360   * Definition in Ifx_ASCLIN.FRAMECON.B.MSB
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   361   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   362  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   363  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   364      IfxAsclin_ShiftDirection_lsbFirst = 0,  /**< \brief LSB first */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   365      IfxAsclin_ShiftDirection_msbFirst = 1   /**< \brief MSB first */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   366  } IfxAsclin_ShiftDirection;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   367  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   368  /** \brief Defines the idle level of the SLSO signal, which is the level.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   369   * Outside the data transmission, leading and trailing time intervals.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   370   * Definition in Ifx_ASCLIN.IOCR.B.SPOL
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   371   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   372  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   373  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   374      IfxAsclin_SlavePolarity_idleLow  = 0, /**< \brief idle low */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   375      IfxAsclin_SlavePolarity_idlehigh = 1  /**< \brief idle high */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   376  } IfxAsclin_SlavePolarity;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   377  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   378  /** \brief Enable/disable the sensitivity of the module to sleep signal\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   379   * Definition in Ifx_ASCLIN.CLC.B.EDIS
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   380   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   381  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   382  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   383      IfxAsclin_SleepMode_enable  = 0, /**< \brief enables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   384      IfxAsclin_SleepMode_disable = 1  /**< \brief disables sleep mode */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   385  } IfxAsclin_SleepMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   386  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   387  /** \brief Error status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   388   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   389  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   390  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   391      IfxAsclin_Status_configurationError = 0,  /**< \brief Configuration error */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   392      IfxAsclin_Status_noError            = 1   /**< \brief No error */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   393  } IfxAsclin_Status;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   394  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   395  /** \brief ASC and LIN mode: number of stop bits (0 is not allowed), SPI mode: trailing delay.\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   396   * Definition in Ifx_ASCLIN.FRAMECON.B.STOP
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   397   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   398  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   399  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   400      IfxAsclin_StopBit_0,     /**< \brief number of stop bits 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   401      IfxAsclin_StopBit_1,     /**< \brief number of stop bits 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   402      IfxAsclin_StopBit_2,     /**< \brief number of stop bits 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   403      IfxAsclin_StopBit_3,     /**< \brief number of stop bits 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   404      IfxAsclin_StopBit_4,     /**< \brief number of stop bits 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   405      IfxAsclin_StopBit_5,     /**< \brief number of stop bits 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   406      IfxAsclin_StopBit_6,     /**< \brief number of stop bits 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   407      IfxAsclin_StopBit_7      /**< \brief number of stop bits 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   408  } IfxAsclin_StopBit;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   409  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   410  /** \brief OCDS Suspend Control (OCDS.SUS)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   411   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   412  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   413  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   414      IfxAsclin_SuspendMode_none = 0,  /**< \brief No suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   415      IfxAsclin_SuspendMode_hard = 1,  /**< \brief Hard Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   416      IfxAsclin_SuspendMode_soft = 2   /**< \brief Soft Suspend */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   417  } IfxAsclin_SuspendMode;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   418  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   419  /** \brief Defines the number of bytes written to the Tx FIFO with one FPI bus write\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   420   * Definition in Ifx_ASCLIN.TXFIFOCON.B.INW
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   421   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   422  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   423  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   424      IfxAsclin_TxFifoInletWidth_0,     /**< \brief number of bytes 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   425      IfxAsclin_TxFifoInletWidth_1,     /**< \brief number of bytes 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   426      IfxAsclin_TxFifoInletWidth_2,     /**< \brief number of bytes 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   427      IfxAsclin_TxFifoInletWidth_3      /**< \brief number of bytes 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   428  } IfxAsclin_TxFifoInletWidth;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   429  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   430  /** \brief Defines the filling level that triggers a refill (TX) interrupt or DMA access\n
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   431   * Definition in Ifx_ASCLIN.TXFIFOCON.B.INTLEVEL
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   432   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   433  typedef enum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   434  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   435      IfxAsclin_TxFifoInterruptLevel_0,     /**< \brief TX FIFO level 0  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   436      IfxAsclin_TxFifoInterruptLevel_1,     /**< \brief TX FIFO level 1  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   437      IfxAsclin_TxFifoInterruptLevel_2,     /**< \brief TX FIFO level 2  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   438      IfxAsclin_TxFifoInterruptLevel_3,     /**< \brief TX FIFO level 3  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   439      IfxAsclin_TxFifoInterruptLevel_4,     /**< \brief TX FIFO level 4  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   440      IfxAsclin_TxFifoInterruptLevel_5,     /**< \brief TX FIFO level 5  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   441      IfxAsclin_TxFifoInterruptLevel_6,     /**< \brief TX FIFO level 6  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   442      IfxAsclin_TxFifoInterruptLevel_7,     /**< \brief TX FIFO level 7  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   443      IfxAsclin_TxFifoInterruptLevel_8,     /**< \brief TX FIFO level 8  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   444      IfxAsclin_TxFifoInterruptLevel_9,     /**< \brief TX FIFO level 9  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   445      IfxAsclin_TxFifoInterruptLevel_10,    /**< \brief TX FIFO level 10  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   446      IfxAsclin_TxFifoInterruptLevel_11,    /**< \brief TX FIFO level 11  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   447      IfxAsclin_TxFifoInterruptLevel_12,    /**< \brief TX FIFO level 12  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   448      IfxAsclin_TxFifoInterruptLevel_13,    /**< \brief TX FIFO level 13  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   449      IfxAsclin_TxFifoInterruptLevel_14,    /**< \brief TX FIFO level 14  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   450      IfxAsclin_TxFifoInterruptLevel_15     /**< \brief TX FIFO level 15  */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   451  } IfxAsclin_TxFifoInterruptLevel;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   452  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   453  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   454  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   455  /** \addtogroup IfxLld_Asclin_Std_Operative
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   456   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   457  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   458  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   459  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   460  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   461  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   462  /** \brief clears all the flags
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   463   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   464   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   465   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   466  IFX_INLINE void IfxAsclin_clearAllFlags(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   467  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   468  /** \brief Clears the break detected flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   469   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   470   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   471   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   472  IFX_INLINE void IfxAsclin_clearBreakDetectedFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   473  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   474  /** \brief Clears the collision detection error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   475   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   476   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   477   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   478  IFX_INLINE void IfxAsclin_clearCollisionDetectionErrorFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   479  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   480  /** \brief Clears the falling edge detected flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   481   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   482   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   483   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   484  IFX_INLINE void IfxAsclin_clearFallingEdgeDetectedFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   485  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   486  /** \brief Clears the frame error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   487   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   488   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   489   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   490  IFX_INLINE void IfxAsclin_clearFrameErrorFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   491  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   492  /** \brief Clears the header timeout flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   493   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   494   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   495   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   496  IFX_INLINE void IfxAsclin_clearHeaderTimeoutFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   497  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   498  /** \brief Clears the kernel reset status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   499   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   500   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   501   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   502  IFX_INLINE void IfxAsclin_clearKernelResetStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   503  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   504  /** \brief Clears the auto baudrate detection error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   505   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   506   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   507   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   508  IFX_INLINE void IfxAsclin_clearLinAutoBaudDetectionErrorFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   509  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   510  /** \brief Clears the LIN checksum error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   511   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   512   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   513   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   514  IFX_INLINE void IfxAsclin_clearLinChecksumErrorFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   515  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   516  /** \brief Clears the LIN parity error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   517   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   518   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   519   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   520  IFX_INLINE void IfxAsclin_clearLinParityErrorFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   521  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   522  /** \brief Clears the parity error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   523   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   524   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   525   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   526  IFX_INLINE void IfxAsclin_clearParityErrorFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   527  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   528  /** \brief Clears the raising edge detected flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   529   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   530   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   531   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   532  IFX_INLINE void IfxAsclin_clearRaisingEdgeDetectedFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   533  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   534  /** \brief Clears the response timeout flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   535   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   536   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   537   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   538  IFX_INLINE void IfxAsclin_clearResponseTimeoutFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   539  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   540  /** \brief Clears the Rx FIFO level flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   541   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   542   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   543   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   544  IFX_INLINE void IfxAsclin_clearRxFifoFillLevelFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   545  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   546  /** \brief Clears the Rx FIFO overflow flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   547   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   548   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   549   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   550  IFX_INLINE void IfxAsclin_clearRxFifoOverflowFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   551  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   552  /** \brief Clears the Rx FIFO underflow flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   553   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   554   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   555   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   556  IFX_INLINE void IfxAsclin_clearRxFifoUnderflowFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   557  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   558  /** \brief Clears the receive header end flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   559   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   560   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   561   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   562  IFX_INLINE void IfxAsclin_clearRxHeaderEndFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   563  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   564  /** \brief Clears the receive response end flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   565   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   566   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   567   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   568  IFX_INLINE void IfxAsclin_clearRxResponseEndFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   569  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   570  /** \brief Clears the transmission pending flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   571   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   572   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   573   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   574  IFX_INLINE void IfxAsclin_clearTransmissionCompletedFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   575  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   576  /** \brief Clears the Tx FIFO level flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   577   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   578   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   579   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   580  IFX_INLINE void IfxAsclin_clearTxFifoFillLevelFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   581  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   582  /** \brief Clears the Tx FIFO overflow flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   583   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   584   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   585   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   586  IFX_INLINE void IfxAsclin_clearTxFifoOverflowFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   587  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   588  /** \brief Clears the transmit header end flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   589   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   590   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   591   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   592  IFX_INLINE void IfxAsclin_clearTxHeaderEndFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   593  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   594  /** \brief Clears the transmit response end flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   595   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   596   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   597   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   598  IFX_INLINE void IfxAsclin_clearTxResponseEndFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   599  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   600  /** \brief Flushes (empties) the Rx FIFO
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   601   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   602   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   603   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   604  IFX_INLINE void IfxAsclin_flushRxFifo(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   605  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   606  /** \brief Flushes (empties) the Tx FIFO
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   607   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   608   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   609   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   610  IFX_INLINE void IfxAsclin_flushTxFifo(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   611  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   612  /** \brief Sets the baudrate detection's lower limit
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   613   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   614   * \param limit value of the lower limit
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   615   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   616   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   617  IFX_INLINE void IfxAsclin_setBrdLowerlimt(Ifx_ASCLIN *asclin, uint8 limit);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   618  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   619  /** \brief Sets the baudrate detection's upper limit
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   620   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   621   * \param limit value of the upper limit
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   622   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   623   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   624  IFX_INLINE void IfxAsclin_setBrdUpperlimt(Ifx_ASCLIN *asclin, uint8 limit);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   625  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   626  /** \brief Sets the checksum injection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   627   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   628   * \param csi checksum injection selection (not written / written)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   629   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   630   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   631  IFX_INLINE void IfxAsclin_setChecksumInjection(Ifx_ASCLIN *asclin, IfxAsclin_ChecksumInjection csi);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   632  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   633  /** \brief Sets the checksum mode
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   634   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   635   * \param mode checksum mode selection (classic / enhanced)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   636   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   637   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   638  IFX_INLINE void IfxAsclin_setChecksumMode(Ifx_ASCLIN *asclin, IfxAsclin_Checksum mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   639  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   640  /** \brief Sets the data length (number of bits per transfer)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   641   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   642   * \param length data length selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   643   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   644   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   645  IFX_INLINE void IfxAsclin_setDataLength(Ifx_ASCLIN *asclin, IfxAsclin_DataLength length);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   646  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   647  /** \brief Sets the denominator of the fractional divider
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   648   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   649   * \param denominator value of the denominator
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   650   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   651   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   652  IFX_INLINE void IfxAsclin_setDenominator(Ifx_ASCLIN *asclin, uint16 denominator);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   653  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   654  /** \brief Sets the disable module request
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   655   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   656   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   657   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   658  IFX_INLINE void IfxAsclin_setDisableModuleRequest(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   659  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   660  /** \brief Sets the enable module request
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   661   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   662   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   663   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   664  IFX_INLINE void IfxAsclin_setEnableModuleRequest(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   665  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   666  /** \brief Sets digital glitch filter depth
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   667   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   668   * \param depth digital glitch filter depth selection (1 to 63)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   669   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   670   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   671  IFX_INLINE void IfxAsclin_setFilterDepth(Ifx_ASCLIN *asclin, uint8 depth);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   672  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   673  /** \brief Sets the header response selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   674   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   675   * \param type type of selection (header and response or header only)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   676   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   677   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   678  IFX_INLINE void IfxAsclin_setHeaderResponseSelect(Ifx_ASCLIN *asclin, IfxAsclin_HeaderResponseSelect type);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   679  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   680  /** \brief Sets the idle delay
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   681   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   682   * \param delay idle delay selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   683   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   684   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   685  IFX_INLINE void IfxAsclin_setIdleDelay(Ifx_ASCLIN *asclin, IfxAsclin_IdleDelay delay);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   686  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   687  /** \brief Sets the kernal reset of the KRST1
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   688   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   689   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   690   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   691  IFX_INLINE void IfxAsclin_setKernelResetOne(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   692  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   693  /** \brief Sets the kernel reset of the KRST0
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   694   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   695   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   696   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   697  IFX_INLINE void IfxAsclin_setKernelResetZero(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   698  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   699  /** \brief Sets the lead delay
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   700   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   701   * \param delay lead delay selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   702   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   703   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   704  IFX_INLINE void IfxAsclin_setLeadDelay(Ifx_ASCLIN *asclin, IfxAsclin_LeadDelay delay);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   705  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   706  /** \brief Sets the LIN break length
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   707   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   708   * \param length value of the break length
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   709   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   710   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   711  IFX_INLINE void IfxAsclin_setLinBreakLength(Ifx_ASCLIN *asclin, uint8 length);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   712  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   713  /** \brief Sets the LIN header timeout
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   714   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   715   * \param timeout value of the header timeout
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   716   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   717   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   718  IFX_INLINE void IfxAsclin_setLinHeaderTimeout(Ifx_ASCLIN *asclin, uint8 timeout);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   719  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   720  /** \brief Sets the LIN mode of operation
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   721   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   722   * \param mode mode selection (slave / master)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   723   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   724   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   725  IFX_INLINE void IfxAsclin_setLinMode(Ifx_ASCLIN *asclin, IfxAsclin_LinMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   726  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   727  /** \brief Sets the LIN response timeout mode
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   728   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   729   * \param mode LIN response timeout mode selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   730   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   731   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   732  IFX_INLINE void IfxAsclin_setLinResponseTimeoutMode(Ifx_ASCLIN *asclin, IfxAsclin_LinResponseTimeoutMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   733  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   734  /** \brief Sets the LIN response timeout threshold
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   735   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   736   * \param threshold value of the tomeout threshold (1 to 256 bit times)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   737   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   738   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   739  IFX_INLINE void IfxAsclin_setLinResponseTimeoutThreshold(Ifx_ASCLIN *asclin, uint16 threshold);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   740  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   741  /** \brief Sets the numerator of the fractional divider
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   742   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   743   * \param numerator value of the numerator
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   744   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   745   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   746  IFX_INLINE void IfxAsclin_setNumerator(Ifx_ASCLIN *asclin, uint16 numerator);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   747  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   748  /** \brief Sets the division ratio of the baudrate post divider
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   749   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   750   * \param ovsFactor value of oversampling factor
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   751   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   752   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   753  IFX_INLINE void IfxAsclin_setOversampling(Ifx_ASCLIN *asclin, IfxAsclin_OversamplingFactor ovsFactor);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   754  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   755  /** \brief Sets the parity type
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   756   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   757   * \param type parity type selction (even / odd)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   758   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   759   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   760  IFX_INLINE void IfxAsclin_setParityType(Ifx_ASCLIN *asclin, IfxAsclin_ParityType type);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   761  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   762  /** \brief Sets the division ratio of the predivider (prescaler)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   763   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   764   * \param prescaler value of prescaler
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   765   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   766   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   767  IFX_INLINE void IfxAsclin_setPrescaler(Ifx_ASCLIN *asclin, uint16 prescaler);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   768  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   769  /** \brief Sets the receive buffer mode
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   770   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   771   * \param mode receive buffer mode selection (Rx FIFO or single stage Rx buffer)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   772   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   773   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   774  IFX_INLINE void IfxAsclin_setRxBufferMode(Ifx_ASCLIN *asclin, IfxAsclin_ReceiveBufferMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   775  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   776  /** \brief Sets the Tx FIFO interrupt level
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   777   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   778   * \param level interrupt level selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   779   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   780   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   781  IFX_INLINE void IfxAsclin_setRxFifoInterruptLevel(Ifx_ASCLIN *asclin, IfxAsclin_RxFifoInterruptLevel level);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   782  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   783  /** \brief Sets the receive FIFO outlet width
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   784   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   785   * \param width number of bytes read to the Rx FIFO with one FPI bus read
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   786   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   787   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   788  IFX_INLINE void IfxAsclin_setRxFifoOutletWidth(Ifx_ASCLIN *asclin, IfxAsclin_RxFifoOutletWidth width);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   789  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   790  /** \brief Sets the sample mode (number of samples per bit / median filter)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   791   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   792   * \param medianFilter value of the median filter
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   793   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   794   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   795  IFX_INLINE void IfxAsclin_setSampleMode(Ifx_ASCLIN *asclin, IfxAsclin_SamplesPerBit medianFilter);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   796  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   797  /** \brief Sets the sampling point position
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   798   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   799   * \param spPosition sample point position selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   800   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   801   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   802  IFX_INLINE void IfxAsclin_setSamplePointPosition(Ifx_ASCLIN *asclin, IfxAsclin_SamplePointPosition spPosition);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   803  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   804  /** \brief Sets the shift direction
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   805   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   806   * \param dir shift direction selection (LSB / MSB first)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   807   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   808   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   809  IFX_INLINE void IfxAsclin_setShiftDirection(Ifx_ASCLIN *asclin, IfxAsclin_ShiftDirection dir);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   810  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   811  /** \brief Sets the number of stop bits
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   812   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   813   * \param stopBit number of stop bits selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   814   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   815   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   816  IFX_INLINE void IfxAsclin_setStopBit(Ifx_ASCLIN *asclin, IfxAsclin_StopBit stopBit);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   817  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   818  /** \brief Sets the transmit header request flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   819   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   820   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   821   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   822  IFX_INLINE void IfxAsclin_setTransmitHeaderRequestFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   823  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   824  /** \brief Sets the transmit response request flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   825   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   826   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   827   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   828  IFX_INLINE void IfxAsclin_setTransmitResponseRequestFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   829  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   830  /** \brief Sets the transmission wake request flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   831   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   832   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   833   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   834  IFX_INLINE void IfxAsclin_setTransmitWakeRequestFlag(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   835  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   836  /** \brief Sets the transmit FIFO inlet width
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   837   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   838   * \param width number of bytes written to the Tx FIFO with one FPI bus write
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   839   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   840   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   841  IFX_INLINE void IfxAsclin_setTxFifoInletWidth(Ifx_ASCLIN *asclin, IfxAsclin_TxFifoInletWidth width);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   842  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   843  /** \brief Sets the Tx FIFO interrupt level
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   844   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   845   * \param level interrupt level selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   846   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   847   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   848  IFX_INLINE void IfxAsclin_setTxFifoInterruptLevel(Ifx_ASCLIN *asclin, IfxAsclin_TxFifoInterruptLevel level);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   849  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   850  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   851  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   852  /** \addtogroup IfxLld_Asclin_Std_Utility
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   853   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   854  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   855  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   856  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   857  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   858  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   859  /** \brief Returns the break detected flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   860   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   861   * \return break detected flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   862   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   863  IFX_INLINE boolean IfxAsclin_getBreakDetectedFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   864  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   865  /** \brief Returns the clock source
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   866   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   867   * \return clock source
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   868   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   869  IFX_INLINE uint8 IfxAsclin_getClockSource(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   870  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   871  /** \brief Returns the clock status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   872   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   873   * \return clock status (off / on)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   874   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   875  IFX_INLINE boolean IfxAsclin_getClockStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   876  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   877  /** \brief Returns the collision detection error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   878   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   879   * \return collision detection error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   880   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   881  IFX_INLINE boolean IfxAsclin_getCollisionDetectionErrorFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   882  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   883  /** \brief Returns  the falling edge detected flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   884   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   885   * \return falling edge detected flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   886   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   887  IFX_INLINE boolean IfxAsclin_getFallingEdgeDetectedFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   888  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   889  /** \brief Returns the frame error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   890   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   891   * \return frame error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   892   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   893  IFX_INLINE boolean IfxAsclin_getFrameErrorFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   894  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   895  /** \brief Returns the header timeout flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   896   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   897   * \return header timeout flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   898   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   899  IFX_INLINE boolean IfxAsclin_getHeaderTimeoutFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   900  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   901  /** \brief Returns the kernel reset status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   902   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   903   * \return kernel reset status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   904   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   905  IFX_INLINE boolean IfxAsclin_getKernelResetStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   906  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   907  /** \brief Returns the LIN auto baudrate detection error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   908   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   909   * \return LIN auto baudrate detection error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   910   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   911  IFX_INLINE boolean IfxAsclin_getLinAutoBaudDetectionErrorFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   912  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   913  /** \brief Returns the LIN checksum error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   914   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   915   * \return LIN checksum error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   916   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   917  IFX_INLINE boolean IfxAsclin_getLinChecksumErrorFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   918  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   919  /** \brief Returns the LIN parity error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   920   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   921   * \return LIN parity error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   922   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   923  IFX_INLINE boolean IfxAsclin_getLinParityErrorFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   924  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   925  /** \brief Returns the module status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   926   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   927   * \return module status (enabled / disabled)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   928   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   929  IFX_INLINE boolean IfxAsclin_getModuleStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   930  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   931  /** \brief Returns the parity error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   932   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   933   * \return parity error flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   934   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   935  IFX_INLINE boolean IfxAsclin_getParityErrorFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   936  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   937  /** \brief Returns the division ratio of the predivider (prescaler)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   938   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   939   * \return value of prescaler
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   940   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   941  IFX_INLINE uint16 IfxAsclin_getPrescaler(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   942  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   943  /** \brief Returns the raising edge detected flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   944   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   945   * \return raising edge detected flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   946   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   947  IFX_INLINE boolean IfxAsclin_getRaisingEdgeDetectedFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   948  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   949  /** \brief Returns the received signal status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   950   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   951   * \return received signal status (0 is low & 1 is high)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   952   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   953  IFX_INLINE boolean IfxAsclin_getReceiveSignalStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   954  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   955  /** \brief Returns the response timeout flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   956   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   957   * \return response timeout flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   958   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   959  IFX_INLINE boolean IfxAsclin_getResponseTimeoutFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   960  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   961  /** \brief Returns the current filling level of Tx FIFO
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   962   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   963   * \return current filling level of Rx FIFO
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   964   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   965  IFX_INLINE uint8 IfxAsclin_getRxFifoFillLevel(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   966  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   967  /** \brief Returns the Rx FIFO level flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   968   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   969   * \return Rx FIFO level flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   970   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   971  IFX_INLINE boolean IfxAsclin_getRxFifoFillLevelFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   972  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   973  /** \brief Returns the receive FIFO inlet width
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   974   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   975   * \return number of bytes read to the Rx FIFO with one FPI bus read
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   976   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   977  IFX_INLINE uint8 IfxAsclin_getRxFifoOutletWidth(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   978  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   979  /** \brief Returns the Rx FIFO overflow flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   980   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   981   * \return Rx FIFO overflow flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   982   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   983  IFX_INLINE boolean IfxAsclin_getRxFifoOverflowFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   984  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   985  /** \brief Returns the Rx FIFO underflow flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   986   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   987   * \return Rx FIFO underflow flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   988   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   989  IFX_INLINE boolean IfxAsclin_getRxFifoUnderflowFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   990  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   991  /** \brief Returns the receive header end flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   992   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   993   * \return receive header end flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   994   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   995  IFX_INLINE boolean IfxAsclin_getRxHeaderEndFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   996  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   997  /** \brief Returns the receive response end flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   998   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	   999   * \return receive response end flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1000   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1001  IFX_INLINE boolean IfxAsclin_getRxResponseEndFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1002  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1003  /** \brief Returns the transmission pending flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1004   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1005   * \return transmission pending flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1006   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1007  IFX_INLINE boolean IfxAsclin_getTransmissionCompletedFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1008  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1009  /** \brief Returns the transmit signal status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1010   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1011   * \return transmit signal status (0 is low & 1 is high)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1012   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1013  IFX_INLINE boolean IfxAsclin_getTransmitSignalStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1014  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1015  /** \brief Returns the current filling level of Tx FIFO
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1016   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1017   * \return current filling level of Tx FIFO
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1018   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1019  IFX_INLINE uint8 IfxAsclin_getTxFifoFillLevel(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1020  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1021  /** \brief Returns the Tx FIFO level flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1022   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1023   * \return Tx FIFO level flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1024   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1025  IFX_INLINE boolean IfxAsclin_getTxFifoFillLevelFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1026  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1027  /** \brief Returns the transmit FIFO inlet width
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1028   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1029   * \return number of bytes written to the Tx FIFO with one FPI bus write
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1030   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1031  IFX_INLINE uint8 IfxAsclin_getTxFifoInletWidth(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1032  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1033  /** \brief Returns the Tx FIFO overflow flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1034   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1035   * \return Tx FIFO overflow flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1036   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1037  IFX_INLINE boolean IfxAsclin_getTxFifoOverflowFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1038  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1039  /** \brief Returns the transmit header end flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1040   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1041   * \return transmit header end flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1042   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1043  IFX_INLINE boolean IfxAsclin_getTxHeaderEndFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1044  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1045  /** \brief Returns the transmit response end flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1046   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1047   * \return transmit response end flag status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1048   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1049  IFX_INLINE boolean IfxAsclin_getTxResponseEndFlagStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1050  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1051  /** \brief Sets the sensitivity of the module to sleep signal
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1052   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1053   * \param mode mode selection (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1054   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1055   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1056  IFX_INLINE void IfxAsclin_setSleepMode(Ifx_ASCLIN *asclin, IfxAsclin_SleepMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1057  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1058  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1059  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1060  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1061  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1062  /** \brief API to get the address for ASCLIN HW module register memory map
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1063   * \param asclin Resource index of the ASCLIN
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1064   * \return ASCLIN module register address
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1065   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1066  IFX_EXTERN Ifx_ASCLIN *IfxAsclin_getAddress(IfxAsclin_Index asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1067  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1068  /** \brief Returns the ASCLIN module FA frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1069   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1070   * \return Returns the ASCLIN module FA frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1071   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1072  IFX_EXTERN float32 IfxAsclin_getFaFrequency(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1073  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1074  /** \brief API to get the resource index of the ASCLIN specified.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1075   * \return asclin resource index
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1076   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1077  IFX_EXTERN IfxAsclin_Index IfxAsclin_getIndex(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1078  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1079  /** \brief Returns the OVS frequency
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1080   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1081   * \return Returns the ASCLIN module OVS frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1082   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1083  IFX_EXTERN float32 IfxAsclin_getOvsFrequency(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1084  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1085  /** \brief Returns the PD frequency
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1086   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1087   * \return Returns the ASCLIN module PD frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1088   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1089  IFX_EXTERN float32 IfxAsclin_getPdFrequency(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1090  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1091  /** \brief Returns the SHIFT frequency
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1092   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1093   * \return Returns the ASCLIN module SHIFT frequency in Hz
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1094   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1095  IFX_EXTERN float32 IfxAsclin_getShiftFrequency(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1096  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1097  /** \brief resets Asclin kernel
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1098   * \param asclin pointer to ASCLIN resgisters
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1099   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1100   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1101  IFX_EXTERN void IfxAsclin_resetModule(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1102  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1103  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1104  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1105  /** \addtogroup IfxLld_Asclin_Std_Configuration
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1106   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1107  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1108  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1109  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1110  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1111  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1112  /** \brief disables all flags
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1113   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1114   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1115   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1116  IFX_INLINE void IfxAsclin_disableAllFlags(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1117  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1118  /** \brief Enables/disables the auto baudrate detection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1119   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1120   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1121   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1122   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1123  IFX_INLINE void IfxAsclin_enableAutoBaudrateDetection(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1124  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1125  /** \brief Enables/disables break detected flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1126   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1127   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1128   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1129   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1130  IFX_INLINE void IfxAsclin_enableBreakDetectedFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1131  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1132  /** \brief Enables/disables the collision detection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1133   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1134   * \param enable choice (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1135   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1136   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1137  IFX_INLINE void IfxAsclin_enableCollisionDetection(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1138  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1139  /** \brief Enables/disables LIN collision detection error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1140   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1141   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1142   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1143   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1144  IFX_INLINE void IfxAsclin_enableCollisionDetectionErrorFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1145  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1146  /** \brief Enables/disables CTS
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1147   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1148   * \param enable choice (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1149   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1150   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1151  IFX_INLINE void IfxAsclin_enableCts(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1152  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1153  /** \brief Enables/disables falling edge detected flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1154   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1155   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1156   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1157   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1158  IFX_INLINE void IfxAsclin_enableFallingEdgeDetectedFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1159  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1160  /** \brief Enables/disables frame error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1161   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1162   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1163   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1164   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1165  IFX_INLINE void IfxAsclin_enableFrameErrorFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1166  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1167  /** \brief Enables/disables the hardware checksum
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1168   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1169   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1170   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1171   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1172  IFX_INLINE void IfxAsclin_enableHardwareChecksum(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1173  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1174  /** \brief Enables/disables header timeout flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1175   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1176   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1177   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1178   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1179  IFX_INLINE void IfxAsclin_enableHeaderTimeoutFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1180  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1181  /** \brief Enables/disables LIN auto baudrate detection error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1182   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1183   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1184   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1185   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1186  IFX_INLINE void IfxAsclin_enableLinAutoBaudDetectionErrorFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1187  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1188  /** \brief Enables/disables LIN checksum error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1189   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1190   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1191   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1192   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1193  IFX_INLINE void IfxAsclin_enableLinChecksumErrorFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1194  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1195  /** \brief Enables/disables LIN parity error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1196   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1197   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1198   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1199   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1200  IFX_INLINE void IfxAsclin_enableLinParityErrorFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1201  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1202  /** \brief Enables/disables the loop back mode
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1203   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1204   * \param enable choice (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1205   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1206   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1207  IFX_INLINE void IfxAsclin_enableLoopBackMode(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1208  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1209  /** \brief Enables/disables the parity bit attachment to tha data bits
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1210   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1211   * \param enable choice (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1212   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1213   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1214  IFX_INLINE void IfxAsclin_enableParity(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1215  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1216  /** \brief Enables/disables parity error flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1217   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1218   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1219   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1220   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1221  IFX_INLINE void IfxAsclin_enableParityErrorFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1222  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1223  /** \brief Enables/disables raising edge detected flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1224   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1225   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1226   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1227   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1228  IFX_INLINE void IfxAsclin_enableRaisingEdgeDetectedFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1229  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1230  /** \brief Enables/disables response timeout flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1231   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1232   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1233   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1234   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1235  IFX_INLINE void IfxAsclin_enableResponseTimeoutFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1236  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1237  /** \brief Enables/disables Rx FIFO level flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1238   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1239   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1240   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1241   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1242  IFX_INLINE void IfxAsclin_enableRxFifoFillLevelFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1243  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1244  /** \brief Enables/disables the receive FIFO outlet to allow filling of Rx FIFO through shift register
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1245   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1246   * \param enable choice (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1247   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1248   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1249  IFX_INLINE void IfxAsclin_enableRxFifoInlet(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1250  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1251  /** \brief Enables/disables Rx FIFO overflow flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1252   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1253   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1254   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1255   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1256  IFX_INLINE void IfxAsclin_enableRxFifoOverflowFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1257  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1258  /** \brief Enables/disables Rx FIFO underflow flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1259   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1260   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1261   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1262   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1263  IFX_INLINE void IfxAsclin_enableRxFifoUnderflowFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1264  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1265  /** \brief Enables/disables receive header end flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1266   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1267   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1268   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1269   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1270  IFX_INLINE void IfxAsclin_enableRxHeaderEndFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1271  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1272  /** \brief Enables/disables receive response end flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1273   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1274   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1275   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1276   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1277  IFX_INLINE void IfxAsclin_enableRxResponseEndFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1278  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1279  /** \brief Enables/disables transmission completed flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1280   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1281   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1282   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1283   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1284  IFX_INLINE void IfxAsclin_enableTransmissionCompletedFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1285  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1286  /** \brief Enables/disables Tx FIFO level flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1287   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1288   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1289   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1290   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1291  IFX_INLINE void IfxAsclin_enableTxFifoFillLevelFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1292  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1293  /** \brief Enables/disables the transmit FIFO outlet to allow transmission
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1294   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1295   * \param enable choice (enable/disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1296   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1297   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1298  IFX_INLINE void IfxAsclin_enableTxFifoOutlet(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1299  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1300  /** \brief Enables/disables Tx FIFO overflow flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1301   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1302   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1303   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1304   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1305  IFX_INLINE void IfxAsclin_enableTxFifoOverflowFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1306  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1307  /** \brief Enables/disables transmit header end flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1308   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1309   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1310   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1311   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1312  IFX_INLINE void IfxAsclin_enableTxHeaderEndFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1313  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1314  /** \brief Enables/disables transmit response end flag
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1315   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1316   * \param enable choice (enable / disable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1317   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1318   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1319  IFX_INLINE void IfxAsclin_enableTxResponseEndFlag(Ifx_ASCLIN *asclin, boolean enable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1320  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1321  /** \brief Returns the module's suspend state.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1322   * TRUE :if module is suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1323   * FALSE:if module is not yet suspended.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1324   * \param asclin Pointer to ASCLIN module registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1325   * \return Suspend status (TRUE / FALSE)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1326   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1327  IFX_INLINE boolean IfxAsclin_isModuleSuspended(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1328  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1329  /** \brief Selects the clock polarity
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1330   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1331   * \param cpol CPOL selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1332   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1333   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1334  IFX_INLINE void IfxAsclin_setClockPolarity(Ifx_ASCLIN *asclin, IfxAsclin_ClockPolarity cpol);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1335  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1336  /** \brief Selects the CTS input pin
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1337   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1338   * \param ctsi CTS input pin selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1339   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1340   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1341  IFX_INLINE void IfxAsclin_setCtsInput(Ifx_ASCLIN *asclin, IfxAsclin_CtsInputSelect ctsi);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1342  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1343  /** \brief Selects the module's mode of operation
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1344   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1345   * \param mode mode selction
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1346   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1347   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1348  IFX_INLINE void IfxAsclin_setFrameMode(Ifx_ASCLIN *asclin, IfxAsclin_FrameMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1349  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1350  /** \brief Selects the RTS/CTS polarity
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1351   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1352   * \param rcpol RCPOL selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1353   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1354   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1355  IFX_INLINE void IfxAsclin_setRtsCtsPolarity(Ifx_ASCLIN *asclin, IfxAsclin_RtsCtsPolarity rcpol);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1356  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1357  /** \brief Selects the Rx FIFO interupt generation mode
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1358   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1359   * \param mode mode selction
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1360   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1361   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1362  IFX_INLINE void IfxAsclin_setRxFifoInterruptMode(Ifx_ASCLIN *asclin, IfxAsclin_FifoInterruptMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1363  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1364  /** \brief Selects the alternate input for Rx signal
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1365   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1366   * \param alti alternate input selection of Rx signal
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1367   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1368   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1369  IFX_INLINE void IfxAsclin_setRxInput(Ifx_ASCLIN *asclin, IfxAsclin_RxInputSelect alti);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1370  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1371  /** \brief Selects the slave polarity
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1372   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1373   * \param spol SPOL selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1374   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1375   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1376  IFX_INLINE void IfxAsclin_setSlavePolarity(Ifx_ASCLIN *asclin, IfxAsclin_SlavePolarity spol);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1377  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1378  /** \brief Configure the Module to Hard/Soft suspend mode.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1379   * Note: The api works only when the OCDS is enabled and in Supervisor Mode. When OCDS is disabled the OCS suspend control is ineffective.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1380   * \param asclin Pointer to ASCLIN module registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1381   * \param mode Module suspend mode
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1382   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1383   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1384  IFX_INLINE void IfxAsclin_setSuspendMode(Ifx_ASCLIN *asclin, IfxAsclin_SuspendMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1385  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1386  /** \brief Selects the Tx FIFO interupt generation mode
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1387   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1388   * \param mode mode selction
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1389   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1390   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1391  IFX_INLINE void IfxAsclin_setTxFifoInterruptMode(Ifx_ASCLIN *asclin, IfxAsclin_FifoInterruptMode mode);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1392  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1393  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1394  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1395  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1396  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1397  /** \brief Set the bit timing
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1398   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1399   * \note this function required FA source and the PD frequency to be set to their final values
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1400   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1401   * \param baudrate Required baudrate
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1402   * \param oversampling The oversampling factor
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1403   * \param samplepoint The sample point position
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1404   * \param medianFilter Number of samples per bit (median filter)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1405   * \return TRUE if configuration was successfull
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1406   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1407  IFX_EXTERN boolean IfxAsclin_setBitTiming(Ifx_ASCLIN *asclin, float32 baudrate, IfxAsclin_OversamplingFactor oversampling, IfxAsclin_SamplePointPosition samplepoint, IfxAsclin_SamplesPerBit medianFilter);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1408  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1409  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1410  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1411  /** \addtogroup IfxLld_Asclin_Std_External
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1412   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1413  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1414  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1415  /*-------------------------Global Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1416  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1417  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1418  /** \brief Disables the module
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1419   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1420   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1421   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1422  IFX_EXTERN void IfxAsclin_disableModule(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1423  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1424  /** \brief Enables the ASC error interrupt Flags
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1425   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1426   * \param parEnable parity error
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1427   * \param rfoEnable Rx FIFO overflow error
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1428   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1429   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1430  IFX_EXTERN void IfxAsclin_enableAscErrorFlags(Ifx_ASCLIN *asclin, boolean parEnable, boolean rfoEnable);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1431  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1432  /** \brief Enables the module
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1433   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1434   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1435   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1436  IFX_EXTERN void IfxAsclin_enableModule(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1437  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1438  /** \brief Returns the SRC pointer for ERR
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1439   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1440   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1441  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxAsclin_getSrcPointerEr(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1442  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1443  /** \brief Returns the  SRC pointer for Rx
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1444   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1445   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1446  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxAsclin_getSrcPointerRx(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1447  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1448  /** \brief Returns the SRC pointer for Tx
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1449   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1450   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1451  IFX_EXTERN volatile Ifx_SRC_SRCR *IfxAsclin_getSrcPointerTx(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1452  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1453  /** \brief Reads data up to 16 bits
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1454   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1455   * \param data Array where the read data shall be stored
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1456   * \param count number of items to read
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1457   * \return number of items that could not be read
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1458   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1459  IFX_EXTERN uint32 IfxAsclin_read16(Ifx_ASCLIN *asclin, uint16 *data, uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1460  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1461  /** \brief Reads data up to 32 bits
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1462   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1463   * \param data Array where the read data shall be stored
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1464   * \param count number of items to read
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1465   * \return number of items that could not be read
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1466   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1467  IFX_EXTERN uint32 IfxAsclin_read32(Ifx_ASCLIN *asclin, uint32 *data, uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1468  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1469  /** \brief Reads data up to 8 bits
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1470   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1471   * \param data Array where the read data shall be stored
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1472   * \param count number of items to read
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1473   * \return number of items that could not be read
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1474   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1475  IFX_EXTERN uint32 IfxAsclin_read8(Ifx_ASCLIN *asclin, uint8 *data, uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1476  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1477  /** \brief Sets the baudrate bit fields
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1478   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1479   * \param prescaler division ratio of the predivider
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1480   * \param numerator numerator of the fractional divider
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1481   * \param denominator denominator of the fractional divider
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1482   * \param oversampling division ratio of the baudrate postdivider
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1483   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1484   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1485  IFX_EXTERN void IfxAsclin_setBaudrateBitFields(Ifx_ASCLIN *asclin, uint16 prescaler, uint16 numerator, uint16 denominator, IfxAsclin_OversamplingFactor oversampling);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1486  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1487  /** \brief Sets the  clock source
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1488   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1489   * \param clockSource clock source selection
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1490   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1491   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1492  IFX_EXTERN void IfxAsclin_setClockSource(Ifx_ASCLIN *asclin, IfxAsclin_ClockSource clockSource);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1493  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1494  /** \brief Writes data up to 16 bits
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1495   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1496   * \param data Array of data to be send
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1497   * \param count number of items to be send
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1498   * \return the number of items that could not be send
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1499   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1500  IFX_EXTERN uint32 IfxAsclin_write16(Ifx_ASCLIN *asclin, uint16 *data, uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1501  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1502  /** \brief Writes data up to 32 bits
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1503   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1504   * \param data Array of data to be send
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1505   * \param count number of items to be send
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1506   * \return the number of items that could not be send
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1507   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1508  IFX_EXTERN uint32 IfxAsclin_write32(Ifx_ASCLIN *asclin, uint32 *data, uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1509  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1510  /** \brief Writes data up to 8 bits
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1511   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1512   * \param data Array of data to be send
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1513   * \param count number of items to be send
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1514   * \return the number of items that could not be send
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1515   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1516  IFX_EXTERN uint32 IfxAsclin_write8(Ifx_ASCLIN *asclin, uint8 *data, uint32 count);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1517  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1518  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1519  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1520  /** \addtogroup IfxLld_Asclin_Std_IO
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1521   * \{ */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1522  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1523  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1524  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1525  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1526  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1527  /** \brief Initializes a CTS input
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1528   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1529   * Attention: the kernel clock has to be disabled whenever the input multiplexer is changed.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1530   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1531   * This can be done with IfxAsclin_setClockSource(asclinSFR, IfxAsclin_ClockSource_noClock);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1532   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1533   * After the function call, the current clock can be enabled again.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1534   * \param cts the CTS Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1535   * \param inputMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1536   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1537   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1538   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1539  IFX_INLINE void IfxAsclin_initCtsPin(const IfxAsclin_Cts_In *cts, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1540  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1541  /** \brief Initializes a RTS output
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1542   * \param rts the RTS Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1543   * \param outputMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1544   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1545   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1546   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1547  IFX_INLINE void IfxAsclin_initRtsPin(const IfxAsclin_Rts_Out *rts, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1548  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1549  /** \brief Initializes a RX input
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1550   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1551   * Attention: the kernel clock has to be disabled whenever the input multiplexer is changed.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1552   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1553   * This can be done with IfxAsclin_setClockSource(asclinSFR, IfxAsclin_ClockSource_noClock);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1554   *
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1555   * After the function call, the current clock can be enabled again.
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1556   * \param rx the RX Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1557   * \param inputMode the pin input mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1558   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1559   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1560   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1561  IFX_INLINE void IfxAsclin_initRxPin(const IfxAsclin_Rx_In *rx, IfxPort_InputMode inputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1562  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1563  /** \brief Initializes a SCLK output
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1564   * \param sclk the SCLK Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1565   * \param outputMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1566   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1567   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1568   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1569  IFX_INLINE void IfxAsclin_initSclkPin(const IfxAsclin_Sclk_Out *sclk, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1570  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1571  /** \brief Initializes a SLSO output
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1572   * \param slso the SLSO Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1573   * \param outputMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1574   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1575   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1576   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1577  IFX_INLINE void IfxAsclin_initSlsoPin(const IfxAsclin_Slso_Out *slso, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1578  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1579  /** \brief Initializes a TX output
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1580   * \param tx the TX Pin which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1581   * \param outputMode the pin output mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1582   * \param padDriver the pad driver mode which should be configured
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1583   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1584   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1585  IFX_INLINE void IfxAsclin_initTxPin(const IfxAsclin_Tx_Out *tx, IfxPort_OutputMode outputMode, IfxPort_PadDriver padDriver);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1586  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1587  /** \} */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1588  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1589  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1590  /*-------------------------Inline Function Prototypes-------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1591  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1592  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1593  /**
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1594   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1595   * \return returns the value of RxDATA register
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1596   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1597  IFX_INLINE uint32 IfxAsclin_readRxData(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1598  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1599  /**
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1600   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1601   * \param data data to be written
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1602   * \return None
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1603   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1604  IFX_INLINE void IfxAsclin_writeTxData(Ifx_ASCLIN *asclin, uint32 data);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1605  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1606  /** \brief Returns the status of all error flags
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1607   * \param asclin pointer to ASCLIN registers
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1608   * \return status
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1609   */
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1610  IFX_INLINE uint16 IfxAsclin_getAllErrorFlagsStatus(Ifx_ASCLIN *asclin);
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1611  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1612  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1613  /*---------------------Inline Function Implementations------------------------*/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1614  /******************************************************************************/
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1615  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1616  IFX_INLINE void IfxAsclin_clearAllFlags(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1617  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1618      asclin->FLAGSCLEAR.U = 0xFFFFFFFF;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1619  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1620  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1621  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1622  IFX_INLINE void IfxAsclin_clearBreakDetectedFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1623  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1624      asclin->FLAGSCLEAR.B.BDC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1625  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1626  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1627  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1628  IFX_INLINE void IfxAsclin_clearCollisionDetectionErrorFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1629  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1630      asclin->FLAGSCLEAR.B.CEC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1631  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1632  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1633  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1634  IFX_INLINE void IfxAsclin_clearFallingEdgeDetectedFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1635  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1636      asclin->FLAGSCLEAR.B.FEDC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1637  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1638  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1639  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1640  IFX_INLINE void IfxAsclin_clearFrameErrorFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1641  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1642      asclin->FLAGSCLEAR.B.FEC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1643  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1644  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1645  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1646  IFX_INLINE void IfxAsclin_clearHeaderTimeoutFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1647  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1648      asclin->FLAGSCLEAR.B.HTC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1649  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1650  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1651  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1652  IFX_INLINE void IfxAsclin_clearKernelResetStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1653  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1654      asclin->KRSTCLR.B.CLR = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1655  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1656  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1657  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1658  IFX_INLINE void IfxAsclin_clearLinAutoBaudDetectionErrorFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1659  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1660      asclin->FLAGSCLEAR.B.LAC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1661  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1662  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1663  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1664  IFX_INLINE void IfxAsclin_clearLinChecksumErrorFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1665  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1666      asclin->FLAGSCLEAR.B.LCC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1667  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1668  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1669  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1670  IFX_INLINE void IfxAsclin_clearLinParityErrorFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1671  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1672      asclin->FLAGSCLEAR.B.LPC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1673  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1674  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1675  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1676  IFX_INLINE void IfxAsclin_clearParityErrorFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1677  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1678      asclin->FLAGSCLEAR.B.PEC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1679  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1680  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1681  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1682  IFX_INLINE void IfxAsclin_clearRaisingEdgeDetectedFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1683  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1684      asclin->FLAGSCLEAR.B.REDC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1685  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1686  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1687  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1688  IFX_INLINE void IfxAsclin_clearResponseTimeoutFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1689  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1690      asclin->FLAGSCLEAR.B.RTC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1691  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1692  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1693  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1694  IFX_INLINE void IfxAsclin_clearRxFifoFillLevelFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1695  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1696      asclin->FLAGSCLEAR.B.RFLC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1697  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1698  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1699  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1700  IFX_INLINE void IfxAsclin_clearRxFifoOverflowFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1701  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1702      asclin->FLAGSCLEAR.B.RFOC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1703  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1704  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1705  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1706  IFX_INLINE void IfxAsclin_clearRxFifoUnderflowFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1707  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1708      asclin->FLAGSCLEAR.B.RFUC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1709  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1710  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1711  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1712  IFX_INLINE void IfxAsclin_clearRxHeaderEndFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1713  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1714      asclin->FLAGSCLEAR.B.RHC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1715  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1716  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1717  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1718  IFX_INLINE void IfxAsclin_clearRxResponseEndFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1719  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1720      asclin->FLAGSCLEAR.B.RRC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1721  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1722  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1723  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1724  IFX_INLINE void IfxAsclin_clearTransmissionCompletedFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1725  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1726      asclin->FLAGSCLEAR.B.TCC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1727  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1728  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1729  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1730  IFX_INLINE void IfxAsclin_clearTxFifoFillLevelFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1731  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1732      asclin->FLAGSCLEAR.B.TFLC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1733  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1734  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1735  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1736  IFX_INLINE void IfxAsclin_clearTxFifoOverflowFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1737  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1738      asclin->FLAGSCLEAR.B.TFOC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1739  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1740  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1741  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1742  IFX_INLINE void IfxAsclin_clearTxHeaderEndFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1743  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1744      asclin->FLAGSCLEAR.B.THC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1745  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1746  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1747  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1748  IFX_INLINE void IfxAsclin_clearTxResponseEndFlag(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1749  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1750      asclin->FLAGSCLEAR.B.TRC = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1751  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1752  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1753  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1754  IFX_INLINE void IfxAsclin_disableAllFlags(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1755  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1756      asclin->FLAGSENABLE.U = 0x00000000;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1757  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1758  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1759  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1760  IFX_INLINE void IfxAsclin_enableAutoBaudrateDetection(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1761  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1762      asclin->LIN.CON.B.ABD = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1763  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1764  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1765  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1766  IFX_INLINE void IfxAsclin_enableBreakDetectedFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1767  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1768      asclin->FLAGSENABLE.B.BDE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1769  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1770  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1771  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1772  IFX_INLINE void IfxAsclin_enableCollisionDetection(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1773  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1774      asclin->FRAMECON.B.CEN = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1775  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1776  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1777  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1778  IFX_INLINE void IfxAsclin_enableCollisionDetectionErrorFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1779  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1780      asclin->FLAGSENABLE.B.CEE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1781  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1782  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1783  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1784  IFX_INLINE void IfxAsclin_enableCts(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1785  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1786      asclin->IOCR.B.CTSEN = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1787  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1788  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1789  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1790  IFX_INLINE void IfxAsclin_enableFallingEdgeDetectedFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1791  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1792      asclin->FLAGSENABLE.B.FEDE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1793  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1794  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1795  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1796  IFX_INLINE void IfxAsclin_enableFrameErrorFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1797  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1798      asclin->FLAGSENABLE.B.FEE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1799  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1800  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1801  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1802  IFX_INLINE void IfxAsclin_enableHardwareChecksum(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1803  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1804      asclin->LIN.CON.B.CSEN = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1805  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1806  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1807  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1808  IFX_INLINE void IfxAsclin_enableHeaderTimeoutFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1809  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1810      asclin->FLAGSENABLE.B.HTE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1811  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1812  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1813  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1814  IFX_INLINE void IfxAsclin_enableLinAutoBaudDetectionErrorFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1815  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1816      asclin->FLAGSENABLE.B.LAE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1817  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1818  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1819  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1820  IFX_INLINE void IfxAsclin_enableLinChecksumErrorFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1821  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1822      asclin->FLAGSENABLE.B.LCE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1823  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1824  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1825  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1826  IFX_INLINE void IfxAsclin_enableLinParityErrorFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1827  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1828      asclin->FLAGSENABLE.B.LPE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1829  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1830  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1831  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1832  IFX_INLINE void IfxAsclin_enableLoopBackMode(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1833  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1834      asclin->IOCR.B.LB = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1835  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1836  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1837  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1838  IFX_INLINE void IfxAsclin_enableParity(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1839  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1840      asclin->FRAMECON.B.PEN = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1841  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1842  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1843  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1844  IFX_INLINE void IfxAsclin_enableParityErrorFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1845  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1846      asclin->FLAGSENABLE.B.PEE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1847  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1848  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1849  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1850  IFX_INLINE void IfxAsclin_enableRaisingEdgeDetectedFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1851  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1852      asclin->FLAGSENABLE.B.REDE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1853  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1854  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1855  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1856  IFX_INLINE void IfxAsclin_enableResponseTimeoutFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1857  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1858      asclin->FLAGSENABLE.B.RTE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1859  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1860  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1861  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1862  IFX_INLINE void IfxAsclin_enableRxFifoFillLevelFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1863  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1864      asclin->FLAGSENABLE.B.RFLE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1865  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1866  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1867  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1868  IFX_INLINE void IfxAsclin_enableRxFifoInlet(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1869  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1870      asclin->RXFIFOCON.B.ENI = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1871  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1872  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1873  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1874  IFX_INLINE void IfxAsclin_enableRxFifoOverflowFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1875  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1876      asclin->FLAGSENABLE.B.RFOE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1877  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1878  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1879  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1880  IFX_INLINE void IfxAsclin_enableRxFifoUnderflowFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1881  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1882      asclin->FLAGSENABLE.B.RFUE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1883  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1884  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1885  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1886  IFX_INLINE void IfxAsclin_enableRxHeaderEndFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1887  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1888      asclin->FLAGSENABLE.B.RHE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1889  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1890  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1891  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1892  IFX_INLINE void IfxAsclin_enableRxResponseEndFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1893  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1894      asclin->FLAGSENABLE.B.RRE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1895  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1896  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1897  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1898  IFX_INLINE void IfxAsclin_enableTransmissionCompletedFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1899  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1900      asclin->FLAGSENABLE.B.TCE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1901  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1902  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1903  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1904  IFX_INLINE void IfxAsclin_enableTxFifoFillLevelFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1905  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1906      asclin->FLAGSENABLE.B.TFLE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1907  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1908  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1909  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1910  IFX_INLINE void IfxAsclin_enableTxFifoOutlet(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1911  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1912      asclin->TXFIFOCON.B.ENO = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1913  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1914  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1915  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1916  IFX_INLINE void IfxAsclin_enableTxFifoOverflowFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1917  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1918      asclin->FLAGSENABLE.B.TFOE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1919  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1920  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1921  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1922  IFX_INLINE void IfxAsclin_enableTxHeaderEndFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1923  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1924      asclin->FLAGSENABLE.B.THE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1925  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1926  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1927  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1928  IFX_INLINE void IfxAsclin_enableTxResponseEndFlag(Ifx_ASCLIN *asclin, boolean enable)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1929  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1930      asclin->FLAGSENABLE.B.TRE = enable ? 1 : 0;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1931  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1932  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1933  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1934  IFX_INLINE void IfxAsclin_flushRxFifo(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1935  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1936      asclin->RXFIFOCON.B.FLUSH = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1937  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1938  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1939  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1940  IFX_INLINE void IfxAsclin_flushTxFifo(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1941  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1942      asclin->TXFIFOCON.B.FLUSH = 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1943  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1944  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1945  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1946  IFX_INLINE boolean IfxAsclin_getBreakDetectedFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1947  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1948      return asclin->FLAGS.B.BD;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1949  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1950  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1951  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1952  IFX_INLINE uint8 IfxAsclin_getClockSource(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1953  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1954      return asclin->CSR.B.CLKSEL;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1955  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1956  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1957  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1958  IFX_INLINE boolean IfxAsclin_getClockStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1959  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1960      return asclin->CSR.B.CON;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1961  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1962  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1963  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1964  IFX_INLINE boolean IfxAsclin_getCollisionDetectionErrorFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1965  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1966      return asclin->FLAGS.B.CE;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1967  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1968  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1969  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1970  IFX_INLINE boolean IfxAsclin_getFallingEdgeDetectedFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1971  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1972      return asclin->FLAGS.B.FED;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1973  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1974  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1975  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1976  IFX_INLINE boolean IfxAsclin_getFrameErrorFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1977  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1978      return asclin->FLAGS.B.FE;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1979  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1980  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1981  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1982  IFX_INLINE boolean IfxAsclin_getHeaderTimeoutFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1983  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1984      return asclin->FLAGS.B.HT;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1985  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1986  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1987  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1988  IFX_INLINE boolean IfxAsclin_getKernelResetStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1989  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1990      return asclin->KRST0.B.RSTSTAT;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1991  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1992  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1993  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1994  IFX_INLINE boolean IfxAsclin_getLinAutoBaudDetectionErrorFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1995  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1996      return asclin->FLAGS.B.LA;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1997  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1998  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  1999  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2000  IFX_INLINE boolean IfxAsclin_getLinChecksumErrorFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2001  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2002      return asclin->FLAGS.B.LC;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2003  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2004  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2005  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2006  IFX_INLINE boolean IfxAsclin_getLinParityErrorFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2007  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2008      return asclin->FLAGS.B.LP;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2009  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2010  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2011  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2012  IFX_INLINE boolean IfxAsclin_getModuleStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2013  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2014      return asclin->CLC.B.DISS;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2015  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2016  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2017  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2018  IFX_INLINE boolean IfxAsclin_getParityErrorFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2019  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2020      return asclin->FLAGS.B.PE;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2021  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2022  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2023  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2024  IFX_INLINE uint16 IfxAsclin_getPrescaler(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2025  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2026      return asclin->BITCON.B.PRESCALER + 1;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2027  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2028  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2029  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2030  IFX_INLINE boolean IfxAsclin_getRaisingEdgeDetectedFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2031  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2032      return asclin->FLAGS.B.RED;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2033  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2034  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2035  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2036  IFX_INLINE boolean IfxAsclin_getReceiveSignalStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2037  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2038      return asclin->IOCR.B.RXM;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2039  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2040  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2041  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2042  IFX_INLINE boolean IfxAsclin_getResponseTimeoutFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2043  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2044      return asclin->FLAGS.B.RT;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2045  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2046  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2047  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2048  IFX_INLINE uint8 IfxAsclin_getRxFifoFillLevel(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2049  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2050      return asclin->RXFIFOCON.B.FILL;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2051  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2052  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2053  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2054  IFX_INLINE boolean IfxAsclin_getRxFifoFillLevelFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2055  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2056      return asclin->FLAGS.B.RFL;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2057  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2058  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2059  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2060  IFX_INLINE uint8 IfxAsclin_getRxFifoOutletWidth(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2061  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2062      return asclin->RXFIFOCON.B.OUTW;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2063  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2064  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2065  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2066  IFX_INLINE boolean IfxAsclin_getRxFifoOverflowFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2067  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2068      return asclin->FLAGS.B.RFO;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2069  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2070  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2071  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2072  IFX_INLINE boolean IfxAsclin_getRxFifoUnderflowFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2073  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2074      return asclin->FLAGS.B.RFU;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2075  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2076  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2077  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2078  IFX_INLINE boolean IfxAsclin_getRxHeaderEndFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2079  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2080      return asclin->FLAGS.B.RH;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2081  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2082  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2083  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2084  IFX_INLINE boolean IfxAsclin_getRxResponseEndFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2085  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2086      return asclin->FLAGS.B.RR;
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2087  }
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2088  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2089  
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2090  IFX_INLINE boolean IfxAsclin_getTransmissionCompletedFlagStatus(Ifx_ASCLIN *asclin)
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2091  {
; D:\WorkSpace\Tasking\Tasking_TC397_Lin\0_Src\4_McHal\Tricore\Asclin\Std\IfxAsclin.h	  2092      return asclin->FLAGS.B.TC;
	ld.bu	d15,[a12]54
.L81:
	jz.t	d15:1,.L9
.L85:

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   129      {
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   130          uint8 id = SLAVE_ID_0x33;
	mov	d15,#51
	st.b	[a10],d15
.L141:

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   131          IfxAsclin_Lin_clearFlagsStatus(g_linMaster.asclin);
	mov.aa	a4,a12
	call	IfxAsclin_Lin_clearFlagsStatus
.L142:

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   132          
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   133          HandleID = SLAVE_ID_0x33;
	st.b	HandleID,d15
.L143:

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   134          IfxAsclin_Lin_sendHeader(&g_linMaster, &id); 
	mov.aa	a5,a10
	mov.aa	a4,a15
	call	IfxAsclin_Lin_sendHeader
.L9:

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   135      }
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   136  
; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   137  }
	rslcx
	rfe
.L70:
	
__ISR_ASCLIN_Tx_function_end:
	.size	ISR_ASCLIN_Tx,__ISR_ASCLIN_Tx_function_end-ISR_ASCLIN_Tx
.L43:
	; End of function
	
	.sdecl	'.bss.ASCLIN_LIN_Master.g_linMaster',data,cluster('g_linMaster')
	.sect	'.bss.ASCLIN_LIN_Master.g_linMaster'
	.global	g_linMaster
	.align	4
g_linMaster:	.type	object
	.size	g_linMaster,28
	.space	28
	.sdecl	'.zdata.ASCLIN_LIN_Master.HandleID',data,cluster('HandleID')
	.sect	'.zdata.ASCLIN_LIN_Master.HandleID'
HandleID:	.type	object
	.size	HandleID,1
	.byte	255
	.sdecl	'.zdata.ASCLIN_LIN_Master.Rx_data',data,cluster('Rx_data')
	.sect	'.zdata.ASCLIN_LIN_Master.Rx_data'
Rx_data:	.type	object
	.size	Rx_data,8
	.space	8
	.sdecl	'.zdata.ASCLIN_LIN_Master.Tx_data',data,cluster('Tx_data')
	.sect	'.zdata.ASCLIN_LIN_Master.Tx_data'
Tx_data:	.type	object
	.size	Tx_data,8
	.byte	1,2,3,4
	.byte	5,6,7,8
	.sdecl	'.rodata.ASCLIN_LIN_Master..2.ini',data,rom
	.sect	'.rodata.ASCLIN_LIN_Master..2.ini'
	.align	4
.2.ini:	.type	object
	.size	.2.ini,16
	.word	IfxAsclin2_RXD_P10_6_IN
	.byte	16
	.space	3
	.word	IfxAsclin2_TX_P10_5_OUT
	.byte	128,3
	.space	2
	.calls	'init_ASCLIN_LIN_master','IfxAsclin_Lin_initModuleConfig'
	.calls	'init_ASCLIN_LIN_master','IfxAsclin_Lin_initModule'
	.calls	'ASCLIN_LIN_Master_Send_Message','IfxAsclin_Lin_sendHeader'
	.calls	'ISR_ASCLIN_Rx','IfxAsclin_Lin_clearFlagsStatus'
	.calls	'ISR_ASCLIN_Rx','IfxAsclin_Lin_sendHeader'
	.calls	'ISR_ASCLIN_Tx','IfxAsclin_Lin_sendResponse'
	.calls	'ISR_ASCLIN_Tx','IfxAsclin_Lin_receiveResponse'
	.calls	'ISR_ASCLIN_Tx','IfxAsclin_Lin_sendHeader'
	.calls	'ISR_ASCLIN_Tx','IfxAsclin_Lin_clearFlagsStatus'
	.calls	'ISR_ASCLIN_Rx','.cocofun_3'
	.calls	'ISR_ASCLIN_Tx','.cocofun_3'
	.calls	'init_ASCLIN_LIN_master','',96
	.calls	'ASCLIN_LIN_Master_Send_Message','',8
	.calls	'ISR_ASCLIN_Rx','',8
	.calls	'.cocofun_3','',0
	.extern	IfxAsclin2_RXD_P10_6_IN
	.extern	IfxAsclin2_TX_P10_5_OUT
	.extern	IfxAsclin_Lin_receiveResponse
	.extern	IfxAsclin_Lin_sendHeader
	.extern	IfxAsclin_Lin_sendResponse
	.extern	IfxAsclin_Lin_initModule
	.extern	IfxAsclin_Lin_initModuleConfig
	.extern	IfxAsclin_Lin_clearFlagsStatus
	.calls	'ISR_ASCLIN_Tx','',8
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L21:
	.word	117116
	.half	3
	.word	.L22
	.byte	4
.L20:
	.byte	1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\ASCLIN_LIN_Master.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\Debug\\',0,12,1
	.word	.L23
	.byte	2,1,1,3
	.word	157
	.byte	4
	.byte	'Ifx__jump_and_link',0,3,1,58,17,1,1,5
	.byte	'fun',0,1,58,43
	.word	160
	.byte	6,0,7
	.byte	'__fract',0,4,128,1,7
	.byte	'float',0,4,4,8
	.byte	'Ifx__float_to_fract',0,3,1,149,2,18
	.word	205
	.byte	1,1,5
	.byte	'a',0,1,149,2,44
	.word	217
	.byte	6,0,4
	.byte	'Ifx__stopPerfCounters',0,3,1,169,2,17,1,1,6,0,7
	.byte	'unsigned long long int',0,8,7,9
	.byte	'void',0,3
	.word	329
	.byte	8
	.byte	'__ld64',0,3,2,132,1,19
	.word	303
	.byte	1,1,5
	.byte	'addr',0,2,132,1,32
	.word	335
	.byte	6,0,4
	.byte	'__st64',0,3,2,140,1,17,1,1,5
	.byte	'addr',0,2,140,1,30
	.word	335
	.byte	5
	.byte	'value',0,2,140,1,43
	.word	303
	.byte	6,0,7
	.byte	'unsigned int',0,4,7,7
	.byte	'int',0,4,5,7
	.byte	'unsigned int',0,4,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,4,238,9,16,4,11
	.byte	'ENDINIT',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	444
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	444
	.byte	16,0,2,35,0,0,12,4,189,16,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	460
	.byte	4,2,35,0,0
.L64:
	.byte	7
	.byte	'unsigned char',0,1,8,7
	.byte	'unsigned short int',0,2,7,10
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,4,247,9,16,4,11
	.byte	'reserved_0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	596
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	613
	.byte	16,0,2,35,2,0,12,4,197,16,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	635
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,4,135,10,16,4,11
	.byte	'AE',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	596
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	613
	.byte	16,0,2,35,2,0,12,4,205,16,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	901
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_SCU_WDTCPU',0,4,136,17,25,12,13
	.byte	'CON0',0
	.word	556
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	861
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	1092
	.byte	4,2,35,8,0,14
	.word	1132
	.byte	3
	.word	1195
	.byte	4
	.byte	'IfxScuWdt_clearCpuEndinitInline',0,3,3,164,4,17,1,1,5
	.byte	'watchdog',0,3,164,4,65
	.word	1200
	.byte	5
	.byte	'password',0,3,164,4,82
	.word	613
	.byte	6,0,4
	.byte	'IfxScuWdt_clearSafetyEndinitInline',0,3,3,197,4,17,1,1,5
	.byte	'password',0,3,197,4,59
	.word	613
	.byte	6,0,4
	.byte	'IfxScuWdt_setCpuEndinitInline',0,3,3,144,5,17,1,1,5
	.byte	'watchdog',0,3,144,5,63
	.word	1200
	.byte	5
	.byte	'password',0,3,144,5,80
	.word	613
	.byte	6,0,4
	.byte	'IfxScuWdt_setSafetyEndinitInline',0,3,3,177,5,17,1,1,5
	.byte	'password',0,3,177,5,57
	.word	613
	.byte	6,0,8
	.byte	'IfxScuWdt_getCpuWatchdogPasswordInline',0,3,3,220,4,19
	.word	613
	.byte	1,1,5
	.byte	'watchdog',0,3,220,4,74
	.word	1200
	.byte	6,0,8
	.byte	'IfxScuWdt_getSafetyWatchdogPasswordInline',0,3,3,129,5,19
	.word	613
	.byte	1,1,6,0,15,6,161,1,9,1,16
	.byte	'IfxCpu_ResourceCpu_0',0,0,16
	.byte	'IfxCpu_ResourceCpu_1',0,1,16
	.byte	'IfxCpu_ResourceCpu_2',0,2,16
	.byte	'IfxCpu_ResourceCpu_3',0,3,16
	.byte	'IfxCpu_ResourceCpu_4',0,4,16
	.byte	'IfxCpu_ResourceCpu_5',0,5,16
	.byte	'IfxCpu_ResourceCpu_none',0,6,0,8
	.byte	'IfxCpu_getCoreIndex',0,3,5,235,6,31
	.word	1610
	.byte	1,1,6,0,8
	.byte	'IfxCpu_areInterruptsEnabled',0,3,5,233,5,20
	.word	596
	.byte	1,1,6,0,7
	.byte	'unsigned long int',0,4,7,8
	.byte	'IfxCpu_getPerformanceCounter',0,3,5,255,6,19
	.word	1857
	.byte	1,1,5
	.byte	'address',0,5,255,6,55
	.word	613
	.byte	6,0,8
	.byte	'IfxCpu_getPerformanceCounterStickyOverflow',0,3,5,156,7,20
	.word	596
	.byte	1,1,5
	.byte	'address',0,5,156,7,70
	.word	613
	.byte	6,0,4
	.byte	'IfxCpu_updatePerformanceCounter',0,3,5,138,9,17,1,1,5
	.byte	'address',0,5,138,9,56
	.word	1857
	.byte	5
	.byte	'count',0,5,138,9,72
	.word	1857
	.byte	17,6,0,0,10
	.byte	'_Ifx_P_OUT_Bits',0,8,145,3,16,4,11
	.byte	'P0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	596
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	596
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	596
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	596
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	596
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	596
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	596
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	613
	.byte	16,0,2,35,2,0,12,8,171,5,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2088
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMR_Bits',0,8,171,2,16,4,11
	.byte	'PS0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	596
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	596
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	596
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	596
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	596
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	596
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	596
	.byte	1,0,2,35,1,11
	.byte	'PCL0',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	596
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	596
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	596
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	596
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	596
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	596
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	596
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	596
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	596
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	596
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	596
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	596
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	596
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	596
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	596
	.byte	1,0,2,35,3,0,12,8,251,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2404
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ID_Bits',0,8,133,1,16,4,11
	.byte	'MODREV',0,1
	.word	596
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	596
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	613
	.byte	16,0,2,35,2,0,12,8,155,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2975
	.byte	4,2,35,0,0,18,4
	.word	596
	.byte	19,3,0,10
	.byte	'_Ifx_P_IOCR0_Bits',0,8,163,1,16,4,11
	.byte	'reserved_0',0,1
	.word	596
	.byte	3,5,2,35,0,11
	.byte	'PC0',0,1
	.word	596
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	596
	.byte	3,5,2,35,1,11
	.byte	'PC1',0,1
	.word	596
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	596
	.byte	3,5,2,35,2,11
	.byte	'PC2',0,1
	.word	596
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	596
	.byte	3,5,2,35,3,11
	.byte	'PC3',0,1
	.word	596
	.byte	5,0,2,35,3,0,12,8,171,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3104
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR4_Bits',0,8,189,1,16,4,11
	.byte	'reserved_0',0,1
	.word	596
	.byte	3,5,2,35,0,11
	.byte	'PC4',0,1
	.word	596
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	596
	.byte	3,5,2,35,1,11
	.byte	'PC5',0,1
	.word	596
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	596
	.byte	3,5,2,35,2,11
	.byte	'PC6',0,1
	.word	596
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	596
	.byte	3,5,2,35,3,11
	.byte	'PC7',0,1
	.word	596
	.byte	5,0,2,35,3,0,12,8,187,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3319
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR8_Bits',0,8,202,1,16,4,11
	.byte	'reserved_0',0,1
	.word	596
	.byte	3,5,2,35,0,11
	.byte	'PC8',0,1
	.word	596
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	596
	.byte	3,5,2,35,1,11
	.byte	'PC9',0,1
	.word	596
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	596
	.byte	3,5,2,35,2,11
	.byte	'PC10',0,1
	.word	596
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	596
	.byte	3,5,2,35,3,11
	.byte	'PC11',0,1
	.word	596
	.byte	5,0,2,35,3,0,12,8,195,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3534
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IOCR12_Bits',0,8,176,1,16,4,11
	.byte	'reserved_0',0,1
	.word	596
	.byte	3,5,2,35,0,11
	.byte	'PC12',0,1
	.word	596
	.byte	5,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	596
	.byte	3,5,2,35,1,11
	.byte	'PC13',0,1
	.word	596
	.byte	5,0,2,35,1,11
	.byte	'reserved_16',0,1
	.word	596
	.byte	3,5,2,35,2,11
	.byte	'PC14',0,1
	.word	596
	.byte	5,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	596
	.byte	3,5,2,35,3,11
	.byte	'PC15',0,1
	.word	596
	.byte	5,0,2,35,3,0,12,8,179,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3751
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_IN_Bits',0,8,141,1,16,4,11
	.byte	'P0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'P2',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'P3',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'P4',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'P5',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'P6',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'P7',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'P8',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'P9',0,1
	.word	596
	.byte	1,6,2,35,1,11
	.byte	'P10',0,1
	.word	596
	.byte	1,5,2,35,1,11
	.byte	'P11',0,1
	.word	596
	.byte	1,4,2,35,1,11
	.byte	'P12',0,1
	.word	596
	.byte	1,3,2,35,1,11
	.byte	'P13',0,1
	.word	596
	.byte	1,2,2,35,1,11
	.byte	'P14',0,1
	.word	596
	.byte	1,1,2,35,1,11
	.byte	'P15',0,1
	.word	596
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	613
	.byte	16,0,2,35,2,0,12,8,163,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3971
	.byte	4,2,35,0,0,18,24
	.word	596
	.byte	19,23,0,10
	.byte	'_Ifx_P_PDR0_Bits',0,8,212,3,16,4,11
	.byte	'PD0',0,1
	.word	596
	.byte	2,6,2,35,0,11
	.byte	'PL0',0,1
	.word	596
	.byte	2,4,2,35,0,11
	.byte	'PD1',0,1
	.word	596
	.byte	2,2,2,35,0,11
	.byte	'PL1',0,1
	.word	596
	.byte	2,0,2,35,0,11
	.byte	'PD2',0,1
	.word	596
	.byte	2,6,2,35,1,11
	.byte	'PL2',0,1
	.word	596
	.byte	2,4,2,35,1,11
	.byte	'PD3',0,1
	.word	596
	.byte	2,2,2,35,1,11
	.byte	'PL3',0,1
	.word	596
	.byte	2,0,2,35,1,11
	.byte	'PD4',0,1
	.word	596
	.byte	2,6,2,35,2,11
	.byte	'PL4',0,1
	.word	596
	.byte	2,4,2,35,2,11
	.byte	'PD5',0,1
	.word	596
	.byte	2,2,2,35,2,11
	.byte	'PL5',0,1
	.word	596
	.byte	2,0,2,35,2,11
	.byte	'PD6',0,1
	.word	596
	.byte	2,6,2,35,3,11
	.byte	'PL6',0,1
	.word	596
	.byte	2,4,2,35,3,11
	.byte	'PD7',0,1
	.word	596
	.byte	2,2,2,35,3,11
	.byte	'PL7',0,1
	.word	596
	.byte	2,0,2,35,3,0,12,8,195,5,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4295
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PDR1_Bits',0,8,233,3,16,4,11
	.byte	'PD8',0,1
	.word	596
	.byte	2,6,2,35,0,11
	.byte	'PL8',0,1
	.word	596
	.byte	2,4,2,35,0,11
	.byte	'PD9',0,1
	.word	596
	.byte	2,2,2,35,0,11
	.byte	'PL9',0,1
	.word	596
	.byte	2,0,2,35,0,11
	.byte	'PD10',0,1
	.word	596
	.byte	2,6,2,35,1,11
	.byte	'PL10',0,1
	.word	596
	.byte	2,4,2,35,1,11
	.byte	'PD11',0,1
	.word	596
	.byte	2,2,2,35,1,11
	.byte	'PL11',0,1
	.word	596
	.byte	2,0,2,35,1,11
	.byte	'PD12',0,1
	.word	596
	.byte	2,6,2,35,2,11
	.byte	'PL12',0,1
	.word	596
	.byte	2,4,2,35,2,11
	.byte	'PD13',0,1
	.word	596
	.byte	2,2,2,35,2,11
	.byte	'PL13',0,1
	.word	596
	.byte	2,0,2,35,2,11
	.byte	'PD14',0,1
	.word	596
	.byte	2,6,2,35,3,11
	.byte	'PL14',0,1
	.word	596
	.byte	2,4,2,35,3,11
	.byte	'PD15',0,1
	.word	596
	.byte	2,2,2,35,3,11
	.byte	'PL15',0,1
	.word	596
	.byte	2,0,2,35,3,0,12,8,203,5,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4599
	.byte	4,2,35,0,0,18,8
	.word	596
	.byte	19,7,0,10
	.byte	'_Ifx_P_ESR_Bits',0,8,111,16,4,11
	.byte	'EN0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	596
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	596
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	596
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	596
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	596
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	596
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	596
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	613
	.byte	16,0,2,35,2,0,12,8,147,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4924
	.byte	4,2,35,0,0,18,12
	.word	596
	.byte	19,11,0,10
	.byte	'_Ifx_P_PDISC_Bits',0,8,190,3,16,4,11
	.byte	'PDIS0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'PDIS2',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'PDIS3',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'PDIS4',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'PDIS5',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'PDIS6',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'PDIS7',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'PDIS8',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'PDIS9',0,1
	.word	596
	.byte	1,6,2,35,1,11
	.byte	'PDIS10',0,1
	.word	596
	.byte	1,5,2,35,1,11
	.byte	'PDIS11',0,1
	.word	596
	.byte	1,4,2,35,1,11
	.byte	'PDIS12',0,1
	.word	596
	.byte	1,3,2,35,1,11
	.byte	'PDIS13',0,1
	.word	596
	.byte	1,2,2,35,1,11
	.byte	'PDIS14',0,1
	.word	596
	.byte	1,1,2,35,1,11
	.byte	'PDIS15',0,1
	.word	596
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	613
	.byte	16,0,2,35,2,0,12,8,187,5,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5264
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_PCSR_Bits',0,8,167,3,16,4,11
	.byte	'SEL0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'SEL1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'SEL2',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'SEL3',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'SEL4',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'SEL5',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'SEL6',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'SEL7',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'SEL8',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'SEL9',0,1
	.word	596
	.byte	1,6,2,35,1,11
	.byte	'SEL10',0,1
	.word	596
	.byte	1,5,2,35,1,11
	.byte	'SEL11',0,1
	.word	596
	.byte	1,4,2,35,1,11
	.byte	'SEL12',0,1
	.word	596
	.byte	1,3,2,35,1,11
	.byte	'SEL13',0,1
	.word	596
	.byte	1,2,2,35,1,11
	.byte	'SEL14',0,1
	.word	596
	.byte	1,1,2,35,1,11
	.byte	'SEL15',0,1
	.word	596
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	613
	.byte	15,1,2,35,2,11
	.byte	'LCK',0,1
	.word	596
	.byte	1,0,2,35,3,0,12,8,179,5,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5630
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR0_Bits',0,8,230,2,16,4,11
	.byte	'PS0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	421
	.byte	28,0,2,35,0,0,12,8,139,5,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5994
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR4_Bits',0,8,251,2,16,4,11
	.byte	'reserved_0',0,1
	.word	596
	.byte	4,4,2,35,0,11
	.byte	'PS4',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	421
	.byte	24,0,2,35,0,0,12,8,155,5,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6141
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR8_Bits',0,8,134,3,16,4,11
	.byte	'reserved_0',0,1
	.word	596
	.byte	8,0,2,35,0,11
	.byte	'PS8',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	596
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	596
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	596
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	421
	.byte	20,0,2,35,0,0,12,8,163,5,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6310
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR12_Bits',0,8,240,2,16,4,11
	.byte	'reserved_0',0,2
	.word	613
	.byte	12,4,2,35,0,11
	.byte	'PS12',0,1
	.word	596
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	596
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	596
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	596
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	613
	.byte	16,0,2,35,2,0,12,8,147,5,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6482
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR0_Bits',0,8,128,2,16,4,11
	.byte	'reserved_0',0,2
	.word	613
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	596
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	596
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	596
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	613
	.byte	12,0,2,35,2,0,12,8,219,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6657
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR4_Bits',0,8,149,2,16,4,11
	.byte	'reserved_0',0,4
	.word	421
	.byte	20,12,2,35,0,11
	.byte	'PCL4',0,1
	.word	596
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	596
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	596
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	596
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	596
	.byte	8,0,2,35,3,0,12,8,235,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6831
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR8_Bits',0,8,160,2,16,4,11
	.byte	'reserved_0',0,4
	.word	421
	.byte	24,8,2,35,0,11
	.byte	'PCL8',0,1
	.word	596
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	596
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	596
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	596
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	596
	.byte	4,0,2,35,3,0,12,8,243,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7005
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR12_Bits',0,8,139,2,16,4,11
	.byte	'reserved_0',0,4
	.word	421
	.byte	28,4,2,35,0,11
	.byte	'PCL12',0,1
	.word	596
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	596
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	596
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	596
	.byte	1,0,2,35,3,0,12,8,227,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7181
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMSR_Bits',0,8,208,2,16,4,11
	.byte	'PS0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'PS2',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'PS3',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'PS4',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'PS5',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'PS6',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'PS7',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'PS8',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'PS9',0,1
	.word	596
	.byte	1,6,2,35,1,11
	.byte	'PS10',0,1
	.word	596
	.byte	1,5,2,35,1,11
	.byte	'PS11',0,1
	.word	596
	.byte	1,4,2,35,1,11
	.byte	'PS12',0,1
	.word	596
	.byte	1,3,2,35,1,11
	.byte	'PS13',0,1
	.word	596
	.byte	1,2,2,35,1,11
	.byte	'PS14',0,1
	.word	596
	.byte	1,1,2,35,1,11
	.byte	'PS15',0,1
	.word	596
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	613
	.byte	16,0,2,35,2,0,12,8,131,5,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7337
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_OMCR_Bits',0,8,234,1,16,4,11
	.byte	'reserved_0',0,2
	.word	613
	.byte	16,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	596
	.byte	1,6,2,35,2,11
	.byte	'PCL2',0,1
	.word	596
	.byte	1,5,2,35,2,11
	.byte	'PCL3',0,1
	.word	596
	.byte	1,4,2,35,2,11
	.byte	'PCL4',0,1
	.word	596
	.byte	1,3,2,35,2,11
	.byte	'PCL5',0,1
	.word	596
	.byte	1,2,2,35,2,11
	.byte	'PCL6',0,1
	.word	596
	.byte	1,1,2,35,2,11
	.byte	'PCL7',0,1
	.word	596
	.byte	1,0,2,35,2,11
	.byte	'PCL8',0,1
	.word	596
	.byte	1,7,2,35,3,11
	.byte	'PCL9',0,1
	.word	596
	.byte	1,6,2,35,3,11
	.byte	'PCL10',0,1
	.word	596
	.byte	1,5,2,35,3,11
	.byte	'PCL11',0,1
	.word	596
	.byte	1,4,2,35,3,11
	.byte	'PCL12',0,1
	.word	596
	.byte	1,3,2,35,3,11
	.byte	'PCL13',0,1
	.word	596
	.byte	1,2,2,35,3,11
	.byte	'PCL14',0,1
	.word	596
	.byte	1,1,2,35,3,11
	.byte	'PCL15',0,1
	.word	596
	.byte	1,0,2,35,3,0,12,8,211,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7670
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_LPCR_Bits',0,8,215,1,16,4,11
	.byte	'REN_CTRL',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'RX_EN',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'TERM',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'LRXTERM',0,1
	.word	596
	.byte	3,2,2,35,0,11
	.byte	'LVDSM',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'PS',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'TEN_CTRL',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'TX_EN',0,1
	.word	596
	.byte	1,6,2,35,1,11
	.byte	'VDIFFADJ',0,1
	.word	596
	.byte	2,4,2,35,1,11
	.byte	'VOSDYN',0,1
	.word	596
	.byte	1,3,2,35,1,11
	.byte	'VOSEXT',0,1
	.word	596
	.byte	1,2,2,35,1,11
	.byte	'TX_PD',0,1
	.word	596
	.byte	1,1,2,35,1,11
	.byte	'TX_PWDPD',0,1
	.word	596
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	613
	.byte	16,0,2,35,2,0,12,8,203,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8018
	.byte	4,2,35,0,0,18,32
	.word	8298
	.byte	19,7,0,18,56
	.word	596
	.byte	19,55,0,10
	.byte	'_Ifx_P_ACCEN1_Bits',0,8,105,16,4,11
	.byte	'reserved_0',0,4
	.word	421
	.byte	32,0,2,35,0,0,12,8,139,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8356
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P_ACCEN0_Bits',0,8,68,16,4,11
	.byte	'EN0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	596
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	596
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	596
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	596
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	596
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	596
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	596
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	596
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	596
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	596
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	596
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	596
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	596
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	596
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	596
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	596
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	596
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	596
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	596
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	596
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	596
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	596
	.byte	1,0,2,35,3,0,12,8,131,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8443
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_P',0,8,220,5,25,128,2,13
	.byte	'OUT',0
	.word	2364
	.byte	4,2,35,0,13
	.byte	'OMR',0
	.word	2935
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	3055
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3095
	.byte	4,2,35,12,13
	.byte	'IOCR0',0
	.word	3279
	.byte	4,2,35,16,13
	.byte	'IOCR4',0
	.word	3494
	.byte	4,2,35,20,13
	.byte	'IOCR8',0
	.word	3711
	.byte	4,2,35,24,13
	.byte	'IOCR12',0
	.word	3931
	.byte	4,2,35,28,13
	.byte	'reserved_20',0
	.word	3095
	.byte	4,2,35,32,13
	.byte	'IN',0
	.word	4246
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	4286
	.byte	24,2,35,40,13
	.byte	'PDR0',0
	.word	4559
	.byte	4,2,35,64,13
	.byte	'PDR1',0
	.word	4875
	.byte	4,2,35,68,13
	.byte	'reserved_48',0
	.word	4915
	.byte	8,2,35,72,13
	.byte	'ESR',0
	.word	5215
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	5255
	.byte	12,2,35,84,13
	.byte	'PDISC',0
	.word	5590
	.byte	4,2,35,96,13
	.byte	'PCSR',0
	.word	5954
	.byte	4,2,35,100,13
	.byte	'reserved_68',0
	.word	4915
	.byte	8,2,35,104,13
	.byte	'OMSR0',0
	.word	6101
	.byte	4,2,35,112,13
	.byte	'OMSR4',0
	.word	6270
	.byte	4,2,35,116,13
	.byte	'OMSR8',0
	.word	6442
	.byte	4,2,35,120,13
	.byte	'OMSR12',0
	.word	6617
	.byte	4,2,35,124,13
	.byte	'OMCR0',0
	.word	6791
	.byte	4,3,35,128,1,13
	.byte	'OMCR4',0
	.word	6965
	.byte	4,3,35,132,1,13
	.byte	'OMCR8',0
	.word	7141
	.byte	4,3,35,136,1,13
	.byte	'OMCR12',0
	.word	7297
	.byte	4,3,35,140,1,13
	.byte	'OMSR',0
	.word	7630
	.byte	4,3,35,144,1,13
	.byte	'OMCR',0
	.word	7978
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	4915
	.byte	8,3,35,152,1,13
	.byte	'LPCR',0
	.word	8338
	.byte	32,3,35,160,1,13
	.byte	'reserved_C0',0
	.word	8347
	.byte	56,3,35,192,1,13
	.byte	'ACCEN1',0
	.word	8403
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	8970
	.byte	4,3,35,252,1,0,14
	.word	9010
	.byte	3
	.word	9580
	.byte	15,7,81,9,1,16
	.byte	'IfxPort_InputMode_undefined',0,127,16
	.byte	'IfxPort_InputMode_noPullDevice',0,0,16
	.byte	'IfxPort_InputMode_pullDown',0,8,16
	.byte	'IfxPort_InputMode_pullUp',0,16,0,4
	.byte	'IfxPort_setPinModeInput',0,3,7,157,5,17,1,1,5
	.byte	'port',0,7,157,5,48
	.word	9585
	.byte	5
	.byte	'pinIndex',0,7,157,5,60
	.word	596
	.byte	5
	.byte	'mode',0,7,157,5,88
	.word	9590
	.byte	6,0,15,7,140,1,9,1,16
	.byte	'IfxPort_OutputMode_none',0,0,16
	.byte	'IfxPort_OutputMode_pushPull',0,128,1,16
	.byte	'IfxPort_OutputMode_openDrain',0,192,1,0,15,7,126,9,1,16
	.byte	'IfxPort_OutputIdx_general',0,128,1,16
	.byte	'IfxPort_OutputIdx_alt1',0,136,1,16
	.byte	'IfxPort_OutputIdx_alt2',0,144,1,16
	.byte	'IfxPort_OutputIdx_alt3',0,152,1,16
	.byte	'IfxPort_OutputIdx_alt4',0,160,1,16
	.byte	'IfxPort_OutputIdx_alt5',0,168,1,16
	.byte	'IfxPort_OutputIdx_alt6',0,176,1,16
	.byte	'IfxPort_OutputIdx_alt7',0,184,1,0,4
	.byte	'IfxPort_setPinModeOutput',0,3,7,163,5,17,1,1,5
	.byte	'port',0,7,163,5,49
	.word	9585
	.byte	5
	.byte	'pinIndex',0,7,163,5,61
	.word	596
	.byte	5
	.byte	'mode',0,7,163,5,90
	.word	9795
	.byte	5
	.byte	'index',0,7,163,5,114
	.word	9891
	.byte	6,0,15,7,187,1,9,4,16
	.byte	'IfxPort_State_notChanged',0,0,16
	.byte	'IfxPort_State_high',0,1,16
	.byte	'IfxPort_State_low',0,128,128,4,16
	.byte	'IfxPort_State_toggled',0,129,128,4,0,4
	.byte	'IfxPort_setPinState',0,3,7,169,5,17,1,1,5
	.byte	'port',0,7,169,5,44
	.word	9585
	.byte	5
	.byte	'pinIndex',0,7,169,5,56
	.word	596
	.byte	5
	.byte	'action',0,7,169,5,80
	.word	10204
	.byte	6,0,4
	.byte	'IfxScuCcu_wait',0,3,9,157,14,17,1,1,5
	.byte	'timeSec',0,9,157,14,40
	.word	217
	.byte	17,6,0,0,8
	.byte	'IfxScuCcu_getStmFrequency',0,3,9,188,13,20
	.word	217
	.byte	1,1,6,0,10
	.byte	'_Ifx_SRC_SRCR_Bits',0,11,68,16,4,11
	.byte	'SRPN',0,1
	.word	596
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	596
	.byte	2,6,2,35,1,11
	.byte	'SRE',0,1
	.word	596
	.byte	1,5,2,35,1,11
	.byte	'TOS',0,1
	.word	596
	.byte	3,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	596
	.byte	2,0,2,35,1,11
	.byte	'ECC',0,1
	.word	596
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	596
	.byte	3,0,2,35,2,11
	.byte	'SRR',0,1
	.word	596
	.byte	1,7,2,35,3,11
	.byte	'CLRR',0,1
	.word	596
	.byte	1,6,2,35,3,11
	.byte	'SETR',0,1
	.word	596
	.byte	1,5,2,35,3,11
	.byte	'IOV',0,1
	.word	596
	.byte	1,4,2,35,3,11
	.byte	'IOVCLR',0,1
	.word	596
	.byte	1,3,2,35,3,11
	.byte	'SWS',0,1
	.word	596
	.byte	1,2,2,35,3,11
	.byte	'SWSCLR',0,1
	.word	596
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	596
	.byte	1,0,2,35,3,0,12,11,93,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10469
	.byte	4,2,35,0,0,14
	.word	10759
	.byte	3
	.word	10798
	.byte	4
	.byte	'IfxSrc_clearRequest',0,3,10,247,1,17,1,1,5
	.byte	'src',0,10,247,1,60
	.word	10803
	.byte	6,0,10
	.byte	'_Ifx_ASCLIN_CLC_Bits',0,13,141,1,16,4,11
	.byte	'DISR',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	421
	.byte	28,0,2,35,0,0,12,13,232,3,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10851
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ASCLIN_IOCR_Bits',0,13,192,2,16,4,11
	.byte	'ALTI',0,1
	.word	596
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'DEPTH',0,2
	.word	613
	.byte	6,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	596
	.byte	6,0,2,35,1,11
	.byte	'CTS',0,1
	.word	596
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	613
	.byte	7,7,2,35,2,11
	.byte	'RCPOL',0,1
	.word	596
	.byte	1,6,2,35,3,11
	.byte	'CPOL',0,1
	.word	596
	.byte	1,5,2,35,3,11
	.byte	'SPOL',0,1
	.word	596
	.byte	1,4,2,35,3,11
	.byte	'LB',0,1
	.word	596
	.byte	1,3,2,35,3,11
	.byte	'CTSEN',0,1
	.word	596
	.byte	1,2,2,35,3,11
	.byte	'RXM',0,1
	.word	596
	.byte	1,1,2,35,3,11
	.byte	'TXM',0,1
	.word	596
	.byte	1,0,2,35,3,0,12,13,176,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11011
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ASCLIN_ID_Bits',0,13,184,2,16,4,11
	.byte	'MODREV',0,1
	.word	596
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	596
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	613
	.byte	16,0,2,35,2,0,12,13,168,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11306
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ASCLIN_TXFIFOCON_Bits',0,13,173,3,16,4,11
	.byte	'FLUSH',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'ENO',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	596
	.byte	2,4,2,35,0,11
	.byte	'FM',0,1
	.word	596
	.byte	2,2,2,35,0,11
	.byte	'INW',0,1
	.word	596
	.byte	2,0,2,35,0,11
	.byte	'INTLEVEL',0,1
	.word	596
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	596
	.byte	4,0,2,35,1,11
	.byte	'FILL',0,1
	.word	596
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,2
	.word	613
	.byte	11,0,2,35,2,0,12,13,144,5,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11431
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ASCLIN_RXFIFOCON_Bits',0,13,152,3,16,4,11
	.byte	'FLUSH',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'ENI',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	596
	.byte	2,4,2,35,0,11
	.byte	'FM',0,1
	.word	596
	.byte	2,2,2,35,0,11
	.byte	'OUTW',0,1
	.word	596
	.byte	2,0,2,35,0,11
	.byte	'INTLEVEL',0,1
	.word	596
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	596
	.byte	4,0,2,35,1,11
	.byte	'FILL',0,1
	.word	596
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,2
	.word	613
	.byte	10,1,2,35,2,11
	.byte	'BUF',0,1
	.word	596
	.byte	1,0,2,35,3,0,12,13,128,5,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11670
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ASCLIN_BITCON_Bits',0,13,111,16,4,11
	.byte	'PRESCALER',0,2
	.word	613
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,1
	.word	596
	.byte	4,0,2,35,1,11
	.byte	'OVERSAMPLING',0,1
	.word	596
	.byte	4,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	596
	.byte	4,0,2,35,2,11
	.byte	'SAMPLEPOINT',0,1
	.word	596
	.byte	4,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	596
	.byte	3,1,2,35,3,11
	.byte	'SM',0,1
	.word	596
	.byte	1,0,2,35,3,0,12,13,208,3,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	11925
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ASCLIN_FRAMECON_Bits',0,13,168,2,16,4,11
	.byte	'reserved_0',0,1
	.word	596
	.byte	6,2,2,35,0,11
	.byte	'IDLE',0,2
	.word	613
	.byte	3,7,2,35,0,11
	.byte	'STOP',0,1
	.word	596
	.byte	3,4,2,35,1,11
	.byte	'LEAD',0,1
	.word	596
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	596
	.byte	1,0,2,35,1,11
	.byte	'MODE',0,1
	.word	596
	.byte	2,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	613
	.byte	10,4,2,35,2,11
	.byte	'MSB',0,1
	.word	596
	.byte	1,3,2,35,3,11
	.byte	'CEN',0,1
	.word	596
	.byte	1,2,2,35,3,11
	.byte	'PEN',0,1
	.word	596
	.byte	1,1,2,35,3,11
	.byte	'ODD',0,1
	.word	596
	.byte	1,0,2,35,3,0,12,13,160,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12146
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ASCLIN_DATCON_Bits',0,13,159,1,16,4,11
	.byte	'DATLEN',0,1
	.word	596
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	613
	.byte	9,3,2,35,0,11
	.byte	'HO',0,1
	.word	596
	.byte	1,2,2,35,1,11
	.byte	'RM',0,1
	.word	596
	.byte	1,1,2,35,1,11
	.byte	'CSM',0,1
	.word	596
	.byte	1,0,2,35,1,11
	.byte	'RESPONSE',0,1
	.word	596
	.byte	8,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	596
	.byte	8,0,2,35,3,0,12,13,248,3,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12411
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ASCLIN_BRG_Bits',0,13,132,1,16,4,11
	.byte	'DENOMINATOR',0,2
	.word	613
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,1
	.word	596
	.byte	4,0,2,35,1,11
	.byte	'NUMERATOR',0,2
	.word	613
	.byte	12,4,2,35,2,11
	.byte	'reserved_28',0,1
	.word	596
	.byte	4,0,2,35,3,0,12,13,224,3,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12608
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ASCLIN_BRD_Bits',0,13,123,16,4,11
	.byte	'LOWERLIMIT',0,1
	.word	596
	.byte	8,0,2,35,0,11
	.byte	'UPPERLIMIT',0,1
	.word	596
	.byte	8,0,2,35,1,11
	.byte	'MEASURED',0,2
	.word	613
	.byte	12,4,2,35,2,11
	.byte	'reserved_28',0,1
	.word	596
	.byte	4,0,2,35,3,0,12,13,216,3,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12766
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ASCLIN_LIN_CON_Bits',0,13,239,2,16,4,11
	.byte	'reserved_0',0,4
	.word	421
	.byte	23,9,2,35,0,11
	.byte	'CSI',0,1
	.word	596
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	596
	.byte	1,7,2,35,3,11
	.byte	'CSEN',0,1
	.word	596
	.byte	1,6,2,35,3,11
	.byte	'MS',0,1
	.word	596
	.byte	1,5,2,35,3,11
	.byte	'ABD',0,1
	.word	596
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	596
	.byte	4,0,2,35,3,0,12,13,216,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12920
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ASCLIN_LIN_BTIMER_Bits',0,13,232,2,16,4,11
	.byte	'BREAK',0,1
	.word	596
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	421
	.byte	26,0,2,35,0,0,12,13,208,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13120
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ASCLIN_LIN_HTIMER_Bits',0,13,251,2,16,4,11
	.byte	'HEADER',0,1
	.word	596
	.byte	8,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	421
	.byte	24,0,2,35,0,0,12,13,224,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13234
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ASCLIN_LIN',0,13,161,5,25,12,13
	.byte	'CON',0
	.word	13080
	.byte	4,2,35,0,13
	.byte	'BTIMER',0
	.word	13194
	.byte	4,2,35,4,13
	.byte	'HTIMER',0
	.word	13309
	.byte	4,2,35,8,0,14
	.word	13349
	.byte	10
	.byte	'_Ifx_ASCLIN_FLAGS_Bits',0,13,171,1,16,4,11
	.byte	'TH',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'TR',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'RH',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'RR',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'FED',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'RED',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	613
	.byte	6,3,2,35,0,11
	.byte	'TWRQ',0,1
	.word	596
	.byte	1,2,2,35,1,11
	.byte	'THRQ',0,1
	.word	596
	.byte	1,1,2,35,1,11
	.byte	'TRRQ',0,1
	.word	596
	.byte	1,0,2,35,1,11
	.byte	'PE',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'TC',0,1
	.word	596
	.byte	1,6,2,35,2,11
	.byte	'FE',0,1
	.word	596
	.byte	1,5,2,35,2,11
	.byte	'HT',0,1
	.word	596
	.byte	1,4,2,35,2,11
	.byte	'RT',0,1
	.word	596
	.byte	1,3,2,35,2,11
	.byte	'BD',0,1
	.word	596
	.byte	1,2,2,35,2,11
	.byte	'LP',0,1
	.word	596
	.byte	1,1,2,35,2,11
	.byte	'LA',0,1
	.word	596
	.byte	1,0,2,35,2,11
	.byte	'LC',0,1
	.word	596
	.byte	1,7,2,35,3,11
	.byte	'CE',0,1
	.word	596
	.byte	1,6,2,35,3,11
	.byte	'RFO',0,1
	.word	596
	.byte	1,5,2,35,3,11
	.byte	'RFU',0,1
	.word	596
	.byte	1,4,2,35,3,11
	.byte	'RFL',0,1
	.word	596
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	596
	.byte	1,2,2,35,3,11
	.byte	'TFO',0,1
	.word	596
	.byte	1,1,2,35,3,11
	.byte	'TFL',0,1
	.word	596
	.byte	1,0,2,35,3,0,12,13,128,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13422
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ASCLIN_FLAGSSET_Bits',0,13,136,2,16,4,11
	.byte	'THS',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'TRS',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'RHS',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'RRS',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'FEDS',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'REDS',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	613
	.byte	6,3,2,35,0,11
	.byte	'TWRQS',0,1
	.word	596
	.byte	1,2,2,35,1,11
	.byte	'THRQS',0,1
	.word	596
	.byte	1,1,2,35,1,11
	.byte	'TRRQS',0,1
	.word	596
	.byte	1,0,2,35,1,11
	.byte	'PES',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'TCS',0,1
	.word	596
	.byte	1,6,2,35,2,11
	.byte	'FES',0,1
	.word	596
	.byte	1,5,2,35,2,11
	.byte	'HTS',0,1
	.word	596
	.byte	1,4,2,35,2,11
	.byte	'RTS',0,1
	.word	596
	.byte	1,3,2,35,2,11
	.byte	'BDS',0,1
	.word	596
	.byte	1,2,2,35,2,11
	.byte	'LPS',0,1
	.word	596
	.byte	1,1,2,35,2,11
	.byte	'LAS',0,1
	.word	596
	.byte	1,0,2,35,2,11
	.byte	'LCS',0,1
	.word	596
	.byte	1,7,2,35,3,11
	.byte	'CES',0,1
	.word	596
	.byte	1,6,2,35,3,11
	.byte	'RFOS',0,1
	.word	596
	.byte	1,5,2,35,3,11
	.byte	'RFUS',0,1
	.word	596
	.byte	1,4,2,35,3,11
	.byte	'RFLS',0,1
	.word	596
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	596
	.byte	1,2,2,35,3,11
	.byte	'TFOS',0,1
	.word	596
	.byte	1,1,2,35,3,11
	.byte	'TFLS',0,1
	.word	596
	.byte	1,0,2,35,3,0,12,13,152,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13908
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ASCLIN_FLAGSCLEAR_Bits',0,13,203,1,16,4,11
	.byte	'THC',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'TRC',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'RHC',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'RRC',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'FEDC',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'REDC',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	613
	.byte	6,3,2,35,0,11
	.byte	'TWRQC',0,1
	.word	596
	.byte	1,2,2,35,1,11
	.byte	'THRQC',0,1
	.word	596
	.byte	1,1,2,35,1,11
	.byte	'TRRQC',0,1
	.word	596
	.byte	1,0,2,35,1,11
	.byte	'PEC',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'TCC',0,1
	.word	596
	.byte	1,6,2,35,2,11
	.byte	'FEC',0,1
	.word	596
	.byte	1,5,2,35,2,11
	.byte	'HTC',0,1
	.word	596
	.byte	1,4,2,35,2,11
	.byte	'RTC',0,1
	.word	596
	.byte	1,3,2,35,2,11
	.byte	'BDC',0,1
	.word	596
	.byte	1,2,2,35,2,11
	.byte	'LPC',0,1
	.word	596
	.byte	1,1,2,35,2,11
	.byte	'LAC',0,1
	.word	596
	.byte	1,0,2,35,2,11
	.byte	'LCC',0,1
	.word	596
	.byte	1,7,2,35,3,11
	.byte	'CEC',0,1
	.word	596
	.byte	1,6,2,35,3,11
	.byte	'RFOC',0,1
	.word	596
	.byte	1,5,2,35,3,11
	.byte	'RFUC',0,1
	.word	596
	.byte	1,4,2,35,3,11
	.byte	'RFLC',0,1
	.word	596
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	596
	.byte	1,2,2,35,3,11
	.byte	'TFOC',0,1
	.word	596
	.byte	1,1,2,35,3,11
	.byte	'TFLC',0,1
	.word	596
	.byte	1,0,2,35,3,0,12,13,136,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14421
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ASCLIN_FLAGSENABLE_Bits',0,13,235,1,16,4,11
	.byte	'THE',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'TRE',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'RHE',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'RRE',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'FEDE',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'REDE',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,2
	.word	613
	.byte	9,0,2,35,0,11
	.byte	'PEE',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'TCE',0,1
	.word	596
	.byte	1,6,2,35,2,11
	.byte	'FEE',0,1
	.word	596
	.byte	1,5,2,35,2,11
	.byte	'HTE',0,1
	.word	596
	.byte	1,4,2,35,2,11
	.byte	'RTE',0,1
	.word	596
	.byte	1,3,2,35,2,11
	.byte	'BDE',0,1
	.word	596
	.byte	1,2,2,35,2,11
	.byte	'LPE',0,1
	.word	596
	.byte	1,1,2,35,2,11
	.byte	'LAE',0,1
	.word	596
	.byte	1,0,2,35,2,11
	.byte	'LCE',0,1
	.word	596
	.byte	1,7,2,35,3,11
	.byte	'CEE',0,1
	.word	596
	.byte	1,6,2,35,3,11
	.byte	'RFOE',0,1
	.word	596
	.byte	1,5,2,35,3,11
	.byte	'RFUE',0,1
	.word	596
	.byte	1,4,2,35,3,11
	.byte	'RFLE',0,1
	.word	596
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	596
	.byte	1,2,2,35,3,11
	.byte	'TFOE',0,1
	.word	596
	.byte	1,1,2,35,3,11
	.byte	'TFLE',0,1
	.word	596
	.byte	1,0,2,35,3,0,12,13,144,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14936
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ASCLIN_TXDATA_Bits',0,13,167,3,16,4,11
	.byte	'DATA',0,4
	.word	421
	.byte	32,0,2,35,0,0,12,13,136,5,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15401
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ASCLIN_RXDATA_Bits',0,13,140,3,16,4,11
	.byte	'DATA',0,4
	.word	421
	.byte	32,0,2,35,0,0,12,13,240,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15488
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ASCLIN_CSR_Bits',0,13,151,1,16,4,11
	.byte	'CLKSEL',0,1
	.word	596
	.byte	5,3,2,35,0,11
	.byte	'reserved_5',0,4
	.word	421
	.byte	26,1,2,35,0,11
	.byte	'CON',0,1
	.word	596
	.byte	1,0,2,35,3,0,12,13,240,3,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15575
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ASCLIN_RXDATAD_Bits',0,13,146,3,16,4,11
	.byte	'DATA',0,4
	.word	421
	.byte	32,0,2,35,0,0,12,13,248,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15698
	.byte	4,2,35,0,0,18,148,1
	.word	596
	.byte	19,147,1,0,10
	.byte	'_Ifx_ASCLIN_OCS_Bits',0,13,130,3,16,4,11
	.byte	'reserved_0',0,4
	.word	421
	.byte	24,8,2,35,0,11
	.byte	'SUS',0,1
	.word	596
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	596
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	596
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	596
	.byte	2,0,2,35,3,0,12,13,232,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15797
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ASCLIN_KRSTCLR_Bits',0,13,225,2,16,4,11
	.byte	'CLR',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	421
	.byte	31,0,2,35,0,0,12,13,200,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15960
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ASCLIN_KRST1_Bits',0,13,218,2,16,4,11
	.byte	'RST',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	421
	.byte	31,0,2,35,0,0,12,13,192,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16069
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ASCLIN_KRST0_Bits',0,13,210,2,16,4,11
	.byte	'RST',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	421
	.byte	30,0,2,35,0,0,12,13,184,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16176
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ASCLIN_ACCEN1_Bits',0,13,105,16,4,11
	.byte	'reserved_0',0,4
	.word	421
	.byte	32,0,2,35,0,0,12,13,200,3,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16302
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ASCLIN_ACCEN0_Bits',0,13,68,16,4,11
	.byte	'EN0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	596
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	596
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	596
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	596
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	596
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	596
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	596
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	596
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	596
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	596
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	596
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	596
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	596
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	596
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	596
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	596
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	596
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	596
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	596
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	596
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	596
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	596
	.byte	1,0,2,35,3,0,12,13,192,3,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16394
	.byte	4,2,35,0,0,10
	.byte	'_Ifx_ASCLIN',0,13,181,5,25,128,2,13
	.byte	'CLC',0
	.word	10971
	.byte	4,2,35,0,13
	.byte	'IOCR',0
	.word	11266
	.byte	4,2,35,4,13
	.byte	'ID',0
	.word	11391
	.byte	4,2,35,8,13
	.byte	'TXFIFOCON',0
	.word	11630
	.byte	4,2,35,12,13
	.byte	'RXFIFOCON',0
	.word	11885
	.byte	4,2,35,16,13
	.byte	'BITCON',0
	.word	12106
	.byte	4,2,35,20,13
	.byte	'FRAMECON',0
	.word	12371
	.byte	4,2,35,24,13
	.byte	'DATCON',0
	.word	12568
	.byte	4,2,35,28,13
	.byte	'BRG',0
	.word	12726
	.byte	4,2,35,32,13
	.byte	'BRD',0
	.word	12880
	.byte	4,2,35,36,13
	.byte	'LIN',0
	.word	13417
	.byte	12,2,35,40,13
	.byte	'FLAGS',0
	.word	13868
	.byte	4,2,35,52,13
	.byte	'FLAGSSET',0
	.word	14381
	.byte	4,2,35,56,13
	.byte	'FLAGSCLEAR',0
	.word	14896
	.byte	4,2,35,60,13
	.byte	'FLAGSENABLE',0
	.word	15361
	.byte	4,2,35,64,13
	.byte	'TXDATA',0
	.word	15448
	.byte	4,2,35,68,13
	.byte	'RXDATA',0
	.word	15535
	.byte	4,2,35,72,13
	.byte	'CSR',0
	.word	15658
	.byte	4,2,35,76,13
	.byte	'RXDATAD',0
	.word	15746
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	15786
	.byte	148,1,2,35,84,13
	.byte	'OCS',0
	.word	15920
	.byte	4,3,35,232,1,13
	.byte	'KRSTCLR',0
	.word	16029
	.byte	4,3,35,236,1,13
	.byte	'KRST1',0
	.word	16136
	.byte	4,3,35,240,1,13
	.byte	'KRST0',0
	.word	16262
	.byte	4,3,35,244,1,13
	.byte	'ACCEN1',0
	.word	16354
	.byte	4,3,35,248,1,13
	.byte	'ACCEN0',0
	.word	16926
	.byte	4,3,35,252,1,0,14
	.word	16966
	.byte	3
	.word	17408
	.byte	4
	.byte	'IfxAsclin_clearAllFlags',0,3,12,208,12,17,1,1,5
	.byte	'asclin',0,12,208,12,53
	.word	17413
	.byte	6,0,4
	.byte	'IfxAsclin_flushRxFifo',0,3,12,142,15,17,1,1,5
	.byte	'asclin',0,12,142,15,51
	.word	17413
	.byte	6,0,15,12,130,1,9,1,16
	.byte	'IfxAsclin_DataLength_1',0,0,16
	.byte	'IfxAsclin_DataLength_2',0,1,16
	.byte	'IfxAsclin_DataLength_3',0,2,16
	.byte	'IfxAsclin_DataLength_4',0,3,16
	.byte	'IfxAsclin_DataLength_5',0,4,16
	.byte	'IfxAsclin_DataLength_6',0,5,16
	.byte	'IfxAsclin_DataLength_7',0,6,16
	.byte	'IfxAsclin_DataLength_8',0,7,16
	.byte	'IfxAsclin_DataLength_9',0,8,16
	.byte	'IfxAsclin_DataLength_10',0,9,16
	.byte	'IfxAsclin_DataLength_11',0,10,16
	.byte	'IfxAsclin_DataLength_12',0,11,16
	.byte	'IfxAsclin_DataLength_13',0,12,16
	.byte	'IfxAsclin_DataLength_14',0,13,16
	.byte	'IfxAsclin_DataLength_15',0,14,16
	.byte	'IfxAsclin_DataLength_16',0,15,0,4
	.byte	'IfxAsclin_setDataLength',0,3,12,195,17,17,1,1,5
	.byte	'asclin',0,12,195,17,53
	.word	17413
	.byte	5
	.byte	'length',0,12,195,17,82
	.word	17516
	.byte	6,0
.L71:
	.byte	8
	.byte	'IfxAsclin_getRxFifoFillLevelFlagStatus',0,3,12,134,16,20
	.word	596
	.byte	1,1
.L74:
	.byte	5
	.byte	'asclin',0,12,134,16,71
	.word	17413
.L76:
	.byte	6,0,8
	.byte	'IfxAsclin_getRxResponseEndFlagStatus',0,3,12,164,16,20
	.word	596
	.byte	1,1,5
	.byte	'asclin',0,12,164,16,69
	.word	17413
	.byte	6,0
.L79:
	.byte	8
	.byte	'IfxAsclin_getTransmissionCompletedFlagStatus',0,3,12,170,16,20
	.word	596
	.byte	1,1
.L82:
	.byte	5
	.byte	'asclin',0,12,170,16,77
	.word	17413
.L84:
	.byte	6,0,8
	.byte	'IfxAsclin_getTxHeaderEndFlagStatus',0,3,12,206,16,20
	.word	596
	.byte	1,1,5
	.byte	'asclin',0,12,206,16,67
	.word	17413
	.byte	6,0,4
	.byte	'IfxAsclin_enableCts',0,3,12,248,13,17,1,1,5
	.byte	'asclin',0,12,248,13,49
	.word	17413
	.byte	5
	.byte	'enable',0,12,248,13,65
	.word	596
	.byte	6,0,4
	.byte	'IfxAsclin_enableRxFifoInlet',0,3,12,204,14,17,1,1,5
	.byte	'asclin',0,12,204,14,57
	.word	17413
	.byte	5
	.byte	'enable',0,12,204,14,73
	.word	596
	.byte	6,0,4
	.byte	'IfxAsclin_enableTxFifoOutlet',0,3,12,246,14,17,1,1,5
	.byte	'asclin',0,12,246,14,58
	.word	17413
	.byte	5
	.byte	'enable',0,12,246,14,74
	.word	596
	.byte	6,0,15,12,119,9,1,16
	.byte	'IfxAsclin_CtsInputSelect_0',0,0,16
	.byte	'IfxAsclin_CtsInputSelect_1',0,1,16
	.byte	'IfxAsclin_CtsInputSelect_2',0,2,16
	.byte	'IfxAsclin_CtsInputSelect_3',0,3,0,4
	.byte	'IfxAsclin_setCtsInput',0,3,12,189,17,17,1,1,5
	.byte	'asclin',0,12,189,17,51
	.word	17413
	.byte	5
	.byte	'ctsi',0,12,189,17,84
	.word	18475
	.byte	6,0,15,12,187,2,9,1,16
	.byte	'IfxAsclin_RxInputSelect_0',0,0,16
	.byte	'IfxAsclin_RxInputSelect_1',0,1,16
	.byte	'IfxAsclin_RxInputSelect_2',0,2,16
	.byte	'IfxAsclin_RxInputSelect_3',0,3,16
	.byte	'IfxAsclin_RxInputSelect_4',0,4,16
	.byte	'IfxAsclin_RxInputSelect_5',0,5,16
	.byte	'IfxAsclin_RxInputSelect_6',0,6,16
	.byte	'IfxAsclin_RxInputSelect_7',0,7,0,4
	.byte	'IfxAsclin_setRxInput',0,3,12,217,18,17,1,1,5
	.byte	'asclin',0,12,217,18,50
	.word	17413
	.byte	5
	.byte	'alti',0,12,217,18,82
	.word	18659
	.byte	6,0,20
	.word	437
	.byte	21
	.byte	'__c11_atomic_thread_fence',0,1,1,1,1,22
	.word	18951
	.byte	0,14
	.word	421
	.byte	3
	.word	421
	.byte	23
	.byte	'__cmpswapw',0
	.word	18993
	.byte	1,1,1,1,24
	.byte	'p',0
	.word	18998
	.byte	24
	.byte	'value',0
	.word	421
	.byte	24
	.byte	'compare',0
	.word	421
	.byte	0,25
	.word	165
	.byte	26
	.word	191
	.byte	6,0,25
	.word	226
	.byte	26
	.word	258
	.byte	6,0,25
	.word	271
	.byte	6,0,25
	.word	340
	.byte	26
	.word	359
	.byte	6,0,25
	.word	375
	.byte	26
	.word	390
	.byte	26
	.word	404
	.byte	6,0,25
	.word	1205
	.byte	26
	.word	1245
	.byte	26
	.word	1263
	.byte	6,0,25
	.word	1283
	.byte	26
	.word	1326
	.byte	6,0,25
	.word	1346
	.byte	26
	.word	1384
	.byte	26
	.word	1402
	.byte	6,0,25
	.word	1422
	.byte	26
	.word	1463
	.byte	6,0,25
	.word	1483
	.byte	26
	.word	1534
	.byte	6,0,25
	.word	1554
	.byte	6,0,25
	.word	1781
	.byte	6,0,25
	.word	1815
	.byte	6,0,25
	.word	1878
	.byte	26
	.word	1919
	.byte	6,0,25
	.word	1938
	.byte	26
	.word	1993
	.byte	6,0,25
	.word	2012
	.byte	26
	.word	2052
	.byte	26
	.word	2069
	.byte	17,6,0,0,25
	.word	9715
	.byte	26
	.word	9747
	.byte	26
	.word	9761
	.byte	26
	.word	9779
	.byte	6,0,25
	.word	10108
	.byte	26
	.word	10141
	.byte	26
	.word	10155
	.byte	26
	.word	10173
	.byte	26
	.word	10187
	.byte	6,0,25
	.word	10307
	.byte	26
	.word	10335
	.byte	26
	.word	10349
	.byte	26
	.word	10367
	.byte	6,0,25
	.word	10385
	.byte	26
	.word	10408
	.byte	17,27
	.word	10429
	.byte	28
	.word	10467
	.byte	0,6,0,0,25
	.word	10429
	.byte	6,0,25
	.word	10808
	.byte	26
	.word	10836
	.byte	6,0,25
	.word	17418
	.byte	26
	.word	17450
	.byte	6,0,25
	.word	17468
	.byte	26
	.word	17498
	.byte	6,0,25
	.word	17930
	.byte	26
	.word	17962
	.byte	26
	.word	17978
	.byte	6,0,25
	.word	17996
	.byte	26
	.word	18047
	.byte	6,0,25
	.word	18065
	.byte	26
	.word	18114
	.byte	6,0,25
	.word	18132
	.byte	26
	.word	18189
	.byte	6,0,25
	.word	18207
	.byte	26
	.word	18254
	.byte	6,0,25
	.word	18272
	.byte	26
	.word	18300
	.byte	26
	.word	18316
	.byte	6,0,25
	.word	18334
	.byte	26
	.word	18370
	.byte	26
	.word	18386
	.byte	6,0,25
	.word	18404
	.byte	26
	.word	18441
	.byte	26
	.word	18457
	.byte	6,0,25
	.word	18597
	.byte	26
	.word	18627
	.byte	26
	.word	18643
	.byte	6,0,25
	.word	18890
	.byte	26
	.word	18919
	.byte	26
	.word	18935
	.byte	6,0
.L88:
	.byte	18,8
	.word	596
	.byte	19,7,0,29,14,239,2,9,2,11
	.byte	'txSendHeaderOnly',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'txSendResponse',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'txHeaderInProgress',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'txResponseInProgress',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'rxHeaderInProgress',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'rxResponseInProgress',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'txHeaderErrorOccurred',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'txResponseErrorOccurred',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'rxHeaderErrorOccurred',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'rxResponseErrorOccurred',0,1
	.word	596
	.byte	1,6,2,35,1,0,29,14,228,3,9,16,13
	.byte	'rxResponseData',0
	.word	19538
	.byte	8,2,35,0,13
	.byte	'headerID',0
	.word	596
	.byte	1,2,35,8,13
	.byte	'txResponseLength',0
	.word	596
	.byte	1,2,35,9,13
	.byte	'rxResponseLength',0
	.word	596
	.byte	1,2,35,10,13
	.byte	'flags',0
	.word	19547
	.byte	2,2,35,12,0,15,12,216,1,9,1,16
	.byte	'IfxAsclin_LinMode_slave',0,0,16
	.byte	'IfxAsclin_LinMode_master',0,1,0,29,14,131,3,9,1,11
	.byte	'txHeaderEnd',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'txResponseEnd',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'rxHeaderEnd',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'rxResponseEnd',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'txCompleted',0,1
	.word	596
	.byte	1,3,2,35,0,0,29,14,190,3,9,2,11
	.byte	'frameError',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'headerTimeout',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'responseTimeout',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'breakDetected',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'linParityError',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'linAutobaudDetectionError',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'linChecksumError',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'collisionDetectionError',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'rxFifoOverflow',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'txFifoOverflow',0,1
	.word	596
	.byte	1,6,2,35,1,0
.L87:
	.byte	29,14,145,4,9,28,13
	.byte	'asclin',0
	.word	17413
	.byte	4,2,35,0,13
	.byte	'linFrameData',0
	.word	19868
	.byte	16,2,35,4,13
	.byte	'linMode',0
	.word	19984
	.byte	1,2,35,20,13
	.byte	'acknowledgmentFlags',0
	.word	20044
	.byte	1,2,35,21,13
	.byte	'errorFlagsStatus',0
	.word	20170
	.byte	2,2,35,22,13
	.byte	'receiveIdEnable',0
	.word	596
	.byte	1,2,35,24,13
	.byte	'isInterruptMode',0
	.word	596
	.byte	1,2,35,25,0,3
	.word	20454
	.byte	3
	.word	596
	.byte	30
	.byte	'IfxAsclin_Lin_receiveResponse',0,14,143,5,17,1,1,1,1,5
	.byte	'asclin',0,14,143,5,62
	.word	20621
	.byte	5
	.byte	'data',0,14,143,5,77
	.word	20626
	.byte	5
	.byte	'length',0,14,143,5,90
	.word	1857
	.byte	0,30
	.byte	'IfxAsclin_Lin_sendHeader',0,14,153,5,17,1,1,1,1,5
	.byte	'asclin',0,14,153,5,57
	.word	20621
	.byte	5
	.byte	'id',0,14,153,5,72
	.word	20626
	.byte	0,30
	.byte	'IfxAsclin_Lin_sendResponse',0,14,164,5,17,1,1,1,1,5
	.byte	'asclin',0,14,164,5,59
	.word	20621
	.byte	5
	.byte	'data',0,14,164,5,74
	.word	20626
	.byte	5
	.byte	'length',0,14,164,5,87
	.word	1857
	.byte	0,15,12,133,3,9,1,16
	.byte	'IfxAsclin_Status_configurationError',0,0,16
	.byte	'IfxAsclin_Status_noError',0,1,0,15,12,163,1,9,1,16
	.byte	'IfxAsclin_FrameMode_initialise',0,0,16
	.byte	'IfxAsclin_FrameMode_asc',0,1,16
	.byte	'IfxAsclin_FrameMode_spi',0,2,16
	.byte	'IfxAsclin_FrameMode_lin',0,3,0,29,14,153,3,9,8,13
	.byte	'baudrate',0
	.word	217
	.byte	4,2,35,0,13
	.byte	'numerator',0
	.word	613
	.byte	2,2,35,4,13
	.byte	'denominator',0
	.word	613
	.byte	2,2,35,6,0,29,14,142,3,9,4,13
	.byte	'abd',0
	.word	596
	.byte	1,2,35,0,13
	.byte	'lowerLimit',0
	.word	596
	.byte	1,2,35,1,13
	.byte	'upperLimit',0
	.word	596
	.byte	1,2,35,2,13
	.byte	'measured',0
	.word	596
	.byte	1,2,35,3,0,15,12,234,1,9,1,16
	.byte	'IfxAsclin_OversamplingFactor_4',0,3,16
	.byte	'IfxAsclin_OversamplingFactor_5',0,4,16
	.byte	'IfxAsclin_OversamplingFactor_6',0,5,16
	.byte	'IfxAsclin_OversamplingFactor_7',0,6,16
	.byte	'IfxAsclin_OversamplingFactor_8',0,7,16
	.byte	'IfxAsclin_OversamplingFactor_9',0,8,16
	.byte	'IfxAsclin_OversamplingFactor_10',0,9,16
	.byte	'IfxAsclin_OversamplingFactor_11',0,10,16
	.byte	'IfxAsclin_OversamplingFactor_12',0,11,16
	.byte	'IfxAsclin_OversamplingFactor_13',0,12,16
	.byte	'IfxAsclin_OversamplingFactor_14',0,13,16
	.byte	'IfxAsclin_OversamplingFactor_15',0,14,16
	.byte	'IfxAsclin_OversamplingFactor_16',0,15,0,29,14,171,3,9,4,13
	.byte	'prescaler',0
	.word	613
	.byte	2,2,35,0,13
	.byte	'oversampling',0
	.word	21196
	.byte	1,2,35,2,0,15,12,224,2,9,1,16
	.byte	'IfxAsclin_SamplesPerBit_one',0,0,16
	.byte	'IfxAsclin_SamplesPerBit_three',0,1,0,15,12,202,2,9,1,16
	.byte	'IfxAsclin_SamplePointPosition_1',0,1,16
	.byte	'IfxAsclin_SamplePointPosition_2',0,2,16
	.byte	'IfxAsclin_SamplePointPosition_3',0,3,16
	.byte	'IfxAsclin_SamplePointPosition_4',0,4,16
	.byte	'IfxAsclin_SamplePointPosition_5',0,5,16
	.byte	'IfxAsclin_SamplePointPosition_6',0,6,16
	.byte	'IfxAsclin_SamplePointPosition_7',0,7,16
	.byte	'IfxAsclin_SamplePointPosition_8',0,8,16
	.byte	'IfxAsclin_SamplePointPosition_9',0,9,16
	.byte	'IfxAsclin_SamplePointPosition_10',0,10,16
	.byte	'IfxAsclin_SamplePointPosition_11',0,11,16
	.byte	'IfxAsclin_SamplePointPosition_12',0,12,16
	.byte	'IfxAsclin_SamplePointPosition_13',0,13,16
	.byte	'IfxAsclin_SamplePointPosition_14',0,14,16
	.byte	'IfxAsclin_SamplePointPosition_15',0,15,0,29,14,162,3,9,4,13
	.byte	'filterDepth',0
	.word	596
	.byte	1,2,35,0,13
	.byte	'medianFilter',0
	.word	21687
	.byte	1,2,35,1,13
	.byte	'samplePointPosition',0
	.word	21756
	.byte	1,2,35,2,0,15,12,185,1,9,1,16
	.byte	'IfxAsclin_IdleDelay_0',0,0,16
	.byte	'IfxAsclin_IdleDelay_1',0,1,16
	.byte	'IfxAsclin_IdleDelay_2',0,2,16
	.byte	'IfxAsclin_IdleDelay_3',0,3,16
	.byte	'IfxAsclin_IdleDelay_4',0,4,16
	.byte	'IfxAsclin_IdleDelay_5',0,5,16
	.byte	'IfxAsclin_IdleDelay_6',0,6,16
	.byte	'IfxAsclin_IdleDelay_7',0,7,0,15,12,201,1,9,1,16
	.byte	'IfxAsclin_LeadDelay_0',0,0,16
	.byte	'IfxAsclin_LeadDelay_1',0,1,16
	.byte	'IfxAsclin_LeadDelay_2',0,2,16
	.byte	'IfxAsclin_LeadDelay_3',0,3,16
	.byte	'IfxAsclin_LeadDelay_4',0,4,16
	.byte	'IfxAsclin_LeadDelay_5',0,5,16
	.byte	'IfxAsclin_LeadDelay_6',0,6,16
	.byte	'IfxAsclin_LeadDelay_7',0,7,0,15,12,142,3,9,1,16
	.byte	'IfxAsclin_StopBit_0',0,0,16
	.byte	'IfxAsclin_StopBit_1',0,1,16
	.byte	'IfxAsclin_StopBit_2',0,2,16
	.byte	'IfxAsclin_StopBit_3',0,3,16
	.byte	'IfxAsclin_StopBit_4',0,4,16
	.byte	'IfxAsclin_StopBit_5',0,5,16
	.byte	'IfxAsclin_StopBit_6',0,6,16
	.byte	'IfxAsclin_StopBit_7',0,7,0,15,12,254,1,9,1,16
	.byte	'IfxAsclin_ParityType_even',0,0,16
	.byte	'IfxAsclin_ParityType_odd',0,1,0,15,12,234,2,9,1,16
	.byte	'IfxAsclin_ShiftDirection_lsbFirst',0,0,16
	.byte	'IfxAsclin_ShiftDirection_msbFirst',0,1,0,29,14,215,3,9,8,13
	.byte	'idleDelay',0
	.word	22358
	.byte	1,2,35,0,13
	.byte	'leadDelay',0
	.word	22557
	.byte	1,2,35,1,13
	.byte	'stopBit',0
	.word	22756
	.byte	1,2,35,2,13
	.byte	'parityType',0
	.word	22939
	.byte	1,2,35,3,13
	.byte	'shiftDir',0
	.word	23001
	.byte	1,2,35,4,13
	.byte	'parityEnable',0
	.word	596
	.byte	1,2,35,5,13
	.byte	'collisionDetectionEnable',0
	.word	596
	.byte	1,2,35,6,0,15,12,135,2,9,1,16
	.byte	'IfxAsclin_ReceiveBufferMode_rxFifo',0,0,16
	.byte	'IfxAsclin_ReceiveBufferMode_rxBuffer',0,1,0,15,12,166,3,9,1,16
	.byte	'IfxAsclin_TxFifoInletWidth_0',0,0,16
	.byte	'IfxAsclin_TxFifoInletWidth_1',0,1,16
	.byte	'IfxAsclin_TxFifoInletWidth_2',0,2,16
	.byte	'IfxAsclin_TxFifoInletWidth_3',0,3,0,15,12,176,2,9,1,16
	.byte	'IfxAsclin_RxFifoOutletWidth_0',0,0,16
	.byte	'IfxAsclin_RxFifoOutletWidth_1',0,1,16
	.byte	'IfxAsclin_RxFifoOutletWidth_2',0,2,16
	.byte	'IfxAsclin_RxFifoOutletWidth_3',0,3,0,29,14,206,3,9,4,13
	.byte	'buffMode',0
	.word	23236
	.byte	1,2,35,0,13
	.byte	'inWidth',0
	.word	23319
	.byte	1,2,35,1,13
	.byte	'outWidth',0
	.word	23450
	.byte	1,2,35,2,0,15,12,174,1,9,1,16
	.byte	'IfxAsclin_HeaderResponseSelect_headerAndResponse',0,0,16
	.byte	'IfxAsclin_HeaderResponseSelect_headerOnly',0,1,0,15,12,225,1,9,1,16
	.byte	'IfxAsclin_LinResponseTimeoutMode_frameTimeout',0,0,16
	.byte	'IfxAsclin_LinResponseTimeoutMode_responseTimeout',0,1,0,15,12,81,9,1,16
	.byte	'IfxAsclin_Checksum_classic',0,0,16
	.byte	'IfxAsclin_Checksum_enhanced',0,1,0,29,14,179,3,9,6,13
	.byte	'dataLength',0
	.word	17516
	.byte	1,2,35,0,13
	.byte	'headerOnly',0
	.word	23645
	.byte	1,2,35,1,13
	.byte	'responseTimeoutMode',0
	.word	23747
	.byte	1,2,35,2,13
	.byte	'checksum',0
	.word	23853
	.byte	1,2,35,3,13
	.byte	'responseTimeout',0
	.word	613
	.byte	2,2,35,4,0,15,12,90,9,1,16
	.byte	'IfxAsclin_ChecksumInjection_notWritten',0,0,16
	.byte	'IfxAsclin_ChecksumInjection_written',0,1,0,29,14,250,3,9,4,13
	.byte	'csEnable',0
	.word	596
	.byte	1,2,35,0,13
	.byte	'csi',0
	.word	24037
	.byte	1,2,35,1,13
	.byte	'breakLength',0
	.word	596
	.byte	1,2,35,2,13
	.byte	'headerTimeout',0
	.word	596
	.byte	1,2,35,3,0,29,7,246,1,9,8,13
	.byte	'port',0
	.word	9585
	.byte	4,2,35,0,13
	.byte	'pinIndex',0
	.word	596
	.byte	1,2,35,4,0,15,16,127,9,1,16
	.byte	'Ifx_RxSel_a',0,0,16
	.byte	'Ifx_RxSel_b',0,1,16
	.byte	'Ifx_RxSel_c',0,2,16
	.byte	'Ifx_RxSel_d',0,3,16
	.byte	'Ifx_RxSel_e',0,4,16
	.byte	'Ifx_RxSel_f',0,5,16
	.byte	'Ifx_RxSel_g',0,6,16
	.byte	'Ifx_RxSel_h',0,7,0,29,15,64,15,16,13
	.byte	'module',0
	.word	17413
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	24204
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	24243
	.byte	1,2,35,12,0,20
	.word	24361
	.byte	3
	.word	24412
	.byte	29,15,96,15,16,13
	.byte	'module',0
	.word	17413
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	24204
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	9891
	.byte	1,2,35,12,0,20
	.word	24422
	.byte	3
	.word	24473
	.byte	15,7,151,1,9,1,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed1',0,0,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed2',0,1,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed3',0,2,16
	.byte	'IfxPort_PadDriver_cmosAutomotiveSpeed4',0,3,16
	.byte	'IfxPort_PadDriver_ttlSpeed1',0,8,16
	.byte	'IfxPort_PadDriver_ttlSpeed2',0,9,16
	.byte	'IfxPort_PadDriver_ttlSpeed3',0,10,16
	.byte	'IfxPort_PadDriver_ttlSpeed4',0,11,16
	.byte	'IfxPort_PadDriver_ttl3v3Speed1',0,12,16
	.byte	'IfxPort_PadDriver_ttl3v3Speed2',0,13,16
	.byte	'IfxPort_PadDriver_ttl3v3Speed3',0,14,16
	.byte	'IfxPort_PadDriver_ttl3v3Speed4',0,15,0,29,14,132,4,9,16,13
	.byte	'rx',0
	.word	24417
	.byte	4,2,35,0,13
	.byte	'rxMode',0
	.word	9590
	.byte	1,2,35,4,13
	.byte	'tx',0
	.word	24478
	.byte	4,2,35,8,13
	.byte	'txMode',0
	.word	9795
	.byte	1,2,35,12,13
	.byte	'pinDriver',0
	.word	24483
	.byte	1,2,35,13,0,20
	.word	24906
	.byte	3
	.word	24988
	.byte	15,12,109,9,1,16
	.byte	'IfxAsclin_ClockSource_noClock',0,0,16
	.byte	'IfxAsclin_ClockSource_ascFastClock',0,2,16
	.byte	'IfxAsclin_ClockSource_ascSlowClock',0,4,0,15,17,66,9,1,16
	.byte	'IfxSrc_Tos_cpu0',0,0,16
	.byte	'IfxSrc_Tos_dma',0,1,16
	.byte	'IfxSrc_Tos_cpu1',0,2,16
	.byte	'IfxSrc_Tos_cpu2',0,3,16
	.byte	'IfxSrc_Tos_cpu3',0,4,16
	.byte	'IfxSrc_Tos_cpu4',0,5,16
	.byte	'IfxSrc_Tos_cpu5',0,6,0,29,14,218,2,9,2,11
	.byte	'rxReceivedHeader',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'rxReceivedResponse',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'txTransmittedHeader',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'txTransmittedResponse',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'exBreakDetected',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'exTransmissionCompleted',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'exHeaderTimeout',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'exResponseTimeout',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'exLinParityError',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'exLinAutobaudDetectionError',0,1
	.word	596
	.byte	1,6,2,35,1,11
	.byte	'exLinChecksumError',0,1
	.word	596
	.byte	1,5,2,35,1,11
	.byte	'exFramingError',0,1
	.word	596
	.byte	1,4,2,35,1,11
	.byte	'exCollisionDetectionError',0,1
	.word	596
	.byte	1,3,2,35,1,11
	.byte	'exReceiveFIFOOverflow',0,1
	.word	596
	.byte	1,2,2,35,1,11
	.byte	'exTransmitFIFOOverflow',0,1
	.word	596
	.byte	1,1,2,35,1,0,29,14,239,3,9,12,13
	.byte	'txPriority',0
	.word	613
	.byte	2,2,35,0,13
	.byte	'rxPriority',0
	.word	613
	.byte	2,2,35,2,13
	.byte	'exPriority',0
	.word	613
	.byte	2,2,35,4,13
	.byte	'typeOfService',0
	.word	25110
	.byte	1,2,35,6,13
	.byte	'enabledInterrupt',0
	.word	25241
	.byte	2,2,35,8,0
.L58:
	.byte	29,14,158,4,9,76,13
	.byte	'asclin',0
	.word	17413
	.byte	4,2,35,0,13
	.byte	'frameMode',0
	.word	20935
	.byte	1,2,35,4,13
	.byte	'linMode',0
	.word	19984
	.byte	1,2,35,5,13
	.byte	'brg',0
	.word	21053
	.byte	8,2,35,8,13
	.byte	'brd',0
	.word	21118
	.byte	4,2,35,16,13
	.byte	'btc',0
	.word	21639
	.byte	4,2,35,20,13
	.byte	'bsc',0
	.word	22279
	.byte	4,2,35,24,13
	.byte	'frame',0
	.word	23080
	.byte	8,2,35,28,13
	.byte	'fifo',0
	.word	23585
	.byte	4,2,35,36,13
	.byte	'data',0
	.word	23918
	.byte	6,2,35,40,13
	.byte	'lin',0
	.word	24122
	.byte	4,2,35,46,13
	.byte	'pins',0
	.word	24993
	.byte	4,2,35,52,13
	.byte	'clockSource',0
	.word	24998
	.byte	1,2,35,56,13
	.byte	'alti',0
	.word	18659
	.byte	1,2,35,57,13
	.byte	'interrupt',0
	.word	25715
	.byte	12,2,35,60,13
	.byte	'isInterruptMode',0
	.word	596
	.byte	1,2,35,72,13
	.byte	'receiveIdEnable',0
	.word	596
	.byte	1,2,35,73,0,20
	.word	25831
	.byte	3
	.word	26116
	.byte	31
	.byte	'IfxAsclin_Lin_initModule',0,14,189,5,29
	.word	20863
	.byte	1,1,1,1,5
	.byte	'asclin',0,14,189,5,69
	.word	20621
	.byte	5
	.byte	'config',0,14,189,5,105
	.word	26121
	.byte	0,3
	.word	25831
	.byte	30
	.byte	'IfxAsclin_Lin_initModuleConfig',0,14,199,5,17,1,1,1,1,5
	.byte	'config',0,14,199,5,70
	.word	26197
	.byte	5
	.byte	'asclin',0,14,199,5,90
	.word	17413
	.byte	0,30
	.byte	'IfxAsclin_Lin_clearFlagsStatus',0,14,251,5,17,1,1,1,1,5
	.byte	'asclin',0,14,251,5,63
	.word	20621
	.byte	0
.L61:
	.byte	20
	.word	24906
	.byte	7
	.byte	'short int',0,2,5,32
	.byte	'__wchar_t',0,18,1,1
	.word	26337
	.byte	32
	.byte	'__size_t',0,18,1,1
	.word	421
	.byte	32
	.byte	'__ptrdiff_t',0,18,1,1
	.word	437
	.byte	33,1,3
	.word	26405
	.byte	32
	.byte	'__codeptr',0,18,1,1
	.word	26407
	.byte	32
	.byte	'boolean',0,19,104,29
	.word	596
	.byte	32
	.byte	'uint8',0,19,108,29
	.word	596
	.byte	32
	.byte	'uint16',0,19,112,29
	.word	613
	.byte	32
	.byte	'uint32',0,19,116,29
	.word	1857
	.byte	32
	.byte	'uint64',0,19,121,29
	.word	303
	.byte	32
	.byte	'sint16',0,19,129,1,29
	.word	26337
	.byte	7
	.byte	'long int',0,4,5,32
	.byte	'sint32',0,19,134,1,29
	.word	26521
	.byte	7
	.byte	'long long int',0,8,5,32
	.byte	'sint64',0,19,141,1,29
	.word	26549
	.byte	32
	.byte	'float32',0,19,170,1,29
	.word	217
	.byte	32
	.byte	'pvoid',0,16,54,28
	.word	335
	.byte	32
	.byte	'Ifx_TickTime',0,16,76,28
	.word	26549
	.byte	32
	.byte	'Ifx_Priority',0,16,100,16
	.word	613
	.byte	32
	.byte	'Ifx_RxSel',0,16,137,1,3
	.word	24243
	.byte	32
	.byte	'Ifx_UReg_8Bit',0,20,96,24
	.word	596
	.byte	32
	.byte	'Ifx_UReg_32Bit',0,20,98,24
	.word	421
	.byte	32
	.byte	'Ifx_SReg_32Bit',0,20,101,24
	.word	437
	.byte	32
	.byte	'Ifx_ASCLIN_ACCEN0_Bits',0,13,102,3
	.word	16394
	.byte	32
	.byte	'Ifx_ASCLIN_ACCEN1_Bits',0,13,108,3
	.word	16302
	.byte	32
	.byte	'Ifx_ASCLIN_BITCON_Bits',0,13,120,3
	.word	11925
	.byte	32
	.byte	'Ifx_ASCLIN_BRD_Bits',0,13,129,1,3
	.word	12766
	.byte	32
	.byte	'Ifx_ASCLIN_BRG_Bits',0,13,138,1,3
	.word	12608
	.byte	32
	.byte	'Ifx_ASCLIN_CLC_Bits',0,13,148,1,3
	.word	10851
	.byte	32
	.byte	'Ifx_ASCLIN_CSR_Bits',0,13,156,1,3
	.word	15575
	.byte	32
	.byte	'Ifx_ASCLIN_DATCON_Bits',0,13,168,1,3
	.word	12411
	.byte	32
	.byte	'Ifx_ASCLIN_FLAGS_Bits',0,13,200,1,3
	.word	13422
	.byte	32
	.byte	'Ifx_ASCLIN_FLAGSCLEAR_Bits',0,13,232,1,3
	.word	14421
	.byte	32
	.byte	'Ifx_ASCLIN_FLAGSENABLE_Bits',0,13,133,2,3
	.word	14936
	.byte	32
	.byte	'Ifx_ASCLIN_FLAGSSET_Bits',0,13,165,2,3
	.word	13908
	.byte	32
	.byte	'Ifx_ASCLIN_FRAMECON_Bits',0,13,181,2,3
	.word	12146
	.byte	32
	.byte	'Ifx_ASCLIN_ID_Bits',0,13,189,2,3
	.word	11306
	.byte	32
	.byte	'Ifx_ASCLIN_IOCR_Bits',0,13,207,2,3
	.word	11011
	.byte	32
	.byte	'Ifx_ASCLIN_KRST0_Bits',0,13,215,2,3
	.word	16176
	.byte	32
	.byte	'Ifx_ASCLIN_KRST1_Bits',0,13,222,2,3
	.word	16069
	.byte	32
	.byte	'Ifx_ASCLIN_KRSTCLR_Bits',0,13,229,2,3
	.word	15960
	.byte	32
	.byte	'Ifx_ASCLIN_LIN_BTIMER_Bits',0,13,236,2,3
	.word	13120
	.byte	32
	.byte	'Ifx_ASCLIN_LIN_CON_Bits',0,13,248,2,3
	.word	12920
	.byte	32
	.byte	'Ifx_ASCLIN_LIN_HTIMER_Bits',0,13,255,2,3
	.word	13234
	.byte	32
	.byte	'Ifx_ASCLIN_OCS_Bits',0,13,137,3,3
	.word	15797
	.byte	32
	.byte	'Ifx_ASCLIN_RXDATA_Bits',0,13,143,3,3
	.word	15488
	.byte	32
	.byte	'Ifx_ASCLIN_RXDATAD_Bits',0,13,149,3,3
	.word	15698
	.byte	32
	.byte	'Ifx_ASCLIN_RXFIFOCON_Bits',0,13,164,3,3
	.word	11670
	.byte	32
	.byte	'Ifx_ASCLIN_TXDATA_Bits',0,13,170,3,3
	.word	15401
	.byte	32
	.byte	'Ifx_ASCLIN_TXFIFOCON_Bits',0,13,184,3,3
	.word	11431
	.byte	32
	.byte	'Ifx_ASCLIN_ACCEN0',0,13,197,3,3
	.word	16926
	.byte	32
	.byte	'Ifx_ASCLIN_ACCEN1',0,13,205,3,3
	.word	16354
	.byte	32
	.byte	'Ifx_ASCLIN_BITCON',0,13,213,3,3
	.word	12106
	.byte	32
	.byte	'Ifx_ASCLIN_BRD',0,13,221,3,3
	.word	12880
	.byte	32
	.byte	'Ifx_ASCLIN_BRG',0,13,229,3,3
	.word	12726
	.byte	32
	.byte	'Ifx_ASCLIN_CLC',0,13,237,3,3
	.word	10971
	.byte	32
	.byte	'Ifx_ASCLIN_CSR',0,13,245,3,3
	.word	15658
	.byte	32
	.byte	'Ifx_ASCLIN_DATCON',0,13,253,3,3
	.word	12568
	.byte	32
	.byte	'Ifx_ASCLIN_FLAGS',0,13,133,4,3
	.word	13868
	.byte	32
	.byte	'Ifx_ASCLIN_FLAGSCLEAR',0,13,141,4,3
	.word	14896
	.byte	32
	.byte	'Ifx_ASCLIN_FLAGSENABLE',0,13,149,4,3
	.word	15361
	.byte	32
	.byte	'Ifx_ASCLIN_FLAGSSET',0,13,157,4,3
	.word	14381
	.byte	32
	.byte	'Ifx_ASCLIN_FRAMECON',0,13,165,4,3
	.word	12371
	.byte	32
	.byte	'Ifx_ASCLIN_ID',0,13,173,4,3
	.word	11391
	.byte	32
	.byte	'Ifx_ASCLIN_IOCR',0,13,181,4,3
	.word	11266
	.byte	32
	.byte	'Ifx_ASCLIN_KRST0',0,13,189,4,3
	.word	16262
	.byte	32
	.byte	'Ifx_ASCLIN_KRST1',0,13,197,4,3
	.word	16136
	.byte	32
	.byte	'Ifx_ASCLIN_KRSTCLR',0,13,205,4,3
	.word	16029
	.byte	32
	.byte	'Ifx_ASCLIN_LIN_BTIMER',0,13,213,4,3
	.word	13194
	.byte	32
	.byte	'Ifx_ASCLIN_LIN_CON',0,13,221,4,3
	.word	13080
	.byte	32
	.byte	'Ifx_ASCLIN_LIN_HTIMER',0,13,229,4,3
	.word	13309
	.byte	32
	.byte	'Ifx_ASCLIN_OCS',0,13,237,4,3
	.word	15920
	.byte	32
	.byte	'Ifx_ASCLIN_RXDATA',0,13,245,4,3
	.word	15535
	.byte	32
	.byte	'Ifx_ASCLIN_RXDATAD',0,13,253,4,3
	.word	15746
	.byte	32
	.byte	'Ifx_ASCLIN_RXFIFOCON',0,13,133,5,3
	.word	11885
	.byte	32
	.byte	'Ifx_ASCLIN_TXDATA',0,13,141,5,3
	.word	15448
	.byte	32
	.byte	'Ifx_ASCLIN_TXFIFOCON',0,13,149,5,3
	.word	11630
	.byte	14
	.word	13349
	.byte	32
	.byte	'Ifx_ASCLIN_LIN',0,13,166,5,3
	.word	28344
	.byte	14
	.word	16966
	.byte	32
	.byte	'Ifx_ASCLIN',0,13,209,5,3
	.word	28373
	.byte	15,21,162,11,9,1,16
	.byte	'IfxScu_WDTCON1_IR_divBy16384',0,0,16
	.byte	'IfxScu_WDTCON1_IR_divBy256',0,1,16
	.byte	'IfxScu_WDTCON1_IR_divBy64',0,2,0,32
	.byte	'IfxScu_WDTCON1_IR',0,21,167,11,3
	.word	28398
	.byte	10
	.byte	'_Ifx_SCU_ACCEN00_Bits',0,4,68,16,4,11
	.byte	'EN0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	596
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	596
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	596
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	596
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	596
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	596
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	596
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	596
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	596
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	596
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	596
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	596
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	596
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	596
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	596
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	596
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	596
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	596
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	596
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	596
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	596
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	596
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_ACCEN00_Bits',0,4,102,3
	.word	28520
	.byte	10
	.byte	'_Ifx_SCU_ACCEN01_Bits',0,4,105,16,4,11
	.byte	'reserved_0',0,4
	.word	421
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN01_Bits',0,4,108,3
	.word	29079
	.byte	10
	.byte	'_Ifx_SCU_ACCEN10_Bits',0,4,111,16,4,11
	.byte	'EN0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	596
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	596
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	596
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	596
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	596
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	596
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	596
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	596
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	596
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	596
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	596
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	596
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	596
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	596
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	596
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	596
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	596
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	596
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	596
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	596
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	596
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	596
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_ACCEN10_Bits',0,4,145,1,3
	.word	29158
	.byte	10
	.byte	'_Ifx_SCU_ACCEN11_Bits',0,4,148,1,16,4,11
	.byte	'reserved_0',0,4
	.word	421
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN11_Bits',0,4,151,1,3
	.word	29718
	.byte	10
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,4,154,1,16,4,11
	.byte	'STM0DIS',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'STM1DIS',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'STM2DIS',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'STM3DIS',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'STM4DIS',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'STM5DIS',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	596
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	421
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,4,164,1,3
	.word	29799
	.byte	10
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,4,167,1,16,4,11
	.byte	'STMDIV',0,1
	.word	596
	.byte	4,4,2,35,0,11
	.byte	'GTMDIV',0,1
	.word	596
	.byte	4,0,2,35,0,11
	.byte	'SRIDIV',0,1
	.word	596
	.byte	4,4,2,35,1,11
	.byte	'LPDIV',0,1
	.word	596
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	596
	.byte	1,0,2,35,1,11
	.byte	'SPBDIV',0,1
	.word	596
	.byte	4,4,2,35,2,11
	.byte	'BBBDIV',0,1
	.word	596
	.byte	4,0,2,35,2,11
	.byte	'FSIDIV',0,1
	.word	596
	.byte	2,6,2,35,3,11
	.byte	'FSI2DIV',0,1
	.word	596
	.byte	2,4,2,35,3,11
	.byte	'CLKSEL',0,1
	.word	596
	.byte	2,2,2,35,3,11
	.byte	'UP',0,1
	.word	596
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	596
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON0_Bits',0,4,181,1,3
	.word	30016
	.byte	10
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,4,184,1,16,4,11
	.byte	'MCANDIV',0,1
	.word	596
	.byte	4,4,2,35,0,11
	.byte	'CLKSELMCAN',0,1
	.word	596
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'PLL1DIVDIS',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'I2CDIV',0,1
	.word	596
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	596
	.byte	4,0,2,35,1,11
	.byte	'MSCDIV',0,1
	.word	596
	.byte	4,4,2,35,2,11
	.byte	'CLKSELMSC',0,1
	.word	596
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	596
	.byte	2,0,2,35,2,11
	.byte	'QSPIDIV',0,1
	.word	596
	.byte	4,4,2,35,3,11
	.byte	'CLKSELQSPI',0,1
	.word	596
	.byte	2,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	596
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	596
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON1_Bits',0,4,199,1,3
	.word	30289
	.byte	10
	.byte	'_Ifx_SCU_CCUCON10_Bits',0,4,202,1,16,4,11
	.byte	'CPU4DIV',0,1
	.word	596
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	421
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON10_Bits',0,4,206,1,3
	.word	30615
	.byte	10
	.byte	'_Ifx_SCU_CCUCON11_Bits',0,4,209,1,16,4,11
	.byte	'CPU5DIV',0,1
	.word	596
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	421
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON11_Bits',0,4,213,1,3
	.word	30717
	.byte	10
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,4,216,1,16,4,11
	.byte	'ASCLINFDIV',0,1
	.word	596
	.byte	4,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	596
	.byte	4,0,2,35,0,11
	.byte	'ASCLINSDIV',0,1
	.word	596
	.byte	4,4,2,35,1,11
	.byte	'CLKSELASCLINS',0,1
	.word	596
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,4
	.word	421
	.byte	10,8,2,35,0,11
	.byte	'EBUPERON',0,1
	.word	596
	.byte	1,7,2,35,3,11
	.byte	'ERAYPERON',0,1
	.word	596
	.byte	1,6,2,35,3,11
	.byte	'HSPDMPERON',0,1
	.word	596
	.byte	1,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	596
	.byte	4,1,2,35,3,11
	.byte	'LCK',0,1
	.word	596
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON2_Bits',0,4,228,1,3
	.word	30819
	.byte	10
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,4,231,1,16,4,11
	.byte	'PLL0MONEN',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'PLL1MONEN',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'PLL2MONEN',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'SPBMONEN',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'BACKMONEN',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	596
	.byte	3,0,2,35,0,11
	.byte	'PLL0MONTST',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'PLL1MONTST',0,1
	.word	596
	.byte	1,6,2,35,1,11
	.byte	'PLL2MONTST',0,1
	.word	596
	.byte	1,5,2,35,1,11
	.byte	'SPBMONTST',0,1
	.word	596
	.byte	1,4,2,35,1,11
	.byte	'BACKMONTST',0,1
	.word	596
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	421
	.byte	11,8,2,35,0,11
	.byte	'reserved_24',0,1
	.word	596
	.byte	6,2,2,35,3,11
	.byte	'UP',0,1
	.word	596
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	596
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON3_Bits',0,4,248,1,3
	.word	31093
	.byte	10
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,4,251,1,16,4,11
	.byte	'LOTHR',0,2
	.word	613
	.byte	12,4,2,35,0,11
	.byte	'UPTHR',0,4
	.word	421
	.byte	12,8,2,35,0,11
	.byte	'MONEN',0,1
	.word	596
	.byte	1,7,2,35,3,11
	.byte	'MONTST',0,1
	.word	596
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	596
	.byte	4,2,2,35,3,11
	.byte	'UP',0,1
	.word	596
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	596
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON4_Bits',0,4,132,2,3
	.word	31462
	.byte	10
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,4,135,2,16,4,11
	.byte	'GETHDIV',0,1
	.word	596
	.byte	4,4,2,35,0,11
	.byte	'MCANHDIV',0,1
	.word	596
	.byte	4,0,2,35,0,11
	.byte	'ADASDIV',0,1
	.word	596
	.byte	4,4,2,35,1,11
	.byte	'reserved_12',0,4
	.word	421
	.byte	18,2,2,35,0,11
	.byte	'UP',0,1
	.word	596
	.byte	1,1,2,35,3,11
	.byte	'LCK',0,1
	.word	596
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CCUCON5_Bits',0,4,143,2,3
	.word	31642
	.byte	10
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,4,146,2,16,4,11
	.byte	'CPU0DIV',0,1
	.word	596
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	421
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON6_Bits',0,4,150,2,3
	.word	31811
	.byte	10
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,4,153,2,16,4,11
	.byte	'CPU1DIV',0,1
	.word	596
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	421
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON7_Bits',0,4,157,2,3
	.word	31911
	.byte	10
	.byte	'_Ifx_SCU_CCUCON8_Bits',0,4,160,2,16,4,11
	.byte	'CPU2DIV',0,1
	.word	596
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	421
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON8_Bits',0,4,164,2,3
	.word	32011
	.byte	10
	.byte	'_Ifx_SCU_CCUCON9_Bits',0,4,167,2,16,4,11
	.byte	'CPU3DIV',0,1
	.word	596
	.byte	6,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	421
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON9_Bits',0,4,171,2,3
	.word	32111
	.byte	10
	.byte	'_Ifx_SCU_CHIPID_Bits',0,4,174,2,16,4,11
	.byte	'CHREV',0,1
	.word	596
	.byte	6,2,2,35,0,11
	.byte	'CHTEC',0,1
	.word	596
	.byte	2,0,2,35,0,11
	.byte	'CHPK',0,1
	.word	596
	.byte	4,4,2,35,1,11
	.byte	'CHID',0,1
	.word	596
	.byte	4,0,2,35,1,11
	.byte	'EEA',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'UCODE',0,1
	.word	596
	.byte	7,0,2,35,2,11
	.byte	'FSIZE',0,1
	.word	596
	.byte	4,4,2,35,3,11
	.byte	'VART',0,1
	.word	596
	.byte	3,1,2,35,3,11
	.byte	'SEC',0,1
	.word	596
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_CHIPID_Bits',0,4,185,2,3
	.word	32211
	.byte	10
	.byte	'_Ifx_SCU_DTSCLIM_Bits',0,4,188,2,16,4,11
	.byte	'LOWER',0,2
	.word	613
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,1
	.word	596
	.byte	1,3,2,35,1,11
	.byte	'BGPOK',0,1
	.word	596
	.byte	1,2,2,35,1,11
	.byte	'EN',0,1
	.word	596
	.byte	1,1,2,35,1,11
	.byte	'LLU',0,1
	.word	596
	.byte	1,0,2,35,1,11
	.byte	'UPPER',0,2
	.word	613
	.byte	12,4,2,35,2,11
	.byte	'INTEN',0,1
	.word	596
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	596
	.byte	1,2,2,35,3,11
	.byte	'INT',0,1
	.word	596
	.byte	1,1,2,35,3,11
	.byte	'UOF',0,1
	.word	596
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_DTSCLIM_Bits',0,4,200,2,3
	.word	32414
	.byte	10
	.byte	'_Ifx_SCU_DTSCSTAT_Bits',0,4,203,2,16,4,11
	.byte	'RESULT',0,2
	.word	613
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	421
	.byte	20,0,2,35,0,0,32
	.byte	'Ifx_SCU_DTSCSTAT_Bits',0,4,207,2,3
	.word	32646
	.byte	10
	.byte	'_Ifx_SCU_EICON0_Bits',0,4,210,2,16,4,11
	.byte	'reserved_0',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'ENDINIT',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'EPW',0,4
	.word	444
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	444
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_SCU_EICON0_Bits',0,4,216,2,3
	.word	32748
	.byte	10
	.byte	'_Ifx_SCU_EICON1_Bits',0,4,219,2,16,4,11
	.byte	'reserved_0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	421
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_EICON1_Bits',0,4,228,2,3
	.word	32876
	.byte	10
	.byte	'_Ifx_SCU_EICR_Bits',0,4,231,2,16,4,11
	.byte	'reserved_0',0,1
	.word	596
	.byte	4,4,2,35,0,11
	.byte	'EXIS0',0,1
	.word	596
	.byte	3,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'FEN0',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'REN0',0,1
	.word	596
	.byte	1,6,2,35,1,11
	.byte	'LDEN0',0,1
	.word	596
	.byte	1,5,2,35,1,11
	.byte	'EIEN0',0,1
	.word	596
	.byte	1,4,2,35,1,11
	.byte	'INP0',0,1
	.word	596
	.byte	3,1,2,35,1,11
	.byte	'reserved_15',0,4
	.word	421
	.byte	5,12,2,35,0,11
	.byte	'EXIS1',0,1
	.word	596
	.byte	3,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	596
	.byte	1,0,2,35,2,11
	.byte	'FEN1',0,1
	.word	596
	.byte	1,7,2,35,3,11
	.byte	'REN1',0,1
	.word	596
	.byte	1,6,2,35,3,11
	.byte	'LDEN1',0,1
	.word	596
	.byte	1,5,2,35,3,11
	.byte	'EIEN1',0,1
	.word	596
	.byte	1,4,2,35,3,11
	.byte	'INP1',0,1
	.word	596
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	596
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_EICR_Bits',0,4,250,2,3
	.word	33065
	.byte	10
	.byte	'_Ifx_SCU_EIFILT_Bits',0,4,253,2,16,4,11
	.byte	'FILRQ0A',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'FILRQ5A',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'FILRQ2A',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'FILRQ3A',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'FILRQ0C',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'FILRQ1C',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'FILRQ3C',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'FILRQ2C',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'FILRQ4A',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'FILRQ6A',0,1
	.word	596
	.byte	1,6,2,35,1,11
	.byte	'FILRQ1A',0,1
	.word	596
	.byte	1,5,2,35,1,11
	.byte	'FILRQ7A',0,1
	.word	596
	.byte	1,4,2,35,1,11
	.byte	'FILRQ6D',0,1
	.word	596
	.byte	1,3,2,35,1,11
	.byte	'FILRQ4D',0,1
	.word	596
	.byte	1,2,2,35,1,11
	.byte	'FILRQ2B',0,1
	.word	596
	.byte	1,1,2,35,1,11
	.byte	'FILRQ3B',0,1
	.word	596
	.byte	1,0,2,35,1,11
	.byte	'FILRQ7C',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	596
	.byte	7,0,2,35,2,11
	.byte	'FILTDIV',0,1
	.word	596
	.byte	4,4,2,35,3,11
	.byte	'DEPTH',0,1
	.word	596
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_EIFILT_Bits',0,4,147,3,3
	.word	33429
	.byte	10
	.byte	'_Ifx_SCU_EIFR_Bits',0,4,150,3,16,4,11
	.byte	'INTF0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'INTF1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'INTF2',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'INTF3',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'INTF4',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'INTF5',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'INTF6',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'INTF7',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	421
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_EIFR_Bits',0,4,161,3,3
	.word	33868
	.byte	10
	.byte	'_Ifx_SCU_EISR_Bits',0,4,164,3,16,4,11
	.byte	'AE',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	613
	.byte	10,0,2,35,0,11
	.byte	'TIM',0,2
	.word	613
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_EISR_Bits',0,4,174,3,3
	.word	34079
	.byte	10
	.byte	'_Ifx_SCU_EMSR_Bits',0,4,177,3,16,4,11
	.byte	'POL',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'MODE',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'ENON',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'PSEL',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,2
	.word	613
	.byte	12,0,2,35,0,11
	.byte	'EMSF',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'SEMSF',0,1
	.word	596
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	613
	.byte	14,0,2,35,2,0,32
	.byte	'Ifx_SCU_EMSR_Bits',0,4,187,3,3
	.word	34255
	.byte	10
	.byte	'_Ifx_SCU_EMSSW_Bits',0,4,190,3,16,4,11
	.byte	'reserved_0',0,4
	.word	421
	.byte	24,8,2,35,0,11
	.byte	'EMSFM',0,1
	.word	596
	.byte	2,6,2,35,3,11
	.byte	'SEMSFM',0,1
	.word	596
	.byte	2,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	596
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_EMSSW_Bits',0,4,196,3,3
	.word	34449
	.byte	10
	.byte	'_Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,4,199,3,16,4,11
	.byte	'reserved_0',0,1
	.word	596
	.byte	7,1,2,35,0,11
	.byte	'EDCON',0,2
	.word	613
	.byte	2,7,2,35,0,11
	.byte	'reserved_9',0,4
	.word	421
	.byte	23,0,2,35,0,0,32
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,4,204,3,3
	.word	34584
	.byte	10
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,4,207,3,16,4,11
	.byte	'ARI',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'ARC',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	421
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_ESROCFG_Bits',0,4,212,3,3
	.word	34720
	.byte	10
	.byte	'_Ifx_SCU_EXTCON_Bits',0,4,215,3,16,4,11
	.byte	'EN0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'SEL0',0,1
	.word	596
	.byte	4,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	613
	.byte	10,0,2,35,0,11
	.byte	'EN1',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'NSEL',0,1
	.word	596
	.byte	1,6,2,35,2,11
	.byte	'SEL1',0,1
	.word	596
	.byte	4,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	596
	.byte	2,0,2,35,2,11
	.byte	'DIV1',0,1
	.word	596
	.byte	8,0,2,35,3,0,32
	.byte	'Ifx_SCU_EXTCON_Bits',0,4,226,3,3
	.word	34831
	.byte	10
	.byte	'_Ifx_SCU_FDR_Bits',0,4,229,3,16,4,11
	.byte	'STEP',0,2
	.word	613
	.byte	10,6,2,35,0,11
	.byte	'reserved_10',0,1
	.word	596
	.byte	4,2,2,35,1,11
	.byte	'DM',0,1
	.word	596
	.byte	2,0,2,35,1,11
	.byte	'RESULT',0,2
	.word	613
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	596
	.byte	5,1,2,35,3,11
	.byte	'DISCLK',0,1
	.word	596
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_FDR_Bits',0,4,237,3,3
	.word	35049
	.byte	10
	.byte	'_Ifx_SCU_FMR_Bits',0,4,240,3,16,4,11
	.byte	'FS0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'FS1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'FS2',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'FS3',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'FS4',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'FS5',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'FS6',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'FS7',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	596
	.byte	8,0,2,35,1,11
	.byte	'FC0',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'FC1',0,1
	.word	596
	.byte	1,6,2,35,2,11
	.byte	'FC2',0,1
	.word	596
	.byte	1,5,2,35,2,11
	.byte	'FC3',0,1
	.word	596
	.byte	1,4,2,35,2,11
	.byte	'FC4',0,1
	.word	596
	.byte	1,3,2,35,2,11
	.byte	'FC5',0,1
	.word	596
	.byte	1,2,2,35,2,11
	.byte	'FC6',0,1
	.word	596
	.byte	1,1,2,35,2,11
	.byte	'FC7',0,1
	.word	596
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	596
	.byte	8,0,2,35,3,0,32
	.byte	'Ifx_SCU_FMR_Bits',0,4,132,4,3
	.word	35212
	.byte	10
	.byte	'_Ifx_SCU_ID_Bits',0,4,135,4,16,4,11
	.byte	'MODREV',0,1
	.word	596
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	596
	.byte	8,0,2,35,1,11
	.byte	'MODNUMBER',0,2
	.word	613
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_ID_Bits',0,4,140,4,3
	.word	35548
	.byte	10
	.byte	'_Ifx_SCU_IGCR_Bits',0,4,143,4,16,4,11
	.byte	'IPEN00',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'IPEN01',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'IPEN02',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'IPEN03',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'IPEN04',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'IPEN05',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'IPEN06',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'IPEN07',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	596
	.byte	5,3,2,35,1,11
	.byte	'GEEN0',0,1
	.word	596
	.byte	1,2,2,35,1,11
	.byte	'IGP0',0,1
	.word	596
	.byte	2,0,2,35,1,11
	.byte	'IPEN10',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'IPEN11',0,1
	.word	596
	.byte	1,6,2,35,2,11
	.byte	'IPEN12',0,1
	.word	596
	.byte	1,5,2,35,2,11
	.byte	'IPEN13',0,1
	.word	596
	.byte	1,4,2,35,2,11
	.byte	'IPEN14',0,1
	.word	596
	.byte	1,3,2,35,2,11
	.byte	'IPEN15',0,1
	.word	596
	.byte	1,2,2,35,2,11
	.byte	'IPEN16',0,1
	.word	596
	.byte	1,1,2,35,2,11
	.byte	'IPEN17',0,1
	.word	596
	.byte	1,0,2,35,2,11
	.byte	'reserved_24',0,1
	.word	596
	.byte	5,3,2,35,3,11
	.byte	'GEEN1',0,1
	.word	596
	.byte	1,2,2,35,3,11
	.byte	'IGP1',0,1
	.word	596
	.byte	2,0,2,35,3,0,32
	.byte	'Ifx_SCU_IGCR_Bits',0,4,167,4,3
	.word	35655
	.byte	10
	.byte	'_Ifx_SCU_IN_Bits',0,4,170,4,16,4,11
	.byte	'P0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	421
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_IN_Bits',0,4,175,4,3
	.word	36107
	.byte	10
	.byte	'_Ifx_SCU_IOCR_Bits',0,4,178,4,16,4,11
	.byte	'reserved_0',0,1
	.word	596
	.byte	4,4,2,35,0,11
	.byte	'PC0',0,1
	.word	596
	.byte	4,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	596
	.byte	4,4,2,35,1,11
	.byte	'PC1',0,1
	.word	596
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	613
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_IOCR_Bits',0,4,185,4,3
	.word	36206
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,4,188,4,16,4,11
	.byte	'LBISTREQ',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'LBISTRES',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'PATTERNS',0,4
	.word	421
	.byte	18,12,2,35,0,11
	.byte	'reserved_20',0,2
	.word	613
	.byte	8,4,2,35,2,11
	.byte	'LBISTDONE',0,1
	.word	596
	.byte	1,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	596
	.byte	1,2,2,35,3,11
	.byte	'LBISTERRINJ',0,1
	.word	596
	.byte	1,1,2,35,3,11
	.byte	'LBISTREQRED',0,1
	.word	596
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,4,198,4,3
	.word	36356
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,4,201,4,16,4,11
	.byte	'SEED',0,4
	.word	421
	.byte	19,13,2,35,0,11
	.byte	'reserved_19',0,1
	.word	596
	.byte	5,0,2,35,2,11
	.byte	'SPLITSH',0,1
	.word	596
	.byte	3,5,2,35,3,11
	.byte	'BODY',0,1
	.word	596
	.byte	1,4,2,35,3,11
	.byte	'LBISTFREQU',0,1
	.word	596
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,4,208,4,3
	.word	36594
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,4,211,4,16,4,11
	.byte	'LENGTH',0,2
	.word	613
	.byte	12,4,2,35,0,11
	.byte	'reserved_12',0,4
	.word	421
	.byte	20,0,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,4,215,4,3
	.word	36755
	.byte	10
	.byte	'_Ifx_SCU_LBISTCTRL3_Bits',0,4,218,4,16,4,11
	.byte	'SIGNATURE',0,4
	.word	421
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL3_Bits',0,4,221,4,3
	.word	36861
	.byte	10
	.byte	'_Ifx_SCU_LCLCON0_Bits',0,4,224,4,16,4,11
	.byte	'LS2',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	613
	.byte	14,1,2,35,0,11
	.byte	'LSEN2',0,1
	.word	596
	.byte	1,0,2,35,1,11
	.byte	'LS0',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	613
	.byte	14,1,2,35,2,11
	.byte	'LSEN0',0,1
	.word	596
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_LCLCON0_Bits',0,4,232,4,3
	.word	36947
	.byte	10
	.byte	'_Ifx_SCU_LCLCON1_Bits',0,4,235,4,16,4,11
	.byte	'LS3',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	613
	.byte	14,1,2,35,0,11
	.byte	'LSEN3',0,1
	.word	596
	.byte	1,0,2,35,1,11
	.byte	'LS1',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,2
	.word	613
	.byte	14,1,2,35,2,11
	.byte	'LSEN1',0,1
	.word	596
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_LCLCON1_Bits',0,4,243,4,3
	.word	37115
	.byte	10
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,4,246,4,16,4,11
	.byte	'LCLT0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'LCLT1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'LCLT2',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'LCLT3',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'LCLT4',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'LCLT5',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	613
	.byte	10,0,2,35,0,11
	.byte	'PLCLT0',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'PLCLT1',0,1
	.word	596
	.byte	1,6,2,35,2,11
	.byte	'PLCLT2',0,1
	.word	596
	.byte	1,5,2,35,2,11
	.byte	'PLCLT3',0,1
	.word	596
	.byte	1,4,2,35,2,11
	.byte	'PLCLT4',0,1
	.word	596
	.byte	1,3,2,35,2,11
	.byte	'PLCLT5',0,1
	.word	596
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	613
	.byte	10,0,2,35,2,0,32
	.byte	'Ifx_SCU_LCLTEST_Bits',0,4,134,5,3
	.word	37283
	.byte	10
	.byte	'_Ifx_SCU_MANID_Bits',0,4,137,5,16,4,11
	.byte	'DEPT',0,1
	.word	596
	.byte	5,3,2,35,0,11
	.byte	'MANUF',0,2
	.word	613
	.byte	11,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	613
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_MANID_Bits',0,4,142,5,3
	.word	37597
	.byte	10
	.byte	'_Ifx_SCU_OMR_Bits',0,4,145,5,16,4,11
	.byte	'PS0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'PS1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,2
	.word	613
	.byte	14,0,2,35,0,11
	.byte	'PCL0',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'PCL1',0,1
	.word	596
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,2
	.word	613
	.byte	14,0,2,35,2,0,32
	.byte	'Ifx_SCU_OMR_Bits',0,4,153,5,3
	.word	37708
	.byte	10
	.byte	'_Ifx_SCU_OSCCON_Bits',0,4,156,5,16,4,11
	.byte	'reserved_0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'PLLLV',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'OSCRES',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'GAINSEL',0,1
	.word	596
	.byte	2,3,2,35,0,11
	.byte	'MODE',0,1
	.word	596
	.byte	2,1,2,35,0,11
	.byte	'SHBY',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'PLLHV',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'HYSEN',0,1
	.word	596
	.byte	1,6,2,35,1,11
	.byte	'HYSCTL',0,1
	.word	596
	.byte	2,4,2,35,1,11
	.byte	'AMPCTL',0,1
	.word	596
	.byte	2,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	596
	.byte	2,0,2,35,1,11
	.byte	'OSCVAL',0,1
	.word	596
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	596
	.byte	2,1,2,35,2,11
	.byte	'APREN',0,1
	.word	596
	.byte	1,0,2,35,2,11
	.byte	'CAP0EN',0,1
	.word	596
	.byte	1,7,2,35,3,11
	.byte	'CAP1EN',0,1
	.word	596
	.byte	1,6,2,35,3,11
	.byte	'CAP2EN',0,1
	.word	596
	.byte	1,5,2,35,3,11
	.byte	'CAP3EN',0,1
	.word	596
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	596
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_OSCCON_Bits',0,4,177,5,3
	.word	37866
	.byte	10
	.byte	'_Ifx_SCU_OUT_Bits',0,4,180,5,16,4,11
	.byte	'P0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'P1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	421
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_OUT_Bits',0,4,185,5,3
	.word	38277
	.byte	10
	.byte	'_Ifx_SCU_OVCCON_Bits',0,4,188,5,16,4,11
	.byte	'CSEL0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'CSEL1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'CSEL2',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'CSEL3',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'CSEL4',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'CSEL5',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	613
	.byte	10,0,2,35,0,11
	.byte	'OVSTRT',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'OVSTP',0,1
	.word	596
	.byte	1,6,2,35,2,11
	.byte	'DCINVAL',0,1
	.word	596
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	596
	.byte	5,0,2,35,2,11
	.byte	'OVCONF',0,1
	.word	596
	.byte	1,7,2,35,3,11
	.byte	'POVCONF',0,1
	.word	596
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	596
	.byte	6,0,2,35,3,0,32
	.byte	'Ifx_SCU_OVCCON_Bits',0,4,204,5,3
	.word	38378
	.byte	10
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,4,207,5,16,4,11
	.byte	'OVEN0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'OVEN1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'OVEN2',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'OVEN3',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'OVEN4',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'OVEN5',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	421
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,4,216,5,3
	.word	38696
	.byte	10
	.byte	'_Ifx_SCU_PDISC_Bits',0,4,219,5,16,4,11
	.byte	'PDIS0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'PDIS1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	421
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDISC_Bits',0,4,224,5,3
	.word	38883
	.byte	10
	.byte	'_Ifx_SCU_PDR_Bits',0,4,227,5,16,4,11
	.byte	'PD0',0,1
	.word	596
	.byte	2,6,2,35,0,11
	.byte	'PL0',0,1
	.word	596
	.byte	2,4,2,35,0,11
	.byte	'PD1',0,1
	.word	596
	.byte	2,2,2,35,0,11
	.byte	'PL1',0,1
	.word	596
	.byte	2,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	421
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDR_Bits',0,4,234,5,3
	.word	38994
	.byte	10
	.byte	'_Ifx_SCU_PDRR_Bits',0,4,237,5,16,4,11
	.byte	'PDR0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'PDR1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'PDR2',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'PDR3',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'PDR4',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'PDR5',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'PDR6',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'PDR7',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	421
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_PDRR_Bits',0,4,248,5,3
	.word	39127
	.byte	10
	.byte	'_Ifx_SCU_PERPLLCON0_Bits',0,4,251,5,16,4,11
	.byte	'DIVBY',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,2
	.word	613
	.byte	8,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	596
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	596
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	596
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	596
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	596
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	596
	.byte	5,0,2,35,3,0,32
	.byte	'Ifx_SCU_PERPLLCON0_Bits',0,4,134,6,3
	.word	39330
	.byte	10
	.byte	'_Ifx_SCU_PERPLLCON1_Bits',0,4,137,6,16,4,11
	.byte	'K2DIV',0,1
	.word	596
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	596
	.byte	5,0,2,35,0,11
	.byte	'K3DIV',0,1
	.word	596
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	421
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PERPLLCON1_Bits',0,4,143,6,3
	.word	39570
	.byte	10
	.byte	'_Ifx_SCU_PERPLLSTAT_Bits',0,4,146,6,16,4,11
	.byte	'reserved_0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'LOCK',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'K3RDY',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	421
	.byte	25,0,2,35,0,0,32
	.byte	'Ifx_SCU_PERPLLSTAT_Bits',0,4,156,6,3
	.word	39714
	.byte	10
	.byte	'_Ifx_SCU_PMCSR0_Bits',0,4,159,6,16,4,11
	.byte	'REQSLP',0,1
	.word	596
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	596
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	596
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	421
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR0_Bits',0,4,165,6,3
	.word	39936
	.byte	10
	.byte	'_Ifx_SCU_PMCSR1_Bits',0,4,168,6,16,4,11
	.byte	'REQSLP',0,1
	.word	596
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	596
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	596
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	421
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR1_Bits',0,4,174,6,3
	.word	40072
	.byte	10
	.byte	'_Ifx_SCU_PMCSR2_Bits',0,4,177,6,16,4,11
	.byte	'REQSLP',0,1
	.word	596
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	596
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	596
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	421
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR2_Bits',0,4,183,6,3
	.word	40208
	.byte	10
	.byte	'_Ifx_SCU_PMCSR3_Bits',0,4,186,6,16,4,11
	.byte	'REQSLP',0,1
	.word	596
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	596
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	596
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	421
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR3_Bits',0,4,192,6,3
	.word	40344
	.byte	10
	.byte	'_Ifx_SCU_PMCSR4_Bits',0,4,195,6,16,4,11
	.byte	'REQSLP',0,1
	.word	596
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	596
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	596
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	421
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR4_Bits',0,4,201,6,3
	.word	40480
	.byte	10
	.byte	'_Ifx_SCU_PMCSR5_Bits',0,4,204,6,16,4,11
	.byte	'REQSLP',0,1
	.word	596
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	596
	.byte	6,0,2,35,0,11
	.byte	'PMST',0,1
	.word	596
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,4
	.word	421
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR5_Bits',0,4,210,6,3
	.word	40616
	.byte	10
	.byte	'_Ifx_SCU_PMSTAT0_Bits',0,4,213,6,16,4,11
	.byte	'CPU0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'CPU1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'CPU2',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'CPU3',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'CPU4',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'CPU5',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	613
	.byte	10,0,2,35,0,11
	.byte	'CPU0LS',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'CPU1LS',0,1
	.word	596
	.byte	1,6,2,35,2,11
	.byte	'CPU2LS',0,1
	.word	596
	.byte	1,5,2,35,2,11
	.byte	'CPU3LS',0,1
	.word	596
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,2
	.word	613
	.byte	12,0,2,35,2,0,32
	.byte	'Ifx_SCU_PMSTAT0_Bits',0,4,227,6,3
	.word	40752
	.byte	10
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,4,230,6,16,4,11
	.byte	'reserved_0',0,1
	.word	596
	.byte	8,0,2,35,0,11
	.byte	'CPUIDLSEL',0,1
	.word	596
	.byte	3,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	596
	.byte	1,4,2,35,1,11
	.byte	'IRADIS',0,1
	.word	596
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,4
	.word	421
	.byte	11,8,2,35,0,11
	.byte	'CPUSEL',0,1
	.word	596
	.byte	3,5,2,35,3,11
	.byte	'STBYEVEN',0,1
	.word	596
	.byte	1,4,2,35,3,11
	.byte	'STBYEV',0,1
	.word	596
	.byte	3,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	596
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,4,241,6,3
	.word	41024
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR0_Bits',0,4,244,6,16,4,11
	.byte	'LJTEN',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'LJTOVEN',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'LJTOVIEN',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'LJTSTRT',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'LJTSTP',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'LJTCLR',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	613
	.byte	6,4,2,35,0,11
	.byte	'SDSTEP',0,1
	.word	596
	.byte	4,0,2,35,1,11
	.byte	'VDTEN',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'VDTOVEN',0,1
	.word	596
	.byte	1,6,2,35,2,11
	.byte	'VDTOVIEN',0,1
	.word	596
	.byte	1,5,2,35,2,11
	.byte	'VDTSTRT',0,1
	.word	596
	.byte	1,4,2,35,2,11
	.byte	'VDTSTP',0,1
	.word	596
	.byte	1,3,2,35,2,11
	.byte	'VDTCLR',0,1
	.word	596
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	613
	.byte	7,3,2,35,2,11
	.byte	'LPSLPEN',0,1
	.word	596
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	596
	.byte	2,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMTRCSR0_Bits',0,4,135,7,3
	.word	41269
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR1_Bits',0,4,138,7,16,4,11
	.byte	'LJTCV',0,2
	.word	613
	.byte	16,0,2,35,0,11
	.byte	'VDTCV',0,2
	.word	613
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	596
	.byte	6,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMTRCSR1_Bits',0,4,143,7,3
	.word	41657
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR2_Bits',0,4,146,7,16,4,11
	.byte	'LDJMPREQ',0,1
	.word	596
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	596
	.byte	2,4,2,35,0,11
	.byte	'LJTRUN',0,1
	.word	596
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	596
	.byte	2,0,2,35,0,11
	.byte	'LJTOV',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	596
	.byte	3,4,2,35,1,11
	.byte	'LJTOVCLR',0,1
	.word	596
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	596
	.byte	3,0,2,35,1,11
	.byte	'LJTCNT',0,2
	.word	613
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_PMTRCSR2_Bits',0,4,157,7,3
	.word	41775
	.byte	10
	.byte	'_Ifx_SCU_PMTRCSR3_Bits',0,4,160,7,16,4,11
	.byte	'VDROOPREQ',0,1
	.word	596
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	596
	.byte	2,4,2,35,0,11
	.byte	'VDTRUN',0,1
	.word	596
	.byte	2,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	596
	.byte	2,0,2,35,0,11
	.byte	'VDTOV',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	596
	.byte	3,4,2,35,1,11
	.byte	'VDTOVCLR',0,1
	.word	596
	.byte	1,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	596
	.byte	3,0,2,35,1,11
	.byte	'VDTCNT',0,2
	.word	613
	.byte	10,6,2,35,2,11
	.byte	'reserved_26',0,1
	.word	596
	.byte	6,0,2,35,3,0,32
	.byte	'Ifx_SCU_PMTRCSR3_Bits',0,4,172,7,3
	.word	42018
	.byte	10
	.byte	'_Ifx_SCU_RSTCON_Bits',0,4,175,7,16,4,11
	.byte	'ESR0',0,1
	.word	596
	.byte	2,6,2,35,0,11
	.byte	'ESR1',0,1
	.word	596
	.byte	2,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	596
	.byte	2,2,2,35,0,11
	.byte	'SMU',0,1
	.word	596
	.byte	2,0,2,35,0,11
	.byte	'SW',0,1
	.word	596
	.byte	2,6,2,35,1,11
	.byte	'STM0',0,1
	.word	596
	.byte	2,4,2,35,1,11
	.byte	'STM1',0,1
	.word	596
	.byte	2,2,2,35,1,11
	.byte	'STM2',0,1
	.word	596
	.byte	2,0,2,35,1,11
	.byte	'STM3',0,1
	.word	596
	.byte	2,6,2,35,2,11
	.byte	'STM4',0,1
	.word	596
	.byte	2,4,2,35,2,11
	.byte	'STM5',0,1
	.word	596
	.byte	2,2,2,35,2,11
	.byte	'reserved_22',0,2
	.word	613
	.byte	10,0,2,35,2,0,32
	.byte	'Ifx_SCU_RSTCON_Bits',0,4,189,7,3
	.word	42285
	.byte	10
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,4,192,7,16,4,11
	.byte	'FRTO',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'CLRC',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'CSSX',0,2
	.word	613
	.byte	6,3,2,35,0,11
	.byte	'reserved_13',0,1
	.word	596
	.byte	1,2,2,35,1,11
	.byte	'reserved_14',0,1
	.word	596
	.byte	1,1,2,35,1,11
	.byte	'reserved_15',0,1
	.word	596
	.byte	1,0,2,35,1,11
	.byte	'USRINFO',0,2
	.word	613
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_RSTCON2_Bits',0,4,206,7,3
	.word	42544
	.byte	10
	.byte	'_Ifx_SCU_RSTCON3_Bits',0,4,209,7,16,4,11
	.byte	'reserved_0',0,4
	.word	421
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_RSTCON3_Bits',0,4,212,7,3
	.word	42849
	.byte	10
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,4,215,7,16,4,11
	.byte	'ESR0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'ESR1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'SMU',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'SW',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'STM0',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'STM1',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'STM2',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'STM3',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'STM4',0,1
	.word	596
	.byte	1,6,2,35,1,11
	.byte	'STM5',0,1
	.word	596
	.byte	1,5,2,35,1,11
	.byte	'reserved_11',0,1
	.word	596
	.byte	5,0,2,35,1,11
	.byte	'PORST',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	596
	.byte	1,6,2,35,2,11
	.byte	'CB0',0,1
	.word	596
	.byte	1,5,2,35,2,11
	.byte	'CB1',0,1
	.word	596
	.byte	1,4,2,35,2,11
	.byte	'CB3',0,1
	.word	596
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	596
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	596
	.byte	1,1,2,35,2,11
	.byte	'EVRC',0,1
	.word	596
	.byte	1,0,2,35,2,11
	.byte	'EVR33',0,1
	.word	596
	.byte	1,7,2,35,3,11
	.byte	'SWD',0,1
	.word	596
	.byte	1,6,2,35,3,11
	.byte	'HSMS',0,1
	.word	596
	.byte	1,5,2,35,3,11
	.byte	'HSMA',0,1
	.word	596
	.byte	1,4,2,35,3,11
	.byte	'STBYR',0,1
	.word	596
	.byte	1,3,2,35,3,11
	.byte	'LBPORST',0,1
	.word	596
	.byte	1,2,2,35,3,11
	.byte	'LBTERM',0,1
	.word	596
	.byte	1,1,2,35,3,11
	.byte	'reserved_31',0,1
	.word	596
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,4,245,7,3
	.word	42930
	.byte	10
	.byte	'_Ifx_SCU_SEICON0_Bits',0,4,248,7,16,4,11
	.byte	'reserved_0',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'ENDINIT',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'EPW',0,4
	.word	444
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	444
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_SCU_SEICON0_Bits',0,4,254,7,3
	.word	43479
	.byte	10
	.byte	'_Ifx_SCU_SEICON1_Bits',0,4,129,8,16,4,11
	.byte	'reserved_0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,4
	.word	421
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_SCU_SEICON1_Bits',0,4,138,8,3
	.word	43609
	.byte	10
	.byte	'_Ifx_SCU_SEISR_Bits',0,4,141,8,16,4,11
	.byte	'AE',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,2
	.word	613
	.byte	10,0,2,35,0,11
	.byte	'TIM',0,2
	.word	613
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_SEISR_Bits',0,4,151,8,3
	.word	43800
	.byte	10
	.byte	'_Ifx_SCU_STCON_Bits',0,4,154,8,16,4,11
	.byte	'reserved_0',0,2
	.word	613
	.byte	13,3,2,35,0,11
	.byte	'SFCBAE',0,1
	.word	596
	.byte	1,2,2,35,1,11
	.byte	'CFCBAE',0,1
	.word	596
	.byte	1,1,2,35,1,11
	.byte	'STP',0,1
	.word	596
	.byte	1,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	613
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_STCON_Bits',0,4,161,8,3
	.word	43978
	.byte	10
	.byte	'_Ifx_SCU_STMEM1_Bits',0,4,164,8,16,4,11
	.byte	'MEM',0,4
	.word	421
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM1_Bits',0,4,167,8,3
	.word	44129
	.byte	10
	.byte	'_Ifx_SCU_STMEM2_Bits',0,4,170,8,16,4,11
	.byte	'MEM',0,4
	.word	421
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM2_Bits',0,4,173,8,3
	.word	44201
	.byte	10
	.byte	'_Ifx_SCU_STMEM3_Bits',0,4,176,8,16,4,11
	.byte	'MEM',0,4
	.word	421
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM3_Bits',0,4,179,8,3
	.word	44273
	.byte	10
	.byte	'_Ifx_SCU_STMEM4_Bits',0,4,182,8,16,4,11
	.byte	'MEM',0,4
	.word	421
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM4_Bits',0,4,185,8,3
	.word	44345
	.byte	10
	.byte	'_Ifx_SCU_STMEM5_Bits',0,4,188,8,16,4,11
	.byte	'MEM',0,4
	.word	421
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM5_Bits',0,4,191,8,3
	.word	44417
	.byte	10
	.byte	'_Ifx_SCU_STMEM6_Bits',0,4,194,8,16,4,11
	.byte	'MEM',0,4
	.word	421
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM6_Bits',0,4,197,8,3
	.word	44489
	.byte	10
	.byte	'_Ifx_SCU_STSTAT_Bits',0,4,200,8,16,4,11
	.byte	'HWCFG',0,1
	.word	596
	.byte	8,0,2,35,0,11
	.byte	'FTM',0,1
	.word	596
	.byte	7,1,2,35,1,11
	.byte	'MODE',0,1
	.word	596
	.byte	1,0,2,35,1,11
	.byte	'FCBAE',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'LUDIS',0,1
	.word	596
	.byte	1,6,2,35,2,11
	.byte	'reserved_18',0,1
	.word	596
	.byte	1,5,2,35,2,11
	.byte	'TRSTL',0,1
	.word	596
	.byte	1,4,2,35,2,11
	.byte	'SPDEN',0,1
	.word	596
	.byte	1,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	596
	.byte	1,2,2,35,2,11
	.byte	'reserved_22',0,1
	.word	596
	.byte	1,1,2,35,2,11
	.byte	'reserved_23',0,1
	.word	596
	.byte	1,0,2,35,2,11
	.byte	'RAMINT',0,1
	.word	596
	.byte	1,7,2,35,3,11
	.byte	'reserved_25',0,1
	.word	596
	.byte	3,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	596
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_STSTAT_Bits',0,4,216,8,3
	.word	44561
	.byte	10
	.byte	'_Ifx_SCU_SWAPCTRL_Bits',0,4,219,8,16,4,11
	.byte	'ADDRCFG',0,1
	.word	596
	.byte	2,6,2,35,0,11
	.byte	'SPARE',0,2
	.word	613
	.byte	14,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	613
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_SWAPCTRL_Bits',0,4,224,8,3
	.word	44890
	.byte	10
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,4,227,8,16,4,11
	.byte	'reserved_0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'SWRSTREQ',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	596
	.byte	6,0,2,35,0,11
	.byte	'reserved_8',0,1
	.word	596
	.byte	8,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	613
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,4,234,8,3
	.word	45010
	.byte	10
	.byte	'_Ifx_SCU_SYSCON_Bits',0,4,237,8,16,4,11
	.byte	'CCTRIG0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'RAMINTM',0,1
	.word	596
	.byte	2,4,2,35,0,11
	.byte	'SETLUDIS',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'DDC',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'reserved_9',0,1
	.word	596
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	613
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_SYSCON_Bits',0,4,249,8,3
	.word	45180
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON0_Bits',0,4,252,8,16,4,11
	.byte	'reserved_0',0,1
	.word	596
	.byte	2,6,2,35,0,11
	.byte	'MODEN',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,2
	.word	613
	.byte	6,7,2,35,0,11
	.byte	'NDIV',0,1
	.word	596
	.byte	7,0,2,35,1,11
	.byte	'PLLPWD',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'reserved_17',0,1
	.word	596
	.byte	1,6,2,35,2,11
	.byte	'RESLD',0,1
	.word	596
	.byte	1,5,2,35,2,11
	.byte	'reserved_19',0,1
	.word	596
	.byte	5,0,2,35,2,11
	.byte	'PDIV',0,1
	.word	596
	.byte	3,5,2,35,3,11
	.byte	'reserved_27',0,1
	.word	596
	.byte	3,2,2,35,3,11
	.byte	'INSEL',0,1
	.word	596
	.byte	2,0,2,35,3,0,32
	.byte	'Ifx_SCU_SYSPLLCON0_Bits',0,4,137,9,3
	.word	45443
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON1_Bits',0,4,140,9,16,4,11
	.byte	'K2DIV',0,1
	.word	596
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	421
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_SCU_SYSPLLCON1_Bits',0,4,144,9,3
	.word	45722
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLCON2_Bits',0,4,147,9,16,4,11
	.byte	'MODCFG',0,2
	.word	613
	.byte	16,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	613
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_SYSPLLCON2_Bits',0,4,151,9,3
	.word	45826
	.byte	10
	.byte	'_Ifx_SCU_SYSPLLSTAT_Bits',0,4,154,9,16,4,11
	.byte	'reserved_0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'PWDSTAT',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'LOCK',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	596
	.byte	2,3,2,35,0,11
	.byte	'K2RDY',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'reserved_6',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'MODRUN',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'reserved_8',0,4
	.word	421
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SCU_SYSPLLSTAT_Bits',0,4,164,9,3
	.word	45932
	.byte	10
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,4,167,9,16,4,11
	.byte	'ESR0T',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	421
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,4,174,9,3
	.word	46155
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS0_Bits',0,4,177,9,16,4,11
	.byte	'CPU0ESR0T',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'CPU0ESR1T',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'CPU0TRAP2T',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'CPU0SMUT',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	596
	.byte	4,0,2,35,0,11
	.byte	'CPU1ESR0T',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'CPU1ESR1T',0,1
	.word	596
	.byte	1,6,2,35,1,11
	.byte	'CPU1TRAP2T',0,1
	.word	596
	.byte	1,5,2,35,1,11
	.byte	'CPU1SMUT',0,1
	.word	596
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	596
	.byte	4,0,2,35,1,11
	.byte	'CPU2ESR0T',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'CPU2ESR1T',0,1
	.word	596
	.byte	1,6,2,35,2,11
	.byte	'CPU2TRAP2T',0,1
	.word	596
	.byte	1,5,2,35,2,11
	.byte	'CPU2SMUT',0,1
	.word	596
	.byte	1,4,2,35,2,11
	.byte	'reserved_20',0,1
	.word	596
	.byte	4,0,2,35,2,11
	.byte	'CPU3ESR0T',0,1
	.word	596
	.byte	1,7,2,35,3,11
	.byte	'CPU3ESR1T',0,1
	.word	596
	.byte	1,6,2,35,3,11
	.byte	'CPU3TRAP2T',0,1
	.word	596
	.byte	1,5,2,35,3,11
	.byte	'CPU3SMUT',0,1
	.word	596
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	596
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SCU_TRAPDIS0_Bits',0,4,199,9,3
	.word	46303
	.byte	10
	.byte	'_Ifx_SCU_TRAPDIS1_Bits',0,4,202,9,16,4,11
	.byte	'CPU4ESR0T',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'CPU4ESR1T',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'CPU4TRAP2T',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'CPU4SMUT',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	596
	.byte	4,0,2,35,0,11
	.byte	'CPU5ESR0T',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'CPU5ESR1T',0,1
	.word	596
	.byte	1,6,2,35,1,11
	.byte	'CPU5TRAP2T',0,1
	.word	596
	.byte	1,5,2,35,1,11
	.byte	'CPU5SMUT',0,1
	.word	596
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	596
	.byte	4,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	613
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_TRAPDIS1_Bits',0,4,215,9,3
	.word	46791
	.byte	10
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,4,218,9,16,4,11
	.byte	'ESR0T',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	421
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSET_Bits',0,4,225,9,3
	.word	47088
	.byte	10
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,4,228,9,16,4,11
	.byte	'ESR0T',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'ESR1T',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'TRAP2',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'SMUT',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	421
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,4,235,9,3
	.word	47236
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,4,244,9,3
	.word	460
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,4,132,10,3
	.word	635
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,4,148,10,3
	.word	901
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,4,151,10,16,4,11
	.byte	'ENDINIT',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'LCK',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'PW',0,4
	.word	444
	.byte	14,16,2,35,0,11
	.byte	'REL',0,4
	.word	444
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,4,157,10,3
	.word	47486
	.byte	10
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,4,160,10,16,4,11
	.byte	'CLRIRF',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'IR0',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'DR',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'IR1',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'UR',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'PAR',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'TCR',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'TCTR',0,1
	.word	596
	.byte	7,0,2,35,1,11
	.byte	'reserved_16',0,2
	.word	613
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,4,173,10,3
	.word	47612
	.byte	10
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,4,176,10,16,4,11
	.byte	'AE',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'OE',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'IS0',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'DS',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'TO',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'IS1',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'US',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'PAS',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'TCS',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'TCT',0,1
	.word	596
	.byte	7,0,2,35,1,11
	.byte	'TIM',0,2
	.word	613
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,4,189,10,3
	.word	47864
	.byte	12,4,197,10,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28520
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN00',0,4,202,10,3
	.word	48083
	.byte	12,4,205,10,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29079
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN01',0,4,210,10,3
	.word	48148
	.byte	12,4,213,10,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29158
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN10',0,4,218,10,3
	.word	48213
	.byte	12,4,221,10,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29718
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ACCEN11',0,4,226,10,3
	.word	48278
	.byte	12,4,229,10,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29799
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ARSTDIS',0,4,234,10,3
	.word	48343
	.byte	12,4,237,10,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30016
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON0',0,4,242,10,3
	.word	48408
	.byte	12,4,245,10,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30289
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON1',0,4,250,10,3
	.word	48473
	.byte	12,4,253,10,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30615
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON10',0,4,130,11,3
	.word	48538
	.byte	12,4,133,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30717
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON11',0,4,138,11,3
	.word	48604
	.byte	12,4,141,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	30819
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON2',0,4,146,11,3
	.word	48670
	.byte	12,4,149,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31093
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON3',0,4,154,11,3
	.word	48735
	.byte	12,4,157,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31462
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON4',0,4,162,11,3
	.word	48800
	.byte	12,4,165,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31642
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON5',0,4,170,11,3
	.word	48865
	.byte	12,4,173,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31811
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON6',0,4,178,11,3
	.word	48930
	.byte	12,4,181,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	31911
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON7',0,4,186,11,3
	.word	48995
	.byte	12,4,189,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32011
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON8',0,4,194,11,3
	.word	49060
	.byte	12,4,197,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32111
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CCUCON9',0,4,202,11,3
	.word	49125
	.byte	12,4,205,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32211
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_CHIPID',0,4,210,11,3
	.word	49190
	.byte	12,4,213,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32414
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_DTSCLIM',0,4,218,11,3
	.word	49254
	.byte	12,4,221,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32646
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_DTSCSTAT',0,4,226,11,3
	.word	49319
	.byte	12,4,229,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32748
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EICON0',0,4,234,11,3
	.word	49385
	.byte	12,4,237,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	32876
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EICON1',0,4,242,11,3
	.word	49449
	.byte	12,4,245,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33065
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EICR',0,4,250,11,3
	.word	49513
	.byte	12,4,253,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33429
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EIFILT',0,4,130,12,3
	.word	49575
	.byte	12,4,133,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	33868
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EIFR',0,4,138,12,3
	.word	49639
	.byte	12,4,141,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34079
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EISR',0,4,146,12,3
	.word	49701
	.byte	12,4,149,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34255
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EMSR',0,4,154,12,3
	.word	49763
	.byte	12,4,157,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34449
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EMSSW',0,4,162,12,3
	.word	49825
	.byte	12,4,165,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34584
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX',0,4,170,12,3
	.word	49888
	.byte	12,4,173,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34720
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ESROCFG',0,4,178,12,3
	.word	49961
	.byte	12,4,181,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	34831
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_EXTCON',0,4,186,12,3
	.word	50026
	.byte	12,4,189,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35049
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_FDR',0,4,194,12,3
	.word	50090
	.byte	12,4,197,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35212
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_FMR',0,4,202,12,3
	.word	50151
	.byte	12,4,205,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35548
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_ID',0,4,210,12,3
	.word	50212
	.byte	12,4,213,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	35655
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IGCR',0,4,218,12,3
	.word	50272
	.byte	12,4,221,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36107
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IN',0,4,226,12,3
	.word	50334
	.byte	12,4,229,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36206
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_IOCR',0,4,234,12,3
	.word	50394
	.byte	12,4,237,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36356
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL0',0,4,242,12,3
	.word	50456
	.byte	12,4,245,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36594
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL1',0,4,250,12,3
	.word	50524
	.byte	12,4,253,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36755
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL2',0,4,130,13,3
	.word	50592
	.byte	12,4,133,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36861
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LBISTCTRL3',0,4,138,13,3
	.word	50660
	.byte	12,4,141,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	36947
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LCLCON0',0,4,146,13,3
	.word	50728
	.byte	12,4,149,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37115
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LCLCON1',0,4,154,13,3
	.word	50793
	.byte	12,4,157,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37283
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_LCLTEST',0,4,162,13,3
	.word	50858
	.byte	12,4,165,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37597
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_MANID',0,4,170,13,3
	.word	50923
	.byte	12,4,173,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37708
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OMR',0,4,178,13,3
	.word	50986
	.byte	12,4,181,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	37866
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OSCCON',0,4,186,13,3
	.word	51047
	.byte	12,4,189,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38277
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OUT',0,4,194,13,3
	.word	51111
	.byte	12,4,197,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38378
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OVCCON',0,4,202,13,3
	.word	51172
	.byte	12,4,205,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38696
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_OVCENABLE',0,4,210,13,3
	.word	51236
	.byte	12,4,213,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38883
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDISC',0,4,218,13,3
	.word	51303
	.byte	12,4,221,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	38994
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDR',0,4,226,13,3
	.word	51366
	.byte	12,4,229,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39127
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PDRR',0,4,234,13,3
	.word	51427
	.byte	12,4,237,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39330
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PERPLLCON0',0,4,242,13,3
	.word	51489
	.byte	12,4,245,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39570
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PERPLLCON1',0,4,250,13,3
	.word	51557
	.byte	12,4,253,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39714
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PERPLLSTAT',0,4,130,14,3
	.word	51625
	.byte	12,4,133,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	39936
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR0',0,4,138,14,3
	.word	51693
	.byte	12,4,141,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40072
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR1',0,4,146,14,3
	.word	51757
	.byte	12,4,149,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40208
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR2',0,4,154,14,3
	.word	51821
	.byte	12,4,157,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40344
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR3',0,4,162,14,3
	.word	51885
	.byte	12,4,165,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40480
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR4',0,4,170,14,3
	.word	51949
	.byte	12,4,173,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40616
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMCSR5',0,4,178,14,3
	.word	52013
	.byte	12,4,181,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	40752
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSTAT0',0,4,186,14,3
	.word	52077
	.byte	12,4,189,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41024
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMSWCR1',0,4,194,14,3
	.word	52142
	.byte	12,4,197,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41269
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMTRCSR0',0,4,202,14,3
	.word	52207
	.byte	12,4,205,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41657
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMTRCSR1',0,4,210,14,3
	.word	52273
	.byte	12,4,213,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	41775
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMTRCSR2',0,4,218,14,3
	.word	52339
	.byte	12,4,221,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42018
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_PMTRCSR3',0,4,226,14,3
	.word	52405
	.byte	12,4,229,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42285
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTCON',0,4,234,14,3
	.word	52471
	.byte	12,4,237,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42544
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTCON2',0,4,242,14,3
	.word	52535
	.byte	12,4,245,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42849
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTCON3',0,4,250,14,3
	.word	52600
	.byte	12,4,253,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	42930
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_RSTSTAT',0,4,130,15,3
	.word	52665
	.byte	12,4,133,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43479
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SEICON0',0,4,138,15,3
	.word	52730
	.byte	12,4,141,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43609
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SEICON1',0,4,146,15,3
	.word	52795
	.byte	12,4,149,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43800
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SEISR',0,4,154,15,3
	.word	52860
	.byte	12,4,157,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	43978
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STCON',0,4,162,15,3
	.word	52923
	.byte	12,4,165,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44129
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM1',0,4,170,15,3
	.word	52986
	.byte	12,4,173,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44201
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM2',0,4,178,15,3
	.word	53050
	.byte	12,4,181,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44273
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM3',0,4,186,15,3
	.word	53114
	.byte	12,4,189,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44345
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM4',0,4,194,15,3
	.word	53178
	.byte	12,4,197,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44417
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM5',0,4,202,15,3
	.word	53242
	.byte	12,4,205,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44489
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STMEM6',0,4,210,15,3
	.word	53306
	.byte	12,4,213,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44561
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_STSTAT',0,4,218,15,3
	.word	53370
	.byte	12,4,221,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	44890
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SWAPCTRL',0,4,226,15,3
	.word	53434
	.byte	12,4,229,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45010
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SWRSTCON',0,4,234,15,3
	.word	53500
	.byte	12,4,237,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45180
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SYSCON',0,4,242,15,3
	.word	53566
	.byte	12,4,245,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45443
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SYSPLLCON0',0,4,250,15,3
	.word	53630
	.byte	12,4,253,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45722
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SYSPLLCON1',0,4,130,16,3
	.word	53698
	.byte	12,4,133,16,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45826
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SYSPLLCON2',0,4,138,16,3
	.word	53766
	.byte	12,4,141,16,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	45932
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_SYSPLLSTAT',0,4,146,16,3
	.word	53834
	.byte	12,4,149,16,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46155
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPCLR',0,4,154,16,3
	.word	53902
	.byte	12,4,157,16,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46303
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPDIS0',0,4,162,16,3
	.word	53967
	.byte	12,4,165,16,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	46791
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPDIS1',0,4,170,16,3
	.word	54033
	.byte	12,4,173,16,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47088
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSET',0,4,178,16,3
	.word	54099
	.byte	12,4,181,16,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47236
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_TRAPSTAT',0,4,186,16,3
	.word	54164
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON0',0,4,194,16,3
	.word	556
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_CON1',0,4,202,16,3
	.word	861
	.byte	32
	.byte	'Ifx_SCU_WDTCPU_SR',0,4,210,16,3
	.word	1092
	.byte	12,4,213,16,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47486
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON0',0,4,218,16,3
	.word	54315
	.byte	12,4,221,16,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47612
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_CON1',0,4,226,16,3
	.word	54382
	.byte	12,4,229,16,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	47864
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SCU_WDTS_SR',0,4,234,16,3
	.word	54449
	.byte	10
	.byte	'_Ifx_SCU_ESRCFGX',0,4,246,16,25,4,13
	.byte	'ESRCFGX',0
	.word	49888
	.byte	4,2,35,0,0,14
	.word	54514
	.byte	32
	.byte	'Ifx_SCU_ESRCFGX',0,4,249,16,3
	.word	54555
	.byte	14
	.word	1132
	.byte	32
	.byte	'Ifx_SCU_WDTCPU',0,4,141,17,3
	.word	54585
	.byte	10
	.byte	'_Ifx_SCU_WDTS',0,4,156,17,25,12,13
	.byte	'CON0',0
	.word	54315
	.byte	4,2,35,0,13
	.byte	'CON1',0
	.word	54382
	.byte	4,2,35,4,13
	.byte	'SR',0
	.word	54449
	.byte	4,2,35,8,0,14
	.word	54614
	.byte	32
	.byte	'Ifx_SCU_WDTS',0,4,161,17,3
	.word	54675
	.byte	18,8
	.word	54514
	.byte	19,1,0,14
	.word	54702
	.byte	18,16
	.word	596
	.byte	19,15,0,18,20
	.word	596
	.byte	19,19,0,18,36
	.word	596
	.byte	19,35,0,18,16
	.word	49513
	.byte	19,3,0,18,16
	.word	50272
	.byte	19,3,0,18,72
	.word	1132
	.byte	19,5,0,14
	.word	54761
	.byte	14
	.word	54614
	.byte	18,176,2
	.word	596
	.byte	19,175,2,0,10
	.byte	'_Ifx_SCU',0,4,176,17,25,128,8,13
	.byte	'reserved_0',0
	.word	4915
	.byte	8,2,35,0,13
	.byte	'ID',0
	.word	50212
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3095
	.byte	4,2,35,12,13
	.byte	'OSCCON',0
	.word	51047
	.byte	4,2,35,16,13
	.byte	'SYSPLLSTAT',0
	.word	53834
	.byte	4,2,35,20,13
	.byte	'SYSPLLCON0',0
	.word	53630
	.byte	4,2,35,24,13
	.byte	'SYSPLLCON1',0
	.word	53698
	.byte	4,2,35,28,13
	.byte	'SYSPLLCON2',0
	.word	53766
	.byte	4,2,35,32,13
	.byte	'PERPLLSTAT',0
	.word	51625
	.byte	4,2,35,36,13
	.byte	'PERPLLCON0',0
	.word	51489
	.byte	4,2,35,40,13
	.byte	'PERPLLCON1',0
	.word	51557
	.byte	4,2,35,44,13
	.byte	'CCUCON0',0
	.word	48408
	.byte	4,2,35,48,13
	.byte	'CCUCON1',0
	.word	48473
	.byte	4,2,35,52,13
	.byte	'FDR',0
	.word	50090
	.byte	4,2,35,56,13
	.byte	'EXTCON',0
	.word	50026
	.byte	4,2,35,60,13
	.byte	'CCUCON2',0
	.word	48670
	.byte	4,2,35,64,13
	.byte	'CCUCON3',0
	.word	48735
	.byte	4,2,35,68,13
	.byte	'CCUCON4',0
	.word	48800
	.byte	4,2,35,72,13
	.byte	'CCUCON5',0
	.word	48865
	.byte	4,2,35,76,13
	.byte	'RSTSTAT',0
	.word	52665
	.byte	4,2,35,80,13
	.byte	'reserved_54',0
	.word	3095
	.byte	4,2,35,84,13
	.byte	'RSTCON',0
	.word	52471
	.byte	4,2,35,88,13
	.byte	'ARSTDIS',0
	.word	48343
	.byte	4,2,35,92,13
	.byte	'SWRSTCON',0
	.word	53500
	.byte	4,2,35,96,13
	.byte	'RSTCON2',0
	.word	52535
	.byte	4,2,35,100,13
	.byte	'RSTCON3',0
	.word	52600
	.byte	4,2,35,104,13
	.byte	'reserved_6C',0
	.word	3095
	.byte	4,2,35,108,13
	.byte	'ESRCFGX',0
	.word	54711
	.byte	8,2,35,112,13
	.byte	'ESROCFG',0
	.word	49961
	.byte	4,2,35,120,13
	.byte	'SYSCON',0
	.word	53566
	.byte	4,2,35,124,13
	.byte	'CCUCON6',0
	.word	48930
	.byte	4,3,35,128,1,13
	.byte	'CCUCON7',0
	.word	48995
	.byte	4,3,35,132,1,13
	.byte	'CCUCON8',0
	.word	49060
	.byte	4,3,35,136,1,13
	.byte	'CCUCON9',0
	.word	49125
	.byte	4,3,35,140,1,13
	.byte	'CCUCON10',0
	.word	48538
	.byte	4,3,35,144,1,13
	.byte	'CCUCON11',0
	.word	48604
	.byte	4,3,35,148,1,13
	.byte	'reserved_98',0
	.word	3095
	.byte	4,3,35,152,1,13
	.byte	'PDR',0
	.word	51366
	.byte	4,3,35,156,1,13
	.byte	'IOCR',0
	.word	50394
	.byte	4,3,35,160,1,13
	.byte	'OUT',0
	.word	51111
	.byte	4,3,35,164,1,13
	.byte	'OMR',0
	.word	50986
	.byte	4,3,35,168,1,13
	.byte	'IN',0
	.word	50334
	.byte	4,3,35,172,1,13
	.byte	'reserved_B0',0
	.word	54716
	.byte	16,3,35,176,1,13
	.byte	'STSTAT',0
	.word	53370
	.byte	4,3,35,192,1,13
	.byte	'STCON',0
	.word	52923
	.byte	4,3,35,196,1,13
	.byte	'PMCSR0',0
	.word	51693
	.byte	4,3,35,200,1,13
	.byte	'PMCSR1',0
	.word	51757
	.byte	4,3,35,204,1,13
	.byte	'PMCSR2',0
	.word	51821
	.byte	4,3,35,208,1,13
	.byte	'PMCSR3',0
	.word	51885
	.byte	4,3,35,212,1,13
	.byte	'PMCSR4',0
	.word	51949
	.byte	4,3,35,216,1,13
	.byte	'PMCSR5',0
	.word	52013
	.byte	4,3,35,220,1,13
	.byte	'reserved_E0',0
	.word	3095
	.byte	4,3,35,224,1,13
	.byte	'PMSTAT0',0
	.word	52077
	.byte	4,3,35,228,1,13
	.byte	'PMSWCR1',0
	.word	52142
	.byte	4,3,35,232,1,13
	.byte	'reserved_EC',0
	.word	54716
	.byte	16,3,35,236,1,13
	.byte	'EMSR',0
	.word	49763
	.byte	4,3,35,252,1,13
	.byte	'EMSSW',0
	.word	49825
	.byte	4,3,35,128,2,13
	.byte	'DTSCSTAT',0
	.word	49319
	.byte	4,3,35,132,2,13
	.byte	'DTSCLIM',0
	.word	49254
	.byte	4,3,35,136,2,13
	.byte	'reserved_10C',0
	.word	54725
	.byte	20,3,35,140,2,13
	.byte	'TRAPDIS1',0
	.word	54033
	.byte	4,3,35,160,2,13
	.byte	'TRAPSTAT',0
	.word	54164
	.byte	4,3,35,164,2,13
	.byte	'TRAPSET',0
	.word	54099
	.byte	4,3,35,168,2,13
	.byte	'TRAPCLR',0
	.word	53902
	.byte	4,3,35,172,2,13
	.byte	'TRAPDIS0',0
	.word	53967
	.byte	4,3,35,176,2,13
	.byte	'LCLCON0',0
	.word	50728
	.byte	4,3,35,180,2,13
	.byte	'LCLCON1',0
	.word	50793
	.byte	4,3,35,184,2,13
	.byte	'LCLTEST',0
	.word	50858
	.byte	4,3,35,188,2,13
	.byte	'CHIPID',0
	.word	49190
	.byte	4,3,35,192,2,13
	.byte	'MANID',0
	.word	50923
	.byte	4,3,35,196,2,13
	.byte	'reserved_148',0
	.word	3095
	.byte	4,3,35,200,2,13
	.byte	'SWAPCTRL',0
	.word	53434
	.byte	4,3,35,204,2,13
	.byte	'reserved_150',0
	.word	54725
	.byte	20,3,35,208,2,13
	.byte	'LBISTCTRL0',0
	.word	50456
	.byte	4,3,35,228,2,13
	.byte	'LBISTCTRL1',0
	.word	50524
	.byte	4,3,35,232,2,13
	.byte	'LBISTCTRL2',0
	.word	50592
	.byte	4,3,35,236,2,13
	.byte	'LBISTCTRL3',0
	.word	50660
	.byte	4,3,35,240,2,13
	.byte	'reserved_174',0
	.word	54716
	.byte	16,3,35,244,2,13
	.byte	'STMEM1',0
	.word	52986
	.byte	4,3,35,132,3,13
	.byte	'STMEM2',0
	.word	53050
	.byte	4,3,35,136,3,13
	.byte	'PDISC',0
	.word	51303
	.byte	4,3,35,140,3,13
	.byte	'reserved_190',0
	.word	4915
	.byte	8,3,35,144,3,13
	.byte	'PMTRCSR0',0
	.word	52207
	.byte	4,3,35,152,3,13
	.byte	'PMTRCSR1',0
	.word	52273
	.byte	4,3,35,156,3,13
	.byte	'PMTRCSR2',0
	.word	52339
	.byte	4,3,35,160,3,13
	.byte	'PMTRCSR3',0
	.word	52405
	.byte	4,3,35,164,3,13
	.byte	'reserved_1A8',0
	.word	4286
	.byte	24,3,35,168,3,13
	.byte	'STMEM3',0
	.word	53114
	.byte	4,3,35,192,3,13
	.byte	'STMEM4',0
	.word	53178
	.byte	4,3,35,196,3,13
	.byte	'STMEM5',0
	.word	53242
	.byte	4,3,35,200,3,13
	.byte	'STMEM6',0
	.word	53306
	.byte	4,3,35,204,3,13
	.byte	'reserved_1D0',0
	.word	54716
	.byte	16,3,35,208,3,13
	.byte	'OVCENABLE',0
	.word	51236
	.byte	4,3,35,224,3,13
	.byte	'OVCCON',0
	.word	51172
	.byte	4,3,35,228,3,13
	.byte	'reserved_1E8',0
	.word	54734
	.byte	36,3,35,232,3,13
	.byte	'EIFILT',0
	.word	49575
	.byte	4,3,35,140,4,13
	.byte	'EICR',0
	.word	54743
	.byte	16,3,35,144,4,13
	.byte	'EIFR',0
	.word	49639
	.byte	4,3,35,160,4,13
	.byte	'FMR',0
	.word	50151
	.byte	4,3,35,164,4,13
	.byte	'PDRR',0
	.word	51427
	.byte	4,3,35,168,4,13
	.byte	'IGCR',0
	.word	54752
	.byte	16,3,35,172,4,13
	.byte	'reserved_23C',0
	.word	54716
	.byte	16,3,35,188,4,13
	.byte	'WDTCPU',0
	.word	54770
	.byte	72,3,35,204,4,13
	.byte	'reserved_294',0
	.word	4915
	.byte	8,3,35,148,5,13
	.byte	'EICON0',0
	.word	49385
	.byte	4,3,35,156,5,13
	.byte	'EICON1',0
	.word	49449
	.byte	4,3,35,160,5,13
	.byte	'EISR',0
	.word	49701
	.byte	4,3,35,164,5,13
	.byte	'WDTS',0
	.word	54775
	.byte	12,3,35,168,5,13
	.byte	'SEICON0',0
	.word	52730
	.byte	4,3,35,180,5,13
	.byte	'SEICON1',0
	.word	52795
	.byte	4,3,35,184,5,13
	.byte	'SEISR',0
	.word	52860
	.byte	4,3,35,188,5,13
	.byte	'reserved_2C0',0
	.word	54780
	.byte	176,2,3,35,192,5,13
	.byte	'ACCEN11',0
	.word	48278
	.byte	4,3,35,240,7,13
	.byte	'ACCEN10',0
	.word	48213
	.byte	4,3,35,244,7,13
	.byte	'ACCEN01',0
	.word	48148
	.byte	4,3,35,248,7,13
	.byte	'ACCEN00',0
	.word	48083
	.byte	4,3,35,252,7,0,14
	.word	54791
	.byte	32
	.byte	'Ifx_SCU',0,4,166,18,3
	.word	56912
	.byte	10
	.byte	'_Ifx_CPU_A_Bits',0,22,68,16,4,11
	.byte	'ADDR',0,4
	.word	444
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_A_Bits',0,22,71,3
	.word	56934
	.byte	10
	.byte	'_Ifx_CPU_BIV_Bits',0,22,74,16,4,11
	.byte	'VSS',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'BIV',0,4
	.word	444
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_BIV_Bits',0,22,78,3
	.word	56995
	.byte	10
	.byte	'_Ifx_CPU_BLK_OMASK_Bits',0,22,81,16,4,11
	.byte	'reserved_0',0,4
	.word	444
	.byte	5,27,2,35,0,11
	.byte	'OMASK',0,4
	.word	444
	.byte	12,15,2,35,0,11
	.byte	'ONE',0,4
	.word	444
	.byte	11,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	444
	.byte	4,0,2,35,0,0,32
	.byte	'Ifx_CPU_BLK_OMASK_Bits',0,22,87,3
	.word	57074
	.byte	10
	.byte	'_Ifx_CPU_BLK_OTAR_Bits',0,22,90,16,4,11
	.byte	'reserved_0',0,4
	.word	444
	.byte	5,27,2,35,0,11
	.byte	'TBASE',0,4
	.word	444
	.byte	23,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	444
	.byte	4,0,2,35,0,0,32
	.byte	'Ifx_CPU_BLK_OTAR_Bits',0,22,95,3
	.word	57212
	.byte	10
	.byte	'_Ifx_CPU_BLK_RABR_Bits',0,22,98,16,4,11
	.byte	'reserved_0',0,4
	.word	444
	.byte	5,27,2,35,0,11
	.byte	'OBASE',0,4
	.word	444
	.byte	17,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	444
	.byte	2,8,2,35,0,11
	.byte	'OMEM',0,4
	.word	444
	.byte	4,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	444
	.byte	3,1,2,35,0,11
	.byte	'OVEN',0,4
	.word	444
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_BLK_RABR_Bits',0,22,106,3
	.word	57333
	.byte	10
	.byte	'_Ifx_CPU_BTV_Bits',0,22,109,16,4,11
	.byte	'reserved_0',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'BTV',0,4
	.word	444
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_BTV_Bits',0,22,113,3
	.word	57509
	.byte	10
	.byte	'_Ifx_CPU_CCNT_Bits',0,22,116,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	444
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	444
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_CCNT_Bits',0,22,120,3
	.word	57595
	.byte	10
	.byte	'_Ifx_CPU_CCTRL_Bits',0,22,123,16,4,11
	.byte	'CM',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'CE',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'M1',0,4
	.word	444
	.byte	3,27,2,35,0,11
	.byte	'M2',0,4
	.word	444
	.byte	3,24,2,35,0,11
	.byte	'M3',0,4
	.word	444
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	444
	.byte	21,0,2,35,0,0,32
	.byte	'Ifx_CPU_CCTRL_Bits',0,22,131,1,3
	.word	57684
	.byte	10
	.byte	'_Ifx_CPU_COMPAT_Bits',0,22,134,1,16,4,11
	.byte	'reserved_0',0,4
	.word	444
	.byte	3,29,2,35,0,11
	.byte	'RM',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'SP',0,4
	.word	444
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	444
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_COMPAT_Bits',0,22,140,1,3
	.word	57831
	.byte	10
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,22,143,1,16,4,11
	.byte	'CORE_ID',0,4
	.word	444
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	444
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CORE_ID_Bits',0,22,147,1,3
	.word	57960
	.byte	10
	.byte	'_Ifx_CPU_CPR_L_Bits',0,22,150,1,16,4,11
	.byte	'reserved_0',0,4
	.word	444
	.byte	5,27,2,35,0,11
	.byte	'LOWBND',0,4
	.word	444
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_L_Bits',0,22,154,1,3
	.word	58060
	.byte	10
	.byte	'_Ifx_CPU_CPR_U_Bits',0,22,157,1,16,4,11
	.byte	'reserved_0',0,4
	.word	444
	.byte	5,27,2,35,0,11
	.byte	'UPPBND',0,4
	.word	444
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_U_Bits',0,22,161,1,3
	.word	58155
	.byte	10
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,22,164,1,16,4,11
	.byte	'MOD_REV',0,4
	.word	444
	.byte	8,24,2,35,0,11
	.byte	'MOD_32B',0,4
	.word	444
	.byte	8,16,2,35,0,11
	.byte	'MOD',0,4
	.word	444
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPU_ID_Bits',0,22,169,1,3
	.word	58250
	.byte	10
	.byte	'_Ifx_CPU_CPXE_Bits',0,22,172,1,16,4,11
	.byte	'XE_N',0,4
	.word	444
	.byte	10,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	444
	.byte	22,0,2,35,0,0,32
	.byte	'Ifx_CPU_CPXE_Bits',0,22,176,1,3
	.word	58360
	.byte	10
	.byte	'_Ifx_CPU_CREVT_Bits',0,22,179,1,16,4,11
	.byte	'EVTA',0,4
	.word	444
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	444
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	444
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	444
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	444
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_CREVT_Bits',0,22,187,1,3
	.word	58452
	.byte	10
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,22,190,1,16,4,11
	.byte	'CID',0,4
	.word	444
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	444
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_CUS_ID_Bits',0,22,194,1,3
	.word	58606
	.byte	10
	.byte	'_Ifx_CPU_D_Bits',0,22,197,1,16,4,11
	.byte	'DATA',0,4
	.word	444
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_D_Bits',0,22,200,1,3
	.word	58700
	.byte	10
	.byte	'_Ifx_CPU_DATR_Bits',0,22,203,1,16,4,11
	.byte	'reserved_0',0,4
	.word	444
	.byte	3,29,2,35,0,11
	.byte	'SBE',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	444
	.byte	5,23,2,35,0,11
	.byte	'CWE',0,4
	.word	444
	.byte	1,22,2,35,0,11
	.byte	'CFE',0,4
	.word	444
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	444
	.byte	3,18,2,35,0,11
	.byte	'SOE',0,4
	.word	444
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	444
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	444
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DATR_Bits',0,22,214,1,3
	.word	58763
	.byte	10
	.byte	'_Ifx_CPU_DBGSR_Bits',0,22,217,1,16,4,11
	.byte	'DE',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'HALT',0,4
	.word	444
	.byte	2,29,2,35,0,11
	.byte	'SIH',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'SUSP',0,4
	.word	444
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	444
	.byte	1,26,2,35,0,11
	.byte	'PREVSUSP',0,4
	.word	444
	.byte	1,25,2,35,0,11
	.byte	'PEVT',0,4
	.word	444
	.byte	1,24,2,35,0,11
	.byte	'EVTSRC',0,4
	.word	444
	.byte	5,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	444
	.byte	19,0,2,35,0,0,32
	.byte	'Ifx_CPU_DBGSR_Bits',0,22,228,1,3
	.word	58989
	.byte	10
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,22,231,1,16,4,11
	.byte	'DTA',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	444
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_DBGTCR_Bits',0,22,235,1,3
	.word	59204
	.byte	10
	.byte	'_Ifx_CPU_DCON0_Bits',0,22,238,1,16,4,11
	.byte	'reserved_0',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'DCBYP',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	444
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCON0_Bits',0,22,243,1,3
	.word	59298
	.byte	10
	.byte	'_Ifx_CPU_DCON2_Bits',0,22,246,1,16,4,11
	.byte	'DCACHE_SZE',0,4
	.word	444
	.byte	16,16,2,35,0,11
	.byte	'DSCRATCH_SZE',0,4
	.word	444
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCON2_Bits',0,22,250,1,3
	.word	59414
	.byte	10
	.byte	'_Ifx_CPU_DCX_Bits',0,22,253,1,16,4,11
	.byte	'reserved_0',0,4
	.word	444
	.byte	6,26,2,35,0,11
	.byte	'DCXVALUE',0,4
	.word	444
	.byte	26,0,2,35,0,0,32
	.byte	'Ifx_CPU_DCX_Bits',0,22,129,2,3
	.word	59515
	.byte	10
	.byte	'_Ifx_CPU_DEADD_Bits',0,22,132,2,16,4,11
	.byte	'ERROR_ADDRESS',0,4
	.word	444
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_DEADD_Bits',0,22,135,2,3
	.word	59608
	.byte	10
	.byte	'_Ifx_CPU_DIEAR_Bits',0,22,138,2,16,4,11
	.byte	'TA',0,4
	.word	444
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_DIEAR_Bits',0,22,141,2,3
	.word	59688
	.byte	10
	.byte	'_Ifx_CPU_DIETR_Bits',0,22,144,2,16,4,11
	.byte	'IED',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	444
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	444
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	444
	.byte	6,21,2,35,0,11
	.byte	'IE_UNC',0,4
	.word	444
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	444
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	444
	.byte	1,18,2,35,0,11
	.byte	'IE_DLMU',0,4
	.word	444
	.byte	1,17,2,35,0,11
	.byte	'IE_LPB',0,4
	.word	444
	.byte	1,16,2,35,0,11
	.byte	'IE_MTMV',0,4
	.word	444
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	444
	.byte	15,0,2,35,0,0,32
	.byte	'Ifx_CPU_DIETR_Bits',0,22,159,2,3
	.word	59757
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,22,162,2,16,4,11
	.byte	'EN0',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	444
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	444
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	444
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	444
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	444
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	444
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	444
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	444
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	444
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	444
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	444
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	444
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	444
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	444
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	444
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	444
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	444
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	444
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	444
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	444
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	444
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	444
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	444
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	444
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	444
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	444
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	444
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	444
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	444
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,22,196,2,3
	.word	60041
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,22,199,2,16,4,11
	.byte	'EN0',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	444
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	444
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	444
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	444
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	444
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	444
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	444
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	444
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	444
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	444
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	444
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	444
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	444
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	444
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	444
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	444
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	444
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	444
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	444
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	444
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	444
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	444
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	444
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	444
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	444
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	444
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	444
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	444
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	444
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,22,233,2,3
	.word	60632
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,22,236,2,16,4,11
	.byte	'EN32',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	444
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	444
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	444
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	444
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	444
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	444
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	444
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	444
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	444
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	444
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	444
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	444
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	444
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	444
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	444
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	444
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	444
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	444
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	444
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	444
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	444
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	444
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	444
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	444
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	444
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	444
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	444
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	444
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	444
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,22,142,3,3
	.word	61223
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,22,145,3,16,4,11
	.byte	'EN32',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	444
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	444
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	444
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	444
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	444
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	444
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	444
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	444
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	444
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	444
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	444
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	444
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	444
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	444
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	444
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	444
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	444
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	444
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	444
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	444
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	444
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	444
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	444
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	444
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	444
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	444
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	444
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	444
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	444
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,22,179,3,3
	.word	61824
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,22,182,3,16,4,11
	.byte	'reserved_0',0,4
	.word	444
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	444
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,22,186,3,3
	.word	62425
	.byte	10
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,22,189,3,16,4,11
	.byte	'reserved_0',0,4
	.word	444
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	444
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,22,193,3,3
	.word	62540
	.byte	10
	.byte	'_Ifx_CPU_DMS_Bits',0,22,196,3,16,4,11
	.byte	'reserved_0',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'DMSVALUE',0,4
	.word	444
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_DMS_Bits',0,22,200,3,3
	.word	62655
	.byte	10
	.byte	'_Ifx_CPU_DPRE_Bits',0,22,203,3,16,4,11
	.byte	'RE_N',0,4
	.word	444
	.byte	18,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	444
	.byte	14,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPRE_Bits',0,22,207,3,3
	.word	62748
	.byte	10
	.byte	'_Ifx_CPU_DPR_L_Bits',0,22,210,3,16,4,11
	.byte	'reserved_0',0,4
	.word	444
	.byte	3,29,2,35,0,11
	.byte	'LOWBND',0,4
	.word	444
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_L_Bits',0,22,214,3,3
	.word	62840
	.byte	10
	.byte	'_Ifx_CPU_DPR_U_Bits',0,22,217,3,16,4,11
	.byte	'reserved_0',0,4
	.word	444
	.byte	3,29,2,35,0,11
	.byte	'UPPBND',0,4
	.word	444
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_U_Bits',0,22,221,3,3
	.word	62935
	.byte	10
	.byte	'_Ifx_CPU_DPWE_Bits',0,22,224,3,16,4,11
	.byte	'WE_N',0,4
	.word	444
	.byte	18,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	444
	.byte	14,0,2,35,0,0,32
	.byte	'Ifx_CPU_DPWE_Bits',0,22,228,3,3
	.word	63030
	.byte	10
	.byte	'_Ifx_CPU_DSTR_Bits',0,22,231,3,16,4,11
	.byte	'SRE',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'GAE',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'LBE',0,4
	.word	444
	.byte	1,29,2,35,0,11
	.byte	'DRE',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	444
	.byte	2,26,2,35,0,11
	.byte	'CRE',0,4
	.word	444
	.byte	1,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	444
	.byte	7,18,2,35,0,11
	.byte	'DTME',0,4
	.word	444
	.byte	1,17,2,35,0,11
	.byte	'LOE',0,4
	.word	444
	.byte	1,16,2,35,0,11
	.byte	'SDE',0,4
	.word	444
	.byte	1,15,2,35,0,11
	.byte	'SCE',0,4
	.word	444
	.byte	1,14,2,35,0,11
	.byte	'CAC',0,4
	.word	444
	.byte	1,13,2,35,0,11
	.byte	'MPE',0,4
	.word	444
	.byte	1,12,2,35,0,11
	.byte	'CLE',0,4
	.word	444
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	444
	.byte	3,8,2,35,0,11
	.byte	'ALN',0,4
	.word	444
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	444
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_CPU_DSTR_Bits',0,22,250,3,3
	.word	63122
	.byte	10
	.byte	'_Ifx_CPU_EXEVT_Bits',0,22,253,3,16,4,11
	.byte	'EVTA',0,4
	.word	444
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	444
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	444
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	444
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	444
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_EXEVT_Bits',0,22,133,4,3
	.word	63461
	.byte	10
	.byte	'_Ifx_CPU_FCX_Bits',0,22,136,4,16,4,11
	.byte	'FCXO',0,4
	.word	444
	.byte	16,16,2,35,0,11
	.byte	'FCXS',0,4
	.word	444
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	444
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_FCX_Bits',0,22,141,4,3
	.word	63615
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON0_Bits',0,22,144,4,16,4,11
	.byte	'TAG1',0,4
	.word	444
	.byte	6,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	444
	.byte	2,24,2,35,0,11
	.byte	'TAG2',0,4
	.word	444
	.byte	6,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	444
	.byte	2,16,2,35,0,11
	.byte	'TAG3',0,4
	.word	444
	.byte	6,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	444
	.byte	2,8,2,35,0,11
	.byte	'TAG4',0,4
	.word	444
	.byte	6,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	444
	.byte	2,0,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON0_Bits',0,22,154,4,3
	.word	63721
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON1_Bits',0,22,157,4,16,4,11
	.byte	'STALL',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	444
	.byte	15,16,2,35,0,11
	.byte	'MASKUECC',0,4
	.word	444
	.byte	2,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	444
	.byte	6,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	444
	.byte	2,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	444
	.byte	6,0,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON1_Bits',0,22,165,4,3
	.word	63939
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON2_Bits',0,22,168,4,16,4,11
	.byte	'RECDIS',0,4
	.word	444
	.byte	2,30,2,35,0,11
	.byte	'ECCCORDIS',0,4
	.word	444
	.byte	2,28,2,35,0,11
	.byte	'reserved_4',0,4
	.word	444
	.byte	4,24,2,35,0,11
	.byte	'HMARGIN',0,4
	.word	444
	.byte	2,22,2,35,0,11
	.byte	'MSEL',0,4
	.word	444
	.byte	2,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	444
	.byte	4,16,2,35,0,11
	.byte	'ECCSCLR',0,4
	.word	444
	.byte	2,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	444
	.byte	6,8,2,35,0,11
	.byte	'SBABCLR',0,4
	.word	444
	.byte	2,6,2,35,0,11
	.byte	'DBABCLR',0,4
	.word	444
	.byte	2,4,2,35,0,11
	.byte	'MBABCLR',0,4
	.word	444
	.byte	2,2,2,35,0,11
	.byte	'ZBABCLR',0,4
	.word	444
	.byte	2,0,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON2_Bits',0,22,182,4,3
	.word	64130
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON3_Bits',0,22,185,4,16,4,11
	.byte	'ECCERRINJ',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'EDCERRINJ',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'SBABERRINJ',0,4
	.word	444
	.byte	1,29,2,35,0,11
	.byte	'DBABERRINJ',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'MBABERRINJ',0,4
	.word	444
	.byte	1,27,2,35,0,11
	.byte	'ZBABERRINJ',0,4
	.word	444
	.byte	1,26,2,35,0,11
	.byte	'SBERERRINJ',0,4
	.word	444
	.byte	1,25,2,35,0,11
	.byte	'DBERERRINJ',0,4
	.word	444
	.byte	1,24,2,35,0,11
	.byte	'NVMCERRINJ',0,4
	.word	444
	.byte	1,23,2,35,0,11
	.byte	'FLCONERRINJ',0,4
	.word	444
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	444
	.byte	22,0,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON3_Bits',0,22,198,4,3
	.word	64430
	.byte	10
	.byte	'_Ifx_CPU_FLASHCON4_Bits',0,22,201,4,16,4,11
	.byte	'DDIS',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	444
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON4_Bits',0,22,205,4,3
	.word	64735
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,22,208,4,16,4,11
	.byte	'TST',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'TCL',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	444
	.byte	6,24,2,35,0,11
	.byte	'RM',0,4
	.word	444
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	444
	.byte	8,14,2,35,0,11
	.byte	'FXE',0,4
	.word	444
	.byte	1,13,2,35,0,11
	.byte	'FUE',0,4
	.word	444
	.byte	1,12,2,35,0,11
	.byte	'FZE',0,4
	.word	444
	.byte	1,11,2,35,0,11
	.byte	'FVE',0,4
	.word	444
	.byte	1,10,2,35,0,11
	.byte	'FIE',0,4
	.word	444
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	444
	.byte	3,6,2,35,0,11
	.byte	'FX',0,4
	.word	444
	.byte	1,5,2,35,0,11
	.byte	'FU',0,4
	.word	444
	.byte	1,4,2,35,0,11
	.byte	'FZ',0,4
	.word	444
	.byte	1,3,2,35,0,11
	.byte	'FV',0,4
	.word	444
	.byte	1,2,2,35,0,11
	.byte	'FI',0,4
	.word	444
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	444
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,22,227,4,3
	.word	64836
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,22,230,4,16,4,11
	.byte	'OPC',0,4
	.word	444
	.byte	8,24,2,35,0,11
	.byte	'FMT',0,4
	.word	444
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	444
	.byte	7,16,2,35,0,11
	.byte	'DREG',0,4
	.word	444
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	444
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,22,237,4,3
	.word	65185
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,22,240,4,16,4,11
	.byte	'PC',0,4
	.word	444
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,22,243,4,3
	.word	65345
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,22,246,4,16,4,11
	.byte	'SRC1',0,4
	.word	444
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,22,249,4,3
	.word	65426
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,22,252,4,16,4,11
	.byte	'SRC2',0,4
	.word	444
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,22,255,4,3
	.word	65513
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,22,130,5,16,4,11
	.byte	'SRC3',0,4
	.word	444
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,22,133,5,3
	.word	65600
	.byte	10
	.byte	'_Ifx_CPU_ICNT_Bits',0,22,136,5,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	444
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	444
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_ICNT_Bits',0,22,140,5,3
	.word	65687
	.byte	10
	.byte	'_Ifx_CPU_ICR_Bits',0,22,143,5,16,4,11
	.byte	'CCPN',0,4
	.word	444
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	444
	.byte	7,17,2,35,0,11
	.byte	'IE',0,4
	.word	444
	.byte	1,16,2,35,0,11
	.byte	'PIPN',0,4
	.word	444
	.byte	8,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	444
	.byte	8,0,2,35,0,0,32
	.byte	'Ifx_CPU_ICR_Bits',0,22,150,5,3
	.word	65778
	.byte	10
	.byte	'_Ifx_CPU_ISP_Bits',0,22,153,5,16,4,11
	.byte	'ISP',0,4
	.word	444
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_ISP_Bits',0,22,156,5,3
	.word	65920
	.byte	10
	.byte	'_Ifx_CPU_KRST0_Bits',0,22,159,5,16,4,11
	.byte	'RST',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'RSTSTAT',0,4
	.word	444
	.byte	2,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	444
	.byte	29,0,2,35,0,0,32
	.byte	'Ifx_CPU_KRST0_Bits',0,22,164,5,3
	.word	65986
	.byte	10
	.byte	'_Ifx_CPU_KRST1_Bits',0,22,167,5,16,4,11
	.byte	'RST',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	444
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_KRST1_Bits',0,22,171,5,3
	.word	66097
	.byte	10
	.byte	'_Ifx_CPU_KRSTCLR_Bits',0,22,174,5,16,4,11
	.byte	'CLR',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	444
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_KRSTCLR_Bits',0,22,178,5,3
	.word	66189
	.byte	10
	.byte	'_Ifx_CPU_LCX_Bits',0,22,181,5,16,4,11
	.byte	'LCXO',0,4
	.word	444
	.byte	16,16,2,35,0,11
	.byte	'LCXS',0,4
	.word	444
	.byte	4,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	444
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_LCX_Bits',0,22,186,5,3
	.word	66285
	.byte	10
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,22,189,5,16,4,11
	.byte	'EN0',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	444
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	444
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	444
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	444
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	444
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	444
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	444
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	444
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	444
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	444
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	444
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	444
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	444
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	444
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	444
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	444
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	444
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	444
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	444
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	444
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	444
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	444
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	444
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	444
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	444
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	444
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	444
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	444
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	444
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,22,223,5,3
	.word	66391
	.byte	10
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,22,226,5,16,4,11
	.byte	'EN32',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	444
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	444
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	444
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	444
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	444
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	444
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	444
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	444
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	444
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	444
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	444
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	444
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	444
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	444
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	444
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	444
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	444
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	444
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	444
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	444
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	444
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	444
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	444
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	444
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	444
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	444
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	444
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	444
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	444
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,22,132,6,3
	.word	66974
	.byte	10
	.byte	'_Ifx_CPU_M1CNT_Bits',0,22,135,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	444
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	444
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M1CNT_Bits',0,22,139,6,3
	.word	67567
	.byte	10
	.byte	'_Ifx_CPU_M2CNT_Bits',0,22,142,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	444
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	444
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M2CNT_Bits',0,22,146,6,3
	.word	67660
	.byte	10
	.byte	'_Ifx_CPU_M3CNT_Bits',0,22,149,6,16,4,11
	.byte	'COUNTVALUE',0,4
	.word	444
	.byte	31,1,2,35,0,11
	.byte	'SOVF',0,4
	.word	444
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_M3CNT_Bits',0,22,153,6,3
	.word	67753
	.byte	10
	.byte	'_Ifx_CPU_OSEL_Bits',0,22,156,6,16,4,11
	.byte	'SHOVEN_X',0,4
	.word	444
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_OSEL_Bits',0,22,159,6,3
	.word	67846
	.byte	10
	.byte	'_Ifx_CPU_PC_Bits',0,22,162,6,16,4,11
	.byte	'reserved_0',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'PC',0,4
	.word	444
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_CPU_PC_Bits',0,22,166,6,3
	.word	67919
	.byte	10
	.byte	'_Ifx_CPU_PCON0_Bits',0,22,169,6,16,4,11
	.byte	'reserved_0',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'PCBYP',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	444
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCON0_Bits',0,22,174,6,3
	.word	68004
	.byte	10
	.byte	'_Ifx_CPU_PCON1_Bits',0,22,177,6,16,4,11
	.byte	'PCINV',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'PBINV',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	444
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCON1_Bits',0,22,182,6,3
	.word	68120
	.byte	10
	.byte	'_Ifx_CPU_PCON2_Bits',0,22,185,6,16,4,11
	.byte	'PCACHE_SZE',0,4
	.word	444
	.byte	16,16,2,35,0,11
	.byte	'PSCRATCH_SZE',0,4
	.word	444
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCON2_Bits',0,22,189,6,3
	.word	68231
	.byte	10
	.byte	'_Ifx_CPU_PCXI_Bits',0,22,192,6,16,4,11
	.byte	'PCXO',0,4
	.word	444
	.byte	16,16,2,35,0,11
	.byte	'PCXS',0,4
	.word	444
	.byte	4,12,2,35,0,11
	.byte	'UL',0,4
	.word	444
	.byte	1,11,2,35,0,11
	.byte	'PIE',0,4
	.word	444
	.byte	1,10,2,35,0,11
	.byte	'PCPN',0,4
	.word	444
	.byte	8,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	444
	.byte	2,0,2,35,0,0,32
	.byte	'Ifx_CPU_PCXI_Bits',0,22,200,6,3
	.word	68332
	.byte	10
	.byte	'_Ifx_CPU_PIEAR_Bits',0,22,203,6,16,4,11
	.byte	'TA',0,4
	.word	444
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_PIEAR_Bits',0,22,206,6,3
	.word	68485
	.byte	10
	.byte	'_Ifx_CPU_PIETR_Bits',0,22,209,6,16,4,11
	.byte	'IED',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'IE_T',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'IE_C',0,4
	.word	444
	.byte	1,29,2,35,0,11
	.byte	'IE_S',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'IE_BI',0,4
	.word	444
	.byte	1,27,2,35,0,11
	.byte	'E_INFO',0,4
	.word	444
	.byte	6,21,2,35,0,11
	.byte	'IE_UNC',0,4
	.word	444
	.byte	1,20,2,35,0,11
	.byte	'IE_SP',0,4
	.word	444
	.byte	1,19,2,35,0,11
	.byte	'IE_BS',0,4
	.word	444
	.byte	1,18,2,35,0,11
	.byte	'IE_ADDR',0,4
	.word	444
	.byte	1,17,2,35,0,11
	.byte	'IE_LPB',0,4
	.word	444
	.byte	1,16,2,35,0,11
	.byte	'IE_MTMV',0,4
	.word	444
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	444
	.byte	15,0,2,35,0,0,32
	.byte	'Ifx_CPU_PIETR_Bits',0,22,224,6,3
	.word	68554
	.byte	10
	.byte	'_Ifx_CPU_PMA0_Bits',0,22,227,6,16,4,11
	.byte	'DAC',0,4
	.word	444
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	444
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA0_Bits',0,22,231,6,3
	.word	68838
	.byte	10
	.byte	'_Ifx_CPU_PMA1_Bits',0,22,234,6,16,4,11
	.byte	'CAC',0,4
	.word	444
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	444
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA1_Bits',0,22,238,6,3
	.word	68929
	.byte	10
	.byte	'_Ifx_CPU_PMA2_Bits',0,22,241,6,16,4,11
	.byte	'PSI',0,4
	.word	444
	.byte	16,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	444
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_CPU_PMA2_Bits',0,22,245,6,3
	.word	69020
	.byte	10
	.byte	'_Ifx_CPU_PSTR_Bits',0,22,248,6,16,4,11
	.byte	'FRE',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'reserved_1',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'FBE',0,4
	.word	444
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	444
	.byte	9,20,2,35,0,11
	.byte	'FPE',0,4
	.word	444
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	444
	.byte	1,18,2,35,0,11
	.byte	'FME',0,4
	.word	444
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	444
	.byte	17,0,2,35,0,0,32
	.byte	'Ifx_CPU_PSTR_Bits',0,22,130,7,3
	.word	69111
	.byte	10
	.byte	'_Ifx_CPU_PSW_Bits',0,22,133,7,16,4,11
	.byte	'CDC',0,4
	.word	444
	.byte	7,25,2,35,0,11
	.byte	'CDE',0,4
	.word	444
	.byte	1,24,2,35,0,11
	.byte	'GW',0,4
	.word	444
	.byte	1,23,2,35,0,11
	.byte	'IS',0,4
	.word	444
	.byte	1,22,2,35,0,11
	.byte	'IO',0,4
	.word	444
	.byte	2,20,2,35,0,11
	.byte	'PRS',0,4
	.word	444
	.byte	2,18,2,35,0,11
	.byte	'S',0,4
	.word	444
	.byte	1,17,2,35,0,11
	.byte	'PRS2',0,4
	.word	444
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	444
	.byte	8,8,2,35,0,11
	.byte	'USB',0,4
	.word	444
	.byte	8,0,2,35,0,0,32
	.byte	'Ifx_CPU_PSW_Bits',0,22,145,7,3
	.word	69314
	.byte	10
	.byte	'_Ifx_CPU_RGN_ACCENA_Bits',0,22,148,7,16,4,11
	.byte	'EN0',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	444
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	444
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	444
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	444
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	444
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	444
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	444
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	444
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	444
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	444
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	444
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	444
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	444
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	444
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	444
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	444
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	444
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	444
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	444
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	444
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	444
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	444
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	444
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	444
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	444
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	444
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	444
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	444
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	444
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_ACCENA_Bits',0,22,182,7,3
	.word	69519
	.byte	10
	.byte	'_Ifx_CPU_RGN_ACCENB_Bits',0,22,185,7,16,4,11
	.byte	'EN32',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	444
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	444
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	444
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	444
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	444
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	444
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	444
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	444
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	444
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	444
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	444
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	444
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	444
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	444
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	444
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	444
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	444
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	444
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	444
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	444
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	444
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	444
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	444
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	444
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	444
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	444
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	444
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	444
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	444
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_ACCENB_Bits',0,22,219,7,3
	.word	70086
	.byte	10
	.byte	'_Ifx_CPU_RGN_LA_Bits',0,22,222,7,16,4,11
	.byte	'reserved_0',0,4
	.word	444
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	444
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_LA_Bits',0,22,226,7,3
	.word	70663
	.byte	10
	.byte	'_Ifx_CPU_RGN_UA_Bits',0,22,229,7,16,4,11
	.byte	'reserved_0',0,4
	.word	444
	.byte	5,27,2,35,0,11
	.byte	'ADDR',0,4
	.word	444
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_UA_Bits',0,22,233,7,3
	.word	70758
	.byte	10
	.byte	'_Ifx_CPU_SEGEN_Bits',0,22,236,7,16,4,11
	.byte	'ADFLIP',0,4
	.word	444
	.byte	8,24,2,35,0,11
	.byte	'ADTYPE',0,4
	.word	444
	.byte	2,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	444
	.byte	21,1,2,35,0,11
	.byte	'AE',0,4
	.word	444
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_SEGEN_Bits',0,22,242,7,3
	.word	70853
	.byte	10
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,22,245,7,16,4,11
	.byte	'EN0',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	444
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	444
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	444
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	444
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	444
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	444
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	444
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	444
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	444
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	444
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	444
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	444
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	444
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	444
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	444
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	444
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	444
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	444
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	444
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	444
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	444
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	444
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	444
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	444
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	444
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	444
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	444
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	444
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	444
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,22,151,8,3
	.word	70981
	.byte	10
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,22,154,8,16,4,11
	.byte	'EN32',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	444
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	444
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	444
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	444
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	444
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	444
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	444
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	444
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	444
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	444
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	444
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	444
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	444
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	444
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	444
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	444
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	444
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	444
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	444
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	444
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	444
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	444
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	444
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	444
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	444
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	444
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	444
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	444
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	444
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,22,188,8,3
	.word	71564
	.byte	10
	.byte	'_Ifx_CPU_SMACON_Bits',0,22,191,8,16,4,11
	.byte	'reserved_0',0,4
	.word	444
	.byte	24,8,2,35,0,11
	.byte	'IODT',0,4
	.word	444
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	444
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_CPU_SMACON_Bits',0,22,196,8,3
	.word	72157
	.byte	10
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,22,199,8,16,4,11
	.byte	'EN0',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'EN1',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'EN2',0,4
	.word	444
	.byte	1,29,2,35,0,11
	.byte	'EN3',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'EN4',0,4
	.word	444
	.byte	1,27,2,35,0,11
	.byte	'EN5',0,4
	.word	444
	.byte	1,26,2,35,0,11
	.byte	'EN6',0,4
	.word	444
	.byte	1,25,2,35,0,11
	.byte	'EN7',0,4
	.word	444
	.byte	1,24,2,35,0,11
	.byte	'EN8',0,4
	.word	444
	.byte	1,23,2,35,0,11
	.byte	'EN9',0,4
	.word	444
	.byte	1,22,2,35,0,11
	.byte	'EN10',0,4
	.word	444
	.byte	1,21,2,35,0,11
	.byte	'EN11',0,4
	.word	444
	.byte	1,20,2,35,0,11
	.byte	'EN12',0,4
	.word	444
	.byte	1,19,2,35,0,11
	.byte	'EN13',0,4
	.word	444
	.byte	1,18,2,35,0,11
	.byte	'EN14',0,4
	.word	444
	.byte	1,17,2,35,0,11
	.byte	'EN15',0,4
	.word	444
	.byte	1,16,2,35,0,11
	.byte	'EN16',0,4
	.word	444
	.byte	1,15,2,35,0,11
	.byte	'EN17',0,4
	.word	444
	.byte	1,14,2,35,0,11
	.byte	'EN18',0,4
	.word	444
	.byte	1,13,2,35,0,11
	.byte	'EN19',0,4
	.word	444
	.byte	1,12,2,35,0,11
	.byte	'EN20',0,4
	.word	444
	.byte	1,11,2,35,0,11
	.byte	'EN21',0,4
	.word	444
	.byte	1,10,2,35,0,11
	.byte	'EN22',0,4
	.word	444
	.byte	1,9,2,35,0,11
	.byte	'EN23',0,4
	.word	444
	.byte	1,8,2,35,0,11
	.byte	'EN24',0,4
	.word	444
	.byte	1,7,2,35,0,11
	.byte	'EN25',0,4
	.word	444
	.byte	1,6,2,35,0,11
	.byte	'EN26',0,4
	.word	444
	.byte	1,5,2,35,0,11
	.byte	'EN27',0,4
	.word	444
	.byte	1,4,2,35,0,11
	.byte	'EN28',0,4
	.word	444
	.byte	1,3,2,35,0,11
	.byte	'EN29',0,4
	.word	444
	.byte	1,2,2,35,0,11
	.byte	'EN30',0,4
	.word	444
	.byte	1,1,2,35,0,11
	.byte	'EN31',0,4
	.word	444
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,22,233,8,3
	.word	72275
	.byte	10
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,22,236,8,16,4,11
	.byte	'EN32',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'EN33',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'EN34',0,4
	.word	444
	.byte	1,29,2,35,0,11
	.byte	'EN35',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'EN36',0,4
	.word	444
	.byte	1,27,2,35,0,11
	.byte	'EN37',0,4
	.word	444
	.byte	1,26,2,35,0,11
	.byte	'EN38',0,4
	.word	444
	.byte	1,25,2,35,0,11
	.byte	'EN39',0,4
	.word	444
	.byte	1,24,2,35,0,11
	.byte	'EN40',0,4
	.word	444
	.byte	1,23,2,35,0,11
	.byte	'EN41',0,4
	.word	444
	.byte	1,22,2,35,0,11
	.byte	'EN42',0,4
	.word	444
	.byte	1,21,2,35,0,11
	.byte	'EN43',0,4
	.word	444
	.byte	1,20,2,35,0,11
	.byte	'EN44',0,4
	.word	444
	.byte	1,19,2,35,0,11
	.byte	'EN45',0,4
	.word	444
	.byte	1,18,2,35,0,11
	.byte	'EN46',0,4
	.word	444
	.byte	1,17,2,35,0,11
	.byte	'EN47',0,4
	.word	444
	.byte	1,16,2,35,0,11
	.byte	'EN48',0,4
	.word	444
	.byte	1,15,2,35,0,11
	.byte	'EN49',0,4
	.word	444
	.byte	1,14,2,35,0,11
	.byte	'EN50',0,4
	.word	444
	.byte	1,13,2,35,0,11
	.byte	'EN51',0,4
	.word	444
	.byte	1,12,2,35,0,11
	.byte	'EN52',0,4
	.word	444
	.byte	1,11,2,35,0,11
	.byte	'EN53',0,4
	.word	444
	.byte	1,10,2,35,0,11
	.byte	'EN54',0,4
	.word	444
	.byte	1,9,2,35,0,11
	.byte	'EN55',0,4
	.word	444
	.byte	1,8,2,35,0,11
	.byte	'EN56',0,4
	.word	444
	.byte	1,7,2,35,0,11
	.byte	'EN57',0,4
	.word	444
	.byte	1,6,2,35,0,11
	.byte	'EN58',0,4
	.word	444
	.byte	1,5,2,35,0,11
	.byte	'EN59',0,4
	.word	444
	.byte	1,4,2,35,0,11
	.byte	'EN60',0,4
	.word	444
	.byte	1,3,2,35,0,11
	.byte	'EN61',0,4
	.word	444
	.byte	1,2,2,35,0,11
	.byte	'EN62',0,4
	.word	444
	.byte	1,1,2,35,0,11
	.byte	'EN63',0,4
	.word	444
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,22,142,9,3
	.word	72864
	.byte	10
	.byte	'_Ifx_CPU_SWEVT_Bits',0,22,145,9,16,4,11
	.byte	'EVTA',0,4
	.word	444
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	444
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	444
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	444
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	444
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_SWEVT_Bits',0,22,153,9,3
	.word	73463
	.byte	10
	.byte	'_Ifx_CPU_SYSCON_Bits',0,22,156,9,16,4,11
	.byte	'FCDSF',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'PROTEN',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'TPROTEN',0,4
	.word	444
	.byte	1,29,2,35,0,11
	.byte	'IS',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'TS',0,4
	.word	444
	.byte	1,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	444
	.byte	3,24,2,35,0,11
	.byte	'ESDIS',0,4
	.word	444
	.byte	1,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	444
	.byte	7,16,2,35,0,11
	.byte	'U1_IED',0,4
	.word	444
	.byte	1,15,2,35,0,11
	.byte	'U1_IOS',0,4
	.word	444
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	444
	.byte	6,8,2,35,0,11
	.byte	'BHALT',0,4
	.word	444
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	444
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_CPU_SYSCON_Bits',0,22,171,9,3
	.word	73617
	.byte	10
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,22,174,9,16,4,11
	.byte	'ASI',0,4
	.word	444
	.byte	5,27,2,35,0,11
	.byte	'reserved_5',0,4
	.word	444
	.byte	27,0,2,35,0,0,32
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,22,178,9,3
	.word	73916
	.byte	10
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,22,181,9,16,4,11
	.byte	'TEXP0',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'TEXP1',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'TEXP2',0,4
	.word	444
	.byte	1,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	444
	.byte	13,16,2,35,0,11
	.byte	'TTRAP',0,4
	.word	444
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	444
	.byte	15,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_CON_Bits',0,22,189,9,3
	.word	74014
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,22,192,9,16,4,11
	.byte	'EXTIM_CLASS_EN',0,4
	.word	444
	.byte	8,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	444
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,22,196,9,3
	.word	74186
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,22,199,9,16,4,11
	.byte	'ENTRY_CVAL',0,4
	.word	444
	.byte	12,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	444
	.byte	20,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,22,203,9,3
	.word	74315
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,22,206,9,16,4,11
	.byte	'reserved_0',0,4
	.word	444
	.byte	4,28,2,35,0,11
	.byte	'ENTRY_LVAL',0,4
	.word	444
	.byte	8,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	444
	.byte	20,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,22,211,9,3
	.word	74445
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,22,214,9,16,4,11
	.byte	'EXIT_CVAL',0,4
	.word	444
	.byte	24,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	444
	.byte	8,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,22,218,9,3
	.word	74597
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,22,221,9,16,4,11
	.byte	'reserved_0',0,4
	.word	444
	.byte	4,28,2,35,0,11
	.byte	'EXIT_LVAL',0,4
	.word	444
	.byte	20,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	444
	.byte	8,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,22,226,9,3
	.word	74724
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_FCX_Bits',0,22,229,9,16,4,11
	.byte	'EXIT_FCX',0,4
	.word	444
	.byte	20,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	444
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_FCX_Bits',0,22,233,9,3
	.word	74873
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM_STAT_Bits',0,22,236,9,16,4,11
	.byte	'EXIT_TIN',0,4
	.word	444
	.byte	8,24,2,35,0,11
	.byte	'EXIT_CLASS',0,4
	.word	444
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	444
	.byte	4,17,2,35,0,11
	.byte	'EXIT_AT',0,4
	.word	444
	.byte	1,16,2,35,0,11
	.byte	'ENTRY_TIN',0,4
	.word	444
	.byte	8,8,2,35,0,11
	.byte	'ENTRY_CLASS',0,4
	.word	444
	.byte	3,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	444
	.byte	4,1,2,35,0,11
	.byte	'ENTRY_AT',0,4
	.word	444
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_STAT_Bits',0,22,246,9,3
	.word	74987
	.byte	10
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,22,249,9,16,4,11
	.byte	'TIMER',0,4
	.word	444
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,22,252,9,3
	.word	75231
	.byte	10
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,22,255,9,16,4,11
	.byte	'T0',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'T1',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'T2',0,4
	.word	444
	.byte	1,29,2,35,0,11
	.byte	'T3',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'T4',0,4
	.word	444
	.byte	1,27,2,35,0,11
	.byte	'T5',0,4
	.word	444
	.byte	1,26,2,35,0,11
	.byte	'T6',0,4
	.word	444
	.byte	1,25,2,35,0,11
	.byte	'T7',0,4
	.word	444
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	444
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,22,138,10,3
	.word	75311
	.byte	10
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,22,141,10,16,4,11
	.byte	'ADDR',0,4
	.word	444
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_CPU_TR_ADR_Bits',0,22,144,10,3
	.word	75506
	.byte	10
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,22,147,10,16,4,11
	.byte	'EVTA',0,4
	.word	444
	.byte	3,29,2,35,0,11
	.byte	'BBM',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'BOD',0,4
	.word	444
	.byte	1,27,2,35,0,11
	.byte	'SUSP',0,4
	.word	444
	.byte	1,26,2,35,0,11
	.byte	'CNT',0,4
	.word	444
	.byte	2,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	444
	.byte	4,20,2,35,0,11
	.byte	'TYP',0,4
	.word	444
	.byte	1,19,2,35,0,11
	.byte	'RNG',0,4
	.word	444
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	444
	.byte	1,17,2,35,0,11
	.byte	'ASI_EN',0,4
	.word	444
	.byte	1,16,2,35,0,11
	.byte	'ASI',0,4
	.word	444
	.byte	5,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	444
	.byte	6,5,2,35,0,11
	.byte	'AST',0,4
	.word	444
	.byte	1,4,2,35,0,11
	.byte	'ALD',0,4
	.word	444
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	444
	.byte	3,0,2,35,0,0,32
	.byte	'Ifx_CPU_TR_EVT_Bits',0,22,164,10,3
	.word	75579
	.byte	12,22,172,10,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56934
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_A',0,22,177,10,3
	.word	75897
	.byte	12,22,180,10,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	56995
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BIV',0,22,185,10,3
	.word	75956
	.byte	12,22,188,10,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57074
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BLK_OMASK',0,22,193,10,3
	.word	76017
	.byte	12,22,196,10,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57212
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BLK_OTAR',0,22,201,10,3
	.word	76084
	.byte	12,22,204,10,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57333
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BLK_RABR',0,22,209,10,3
	.word	76150
	.byte	12,22,212,10,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57509
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_BTV',0,22,217,10,3
	.word	76216
	.byte	12,22,220,10,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57595
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CCNT',0,22,225,10,3
	.word	76277
	.byte	12,22,228,10,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57684
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CCTRL',0,22,233,10,3
	.word	76339
	.byte	12,22,236,10,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57831
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_COMPAT',0,22,241,10,3
	.word	76402
	.byte	12,22,244,10,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	57960
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CORE_ID',0,22,249,10,3
	.word	76466
	.byte	12,22,252,10,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58060
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_L',0,22,129,11,3
	.word	76531
	.byte	12,22,132,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58155
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPR_U',0,22,137,11,3
	.word	76594
	.byte	12,22,140,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58250
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPU_ID',0,22,145,11,3
	.word	76657
	.byte	12,22,148,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58360
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CPXE',0,22,153,11,3
	.word	76721
	.byte	12,22,156,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58452
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CREVT',0,22,161,11,3
	.word	76783
	.byte	12,22,164,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58606
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_CUS_ID',0,22,169,11,3
	.word	76846
	.byte	12,22,172,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58700
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_D',0,22,177,11,3
	.word	76910
	.byte	12,22,180,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58763
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DATR',0,22,185,11,3
	.word	76969
	.byte	12,22,188,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	58989
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DBGSR',0,22,193,11,3
	.word	77031
	.byte	12,22,196,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59204
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DBGTCR',0,22,201,11,3
	.word	77094
	.byte	12,22,204,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59298
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCON0',0,22,209,11,3
	.word	77158
	.byte	12,22,212,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59414
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCON2',0,22,217,11,3
	.word	77221
	.byte	12,22,220,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59515
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DCX',0,22,225,11,3
	.word	77284
	.byte	12,22,228,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59608
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DEADD',0,22,233,11,3
	.word	77345
	.byte	12,22,236,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59688
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DIEAR',0,22,241,11,3
	.word	77408
	.byte	12,22,244,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	59757
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DIETR',0,22,249,11,3
	.word	77471
	.byte	12,22,252,11,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60041
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R',0,22,129,12,3
	.word	77534
	.byte	12,22,132,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	60632
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W',0,22,137,12,3
	.word	77614
	.byte	12,22,140,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61223
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R',0,22,145,12,3
	.word	77694
	.byte	12,22,148,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	61824
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W',0,22,153,12,3
	.word	77774
	.byte	12,22,156,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62425
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA',0,22,161,12,3
	.word	77854
	.byte	12,22,164,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62540
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA',0,22,169,12,3
	.word	77928
	.byte	12,22,172,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62655
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DMS',0,22,177,12,3
	.word	78002
	.byte	12,22,180,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62748
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPRE',0,22,185,12,3
	.word	78063
	.byte	12,22,188,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62840
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_L',0,22,193,12,3
	.word	78125
	.byte	12,22,196,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	62935
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPR_U',0,22,201,12,3
	.word	78188
	.byte	12,22,204,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63030
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DPWE',0,22,209,12,3
	.word	78251
	.byte	12,22,212,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63122
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_DSTR',0,22,217,12,3
	.word	78313
	.byte	12,22,220,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63461
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_EXEVT',0,22,225,12,3
	.word	78375
	.byte	12,22,228,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63615
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FCX',0,22,233,12,3
	.word	78438
	.byte	12,22,236,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63721
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON0',0,22,241,12,3
	.word	78499
	.byte	12,22,244,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	63939
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON1',0,22,249,12,3
	.word	78566
	.byte	12,22,252,12,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64130
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON2',0,22,129,13,3
	.word	78633
	.byte	12,22,132,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64430
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON3',0,22,137,13,3
	.word	78700
	.byte	12,22,140,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64735
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FLASHCON4',0,22,145,13,3
	.word	78767
	.byte	12,22,148,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	64836
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,22,153,13,3
	.word	78834
	.byte	12,22,156,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65185
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,22,161,13,3
	.word	78904
	.byte	12,22,164,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65345
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,22,169,13,3
	.word	78974
	.byte	12,22,172,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65426
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,22,177,13,3
	.word	79043
	.byte	12,22,180,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65513
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,22,185,13,3
	.word	79114
	.byte	12,22,188,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65600
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,22,193,13,3
	.word	79185
	.byte	12,22,196,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65687
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_ICNT',0,22,201,13,3
	.word	79256
	.byte	12,22,204,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65778
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_ICR',0,22,209,13,3
	.word	79318
	.byte	12,22,212,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65920
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_ISP',0,22,217,13,3
	.word	79379
	.byte	12,22,220,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	65986
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_KRST0',0,22,225,13,3
	.word	79440
	.byte	12,22,228,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66097
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_KRST1',0,22,233,13,3
	.word	79503
	.byte	12,22,236,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66189
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_KRSTCLR',0,22,241,13,3
	.word	79566
	.byte	12,22,244,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66285
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_LCX',0,22,249,13,3
	.word	79631
	.byte	12,22,252,13,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66391
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R',0,22,129,14,3
	.word	79692
	.byte	12,22,132,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	66974
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R',0,22,137,14,3
	.word	79768
	.byte	12,22,140,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67567
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M1CNT',0,22,145,14,3
	.word	79844
	.byte	12,22,148,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67660
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M2CNT',0,22,153,14,3
	.word	79907
	.byte	12,22,156,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67753
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_M3CNT',0,22,161,14,3
	.word	79970
	.byte	12,22,164,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67846
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_OSEL',0,22,169,14,3
	.word	80033
	.byte	12,22,172,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	67919
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PC',0,22,177,14,3
	.word	80095
	.byte	12,22,180,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68004
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCON0',0,22,185,14,3
	.word	80155
	.byte	12,22,188,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68120
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCON1',0,22,193,14,3
	.word	80218
	.byte	12,22,196,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68231
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCON2',0,22,201,14,3
	.word	80281
	.byte	12,22,204,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68332
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PCXI',0,22,209,14,3
	.word	80344
	.byte	12,22,212,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68485
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PIEAR',0,22,217,14,3
	.word	80406
	.byte	12,22,220,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68554
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PIETR',0,22,225,14,3
	.word	80469
	.byte	12,22,228,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68838
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA0',0,22,233,14,3
	.word	80532
	.byte	12,22,236,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	68929
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA1',0,22,241,14,3
	.word	80594
	.byte	12,22,244,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69020
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PMA2',0,22,249,14,3
	.word	80656
	.byte	12,22,252,14,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69111
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PSTR',0,22,129,15,3
	.word	80718
	.byte	12,22,132,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69314
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_PSW',0,22,137,15,3
	.word	80780
	.byte	12,22,140,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	69519
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_ACCENA',0,22,145,15,3
	.word	80841
	.byte	12,22,148,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70086
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_ACCENB',0,22,153,15,3
	.word	80909
	.byte	12,22,156,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70663
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_LA',0,22,161,15,3
	.word	80977
	.byte	12,22,164,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70758
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_RGN_UA',0,22,169,15,3
	.word	81041
	.byte	12,22,172,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70853
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SEGEN',0,22,177,15,3
	.word	81105
	.byte	12,22,180,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	70981
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W',0,22,185,15,3
	.word	81168
	.byte	12,22,188,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	71564
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W',0,22,193,15,3
	.word	81244
	.byte	12,22,196,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72157
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SMACON',0,22,201,15,3
	.word	81320
	.byte	12,22,204,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72275
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R',0,22,209,15,3
	.word	81384
	.byte	12,22,212,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	72864
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R',0,22,217,15,3
	.word	81463
	.byte	12,22,220,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73463
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SWEVT',0,22,225,15,3
	.word	81542
	.byte	12,22,228,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73617
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_SYSCON',0,22,233,15,3
	.word	81605
	.byte	12,22,236,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	73916
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TASK_ASI',0,22,241,15,3
	.word	81669
	.byte	12,22,244,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74014
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_CON',0,22,249,15,3
	.word	81735
	.byte	12,22,252,15,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74186
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN',0,22,129,16,3
	.word	81800
	.byte	12,22,132,16,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74315
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL',0,22,137,16,3
	.word	81876
	.byte	12,22,140,16,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74445
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL',0,22,145,16,3
	.word	81954
	.byte	12,22,148,16,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74597
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL',0,22,153,16,3
	.word	82032
	.byte	12,22,156,16,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74724
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL',0,22,161,16,3
	.word	82109
	.byte	12,22,164,16,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74873
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_FCX',0,22,169,16,3
	.word	82186
	.byte	12,22,172,16,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	74987
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_EXTIM_STAT',0,22,177,16,3
	.word	82257
	.byte	12,22,180,16,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75231
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TPS_TIMER',0,22,185,16,3
	.word	82329
	.byte	12,22,188,16,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75311
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TRIG_ACC',0,22,193,16,3
	.word	82396
	.byte	12,22,196,16,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75506
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TR_ADR',0,22,201,16,3
	.word	82462
	.byte	12,22,204,16,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	75579
	.byte	4,2,35,0,0,32
	.byte	'Ifx_CPU_TR_EVT',0,22,209,16,3
	.word	82526
	.byte	10
	.byte	'_Ifx_CPU_RGN',0,22,221,16,25,16,13
	.byte	'LA',0
	.word	80977
	.byte	4,2,35,0,13
	.byte	'UA',0
	.word	81041
	.byte	4,2,35,4,13
	.byte	'ACCENA',0
	.word	80841
	.byte	4,2,35,8,13
	.byte	'ACCENB',0
	.word	80909
	.byte	4,2,35,12,0,14
	.word	82590
	.byte	32
	.byte	'Ifx_CPU_RGN',0,22,227,16,3
	.word	82666
	.byte	10
	.byte	'_Ifx_CPU_BLK',0,22,242,16,25,12,13
	.byte	'RABR',0
	.word	76150
	.byte	4,2,35,0,13
	.byte	'OTAR',0
	.word	76084
	.byte	4,2,35,4,13
	.byte	'OMASK',0
	.word	76017
	.byte	4,2,35,8,0,14
	.word	82692
	.byte	32
	.byte	'Ifx_CPU_BLK',0,22,247,16,3
	.word	82755
	.byte	10
	.byte	'_Ifx_CPU_FPU_TRAP',0,22,134,17,25,28,13
	.byte	'CON',0
	.word	78834
	.byte	4,2,35,0,13
	.byte	'PC',0
	.word	78974
	.byte	4,2,35,4,13
	.byte	'OPC',0
	.word	78904
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3095
	.byte	4,2,35,12,13
	.byte	'SRC1',0
	.word	79043
	.byte	4,2,35,16,13
	.byte	'SRC2',0
	.word	79114
	.byte	4,2,35,20,13
	.byte	'SRC3',0
	.word	79185
	.byte	4,2,35,24,0,14
	.word	82781
	.byte	32
	.byte	'Ifx_CPU_FPU_TRAP',0,22,143,17,3
	.word	82906
	.byte	10
	.byte	'_Ifx_CPU_DPR',0,22,158,17,25,8,13
	.byte	'L',0
	.word	78125
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	78188
	.byte	4,2,35,4,0,14
	.word	82937
	.byte	32
	.byte	'Ifx_CPU_DPR',0,22,162,17,3
	.word	82979
	.byte	10
	.byte	'_Ifx_CPU_CPR',0,22,177,17,25,8,13
	.byte	'L',0
	.word	76531
	.byte	4,2,35,0,13
	.byte	'U',0
	.word	76594
	.byte	4,2,35,4,0,14
	.word	83005
	.byte	32
	.byte	'Ifx_CPU_CPR',0,22,181,17,3
	.word	83047
	.byte	18,12
	.word	82329
	.byte	19,2,0,10
	.byte	'_Ifx_CPU_TPS',0,22,196,17,25,16,13
	.byte	'CON',0
	.word	81735
	.byte	4,2,35,0,13
	.byte	'TIMER',0
	.word	83073
	.byte	12,2,35,4,0,14
	.word	83082
	.byte	32
	.byte	'Ifx_CPU_TPS',0,22,200,17,3
	.word	83130
	.byte	10
	.byte	'_Ifx_CPU_TPS_EXTIM',0,22,215,17,25,28,13
	.byte	'ENTRY_LVAL',0
	.word	81954
	.byte	4,2,35,0,13
	.byte	'ENTRY_CVAL',0
	.word	81876
	.byte	4,2,35,4,13
	.byte	'EXIT_LVAL',0
	.word	82109
	.byte	4,2,35,8,13
	.byte	'EXIT_CVAL',0
	.word	82032
	.byte	4,2,35,12,13
	.byte	'CLASS_EN',0
	.word	81800
	.byte	4,2,35,16,13
	.byte	'STAT',0
	.word	82257
	.byte	4,2,35,20,13
	.byte	'FCX',0
	.word	82186
	.byte	4,2,35,24,0,14
	.word	83156
	.byte	32
	.byte	'Ifx_CPU_TPS_EXTIM',0,22,224,17,3
	.word	83305
	.byte	10
	.byte	'_Ifx_CPU_TR',0,22,239,17,25,8,13
	.byte	'EVT',0
	.word	82526
	.byte	4,2,35,0,13
	.byte	'ADR',0
	.word	82462
	.byte	4,2,35,4,0,14
	.word	83337
	.byte	32
	.byte	'Ifx_CPU_TR',0,22,243,17,3
	.word	83382
	.byte	18,128,34
	.word	596
	.byte	19,255,33,0,18,236,253,2
	.word	596
	.byte	19,235,253,2,0,18,244,31
	.word	596
	.byte	19,243,31,0,18,128,1
	.word	82590
	.byte	19,7,0,14
	.word	83442
	.byte	18,232,1
	.word	596
	.byte	19,231,1,0,18,128,48
	.word	596
	.byte	19,255,47,0,18,128,3
	.word	82692
	.byte	19,31,0,14
	.word	83479
	.byte	18,160,39
	.word	596
	.byte	19,159,39,0,18,208,223,1
	.word	596
	.byte	19,207,223,1,0,18,248,1
	.word	596
	.byte	19,247,1,0,18,244,29
	.word	596
	.byte	19,243,29,0,18,188,3
	.word	596
	.byte	19,187,3,0,18,232,3
	.word	596
	.byte	19,231,3,0,18,252,23
	.word	596
	.byte	19,251,23,0,14
	.word	82781
	.byte	18,228,63
	.word	596
	.byte	19,227,63,0,18,144,1
	.word	82937
	.byte	19,17,0,14
	.word	83589
	.byte	18,240,30
	.word	596
	.byte	19,239,30,0,18,80
	.word	83005
	.byte	19,9,0,14
	.word	83615
	.byte	18,176,31
	.word	596
	.byte	19,175,31,0,18,152,7
	.word	596
	.byte	19,151,7,0,14
	.word	83082
	.byte	18,48
	.word	596
	.byte	19,47,0,14
	.word	83156
	.byte	18,164,23
	.word	596
	.byte	19,163,23,0,18,64
	.word	83337
	.byte	19,7,0,14
	.word	83681
	.byte	18,192,23
	.word	596
	.byte	19,191,23,0,18,28
	.word	596
	.byte	19,27,0,18,180,1
	.word	596
	.byte	19,179,1,0,18,172,1
	.word	596
	.byte	19,171,1,0,18,64
	.word	76910
	.byte	19,15,0,18,64
	.word	596
	.byte	19,63,0,18,64
	.word	75897
	.byte	19,15,0,10
	.byte	'_Ifx_CPU',0,22,130,18,25,128,128,8,13
	.byte	'reserved_0',0
	.word	83407
	.byte	128,34,2,35,0,13
	.byte	'FLASHCON0',0
	.word	78499
	.byte	4,3,35,128,34,13
	.byte	'FLASHCON1',0
	.word	78566
	.byte	4,3,35,132,34,13
	.byte	'FLASHCON2',0
	.word	78633
	.byte	4,3,35,136,34,13
	.byte	'FLASHCON3',0
	.word	78700
	.byte	4,3,35,140,34,13
	.byte	'FLASHCON4',0
	.word	78767
	.byte	4,3,35,144,34,13
	.byte	'reserved_1114',0
	.word	83418
	.byte	236,253,2,3,35,148,34,13
	.byte	'KRST0',0
	.word	79440
	.byte	4,4,35,128,160,3,13
	.byte	'KRST1',0
	.word	79503
	.byte	4,4,35,132,160,3,13
	.byte	'KRSTCLR',0
	.word	79566
	.byte	4,4,35,136,160,3,13
	.byte	'reserved_D00C',0
	.word	83431
	.byte	244,31,4,35,140,160,3,13
	.byte	'RGN',0
	.word	83452
	.byte	128,1,4,35,128,192,3,13
	.byte	'reserved_E080',0
	.word	4915
	.byte	8,4,35,128,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R0',0
	.word	81384
	.byte	4,4,35,136,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R0',0
	.word	81463
	.byte	4,4,35,140,193,3,13
	.byte	'reserved_E090',0
	.word	4915
	.byte	8,4,35,144,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R1',0
	.word	81384
	.byte	4,4,35,152,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R1',0
	.word	81463
	.byte	4,4,35,156,193,3,13
	.byte	'reserved_E0A0',0
	.word	4915
	.byte	8,4,35,160,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R2',0
	.word	81384
	.byte	4,4,35,168,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R2',0
	.word	81463
	.byte	4,4,35,172,193,3,13
	.byte	'reserved_E0B0',0
	.word	4915
	.byte	8,4,35,176,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R3',0
	.word	81384
	.byte	4,4,35,184,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R3',0
	.word	81463
	.byte	4,4,35,188,193,3,13
	.byte	'reserved_E0C0',0
	.word	4915
	.byte	8,4,35,192,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R4',0
	.word	81384
	.byte	4,4,35,200,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R4',0
	.word	81463
	.byte	4,4,35,204,193,3,13
	.byte	'reserved_E0D0',0
	.word	4915
	.byte	8,4,35,208,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R5',0
	.word	81384
	.byte	4,4,35,216,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R5',0
	.word	81463
	.byte	4,4,35,220,193,3,13
	.byte	'reserved_E0E0',0
	.word	4915
	.byte	8,4,35,224,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R6',0
	.word	81384
	.byte	4,4,35,232,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R6',0
	.word	81463
	.byte	4,4,35,236,193,3,13
	.byte	'reserved_E0F0',0
	.word	4915
	.byte	8,4,35,240,193,3,13
	.byte	'SPR_SPROT_RGNACCENA_R7',0
	.word	81384
	.byte	4,4,35,248,193,3,13
	.byte	'SPR_SPROT_RGNACCENB_R7',0
	.word	81463
	.byte	4,4,35,252,193,3,13
	.byte	'SFR_SPROT_ACCENA_W',0
	.word	81168
	.byte	4,4,35,128,194,3,13
	.byte	'SFR_SPROT_ACCENB_W',0
	.word	81244
	.byte	4,4,35,132,194,3,13
	.byte	'reserved_E108',0
	.word	4915
	.byte	8,4,35,136,194,3,13
	.byte	'LPB_SPROT_ACCENA_R',0
	.word	79692
	.byte	4,4,35,144,194,3,13
	.byte	'LPB_SPROT_ACCENB_R',0
	.word	79768
	.byte	4,4,35,148,194,3,13
	.byte	'reserved_E118',0
	.word	83457
	.byte	232,1,4,35,152,194,3,13
	.byte	'DLMU_SPROT_RGNLA0',0
	.word	77854
	.byte	4,4,35,128,196,3,13
	.byte	'DLMU_SPROT_RGNUA0',0
	.word	77928
	.byte	4,4,35,132,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W0',0
	.word	77614
	.byte	4,4,35,136,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W0',0
	.word	77774
	.byte	4,4,35,140,196,3,13
	.byte	'DLMU_SPROT_RGNLA1',0
	.word	77854
	.byte	4,4,35,144,196,3,13
	.byte	'DLMU_SPROT_RGNUA1',0
	.word	77928
	.byte	4,4,35,148,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W1',0
	.word	77614
	.byte	4,4,35,152,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W1',0
	.word	77774
	.byte	4,4,35,156,196,3,13
	.byte	'DLMU_SPROT_RGNLA2',0
	.word	77854
	.byte	4,4,35,160,196,3,13
	.byte	'DLMU_SPROT_RGNUA2',0
	.word	77928
	.byte	4,4,35,164,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W2',0
	.word	77614
	.byte	4,4,35,168,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W2',0
	.word	77774
	.byte	4,4,35,172,196,3,13
	.byte	'DLMU_SPROT_RGNLA3',0
	.word	77854
	.byte	4,4,35,176,196,3,13
	.byte	'DLMU_SPROT_RGNUA3',0
	.word	77928
	.byte	4,4,35,180,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W3',0
	.word	77614
	.byte	4,4,35,184,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W3',0
	.word	77774
	.byte	4,4,35,188,196,3,13
	.byte	'DLMU_SPROT_RGNLA4',0
	.word	77854
	.byte	4,4,35,192,196,3,13
	.byte	'DLMU_SPROT_RGNUA4',0
	.word	77928
	.byte	4,4,35,196,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W4',0
	.word	77614
	.byte	4,4,35,200,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W4',0
	.word	77774
	.byte	4,4,35,204,196,3,13
	.byte	'DLMU_SPROT_RGNLA5',0
	.word	77854
	.byte	4,4,35,208,196,3,13
	.byte	'DLMU_SPROT_RGNUA5',0
	.word	77928
	.byte	4,4,35,212,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W5',0
	.word	77614
	.byte	4,4,35,216,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W5',0
	.word	77774
	.byte	4,4,35,220,196,3,13
	.byte	'DLMU_SPROT_RGNLA6',0
	.word	77854
	.byte	4,4,35,224,196,3,13
	.byte	'DLMU_SPROT_RGNUA6',0
	.word	77928
	.byte	4,4,35,228,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W6',0
	.word	77614
	.byte	4,4,35,232,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W6',0
	.word	77774
	.byte	4,4,35,236,196,3,13
	.byte	'DLMU_SPROT_RGNLA7',0
	.word	77854
	.byte	4,4,35,240,196,3,13
	.byte	'DLMU_SPROT_RGNUA7',0
	.word	77928
	.byte	4,4,35,244,196,3,13
	.byte	'DLMU_SPROT_RGNACCENA_W7',0
	.word	77614
	.byte	4,4,35,248,196,3,13
	.byte	'DLMU_SPROT_RGNACCENB_W7',0
	.word	77774
	.byte	4,4,35,252,196,3,13
	.byte	'reserved_E280',0
	.word	4915
	.byte	8,4,35,128,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R0',0
	.word	77534
	.byte	4,4,35,136,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R0',0
	.word	77694
	.byte	4,4,35,140,197,3,13
	.byte	'reserved_E290',0
	.word	4915
	.byte	8,4,35,144,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R1',0
	.word	77534
	.byte	4,4,35,152,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R1',0
	.word	77694
	.byte	4,4,35,156,197,3,13
	.byte	'reserved_E2A0',0
	.word	4915
	.byte	8,4,35,160,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R2',0
	.word	77534
	.byte	4,4,35,168,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R2',0
	.word	77694
	.byte	4,4,35,172,197,3,13
	.byte	'reserved_E2B0',0
	.word	4915
	.byte	8,4,35,176,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R3',0
	.word	77534
	.byte	4,4,35,184,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R3',0
	.word	77694
	.byte	4,4,35,188,197,3,13
	.byte	'reserved_E2C0',0
	.word	4915
	.byte	8,4,35,192,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R4',0
	.word	77534
	.byte	4,4,35,200,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R4',0
	.word	77694
	.byte	4,4,35,204,197,3,13
	.byte	'reserved_E2D0',0
	.word	4915
	.byte	8,4,35,208,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R5',0
	.word	77534
	.byte	4,4,35,216,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R5',0
	.word	77694
	.byte	4,4,35,220,197,3,13
	.byte	'reserved_E2E0',0
	.word	4915
	.byte	8,4,35,224,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R6',0
	.word	77534
	.byte	4,4,35,232,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R6',0
	.word	77694
	.byte	4,4,35,236,197,3,13
	.byte	'reserved_E2F0',0
	.word	4915
	.byte	8,4,35,240,197,3,13
	.byte	'DLMU_SPROT_RGNACCENA_R7',0
	.word	77534
	.byte	4,4,35,248,197,3,13
	.byte	'DLMU_SPROT_RGNACCENB_R7',0
	.word	77694
	.byte	4,4,35,252,197,3,13
	.byte	'reserved_E300',0
	.word	83468
	.byte	128,48,4,35,128,198,3,13
	.byte	'OSEL',0
	.word	80033
	.byte	4,4,35,128,246,3,13
	.byte	'reserved_FB04',0
	.word	5255
	.byte	12,4,35,132,246,3,13
	.byte	'BLK',0
	.word	83489
	.byte	128,3,4,35,144,246,3,13
	.byte	'reserved_FC90',0
	.word	83494
	.byte	160,39,4,35,144,249,3,13
	.byte	'SEGEN',0
	.word	81105
	.byte	4,4,35,176,160,4,13
	.byte	'reserved_11034',0
	.word	83505
	.byte	208,223,1,4,35,180,160,4,13
	.byte	'TASK_ASI',0
	.word	81669
	.byte	4,4,35,132,128,6,13
	.byte	'reserved_18008',0
	.word	83518
	.byte	248,1,4,35,136,128,6,13
	.byte	'PMA0',0
	.word	80532
	.byte	4,4,35,128,130,6,13
	.byte	'PMA1',0
	.word	80594
	.byte	4,4,35,132,130,6,13
	.byte	'PMA2',0
	.word	80656
	.byte	4,4,35,136,130,6,13
	.byte	'reserved_1810C',0
	.word	83529
	.byte	244,29,4,35,140,130,6,13
	.byte	'DCON2',0
	.word	77221
	.byte	4,4,35,128,160,6,13
	.byte	'reserved_19004',0
	.word	4915
	.byte	8,4,35,132,160,6,13
	.byte	'SMACON',0
	.word	81320
	.byte	4,4,35,140,160,6,13
	.byte	'DSTR',0
	.word	78313
	.byte	4,4,35,144,160,6,13
	.byte	'reserved_19014',0
	.word	3095
	.byte	4,4,35,148,160,6,13
	.byte	'DATR',0
	.word	76969
	.byte	4,4,35,152,160,6,13
	.byte	'DEADD',0
	.word	77345
	.byte	4,4,35,156,160,6,13
	.byte	'DIEAR',0
	.word	77408
	.byte	4,4,35,160,160,6,13
	.byte	'DIETR',0
	.word	77471
	.byte	4,4,35,164,160,6,13
	.byte	'reserved_19028',0
	.word	4286
	.byte	24,4,35,168,160,6,13
	.byte	'DCON0',0
	.word	77158
	.byte	4,4,35,192,160,6,13
	.byte	'reserved_19044',0
	.word	83540
	.byte	188,3,4,35,196,160,6,13
	.byte	'PSTR',0
	.word	80718
	.byte	4,4,35,128,164,6,13
	.byte	'PCON1',0
	.word	80218
	.byte	4,4,35,132,164,6,13
	.byte	'PCON2',0
	.word	80281
	.byte	4,4,35,136,164,6,13
	.byte	'PCON0',0
	.word	80155
	.byte	4,4,35,140,164,6,13
	.byte	'PIEAR',0
	.word	80406
	.byte	4,4,35,144,164,6,13
	.byte	'PIETR',0
	.word	80469
	.byte	4,4,35,148,164,6,13
	.byte	'reserved_19218',0
	.word	83551
	.byte	232,3,4,35,152,164,6,13
	.byte	'COMPAT',0
	.word	76402
	.byte	4,4,35,128,168,6,13
	.byte	'reserved_19404',0
	.word	83562
	.byte	252,23,4,35,132,168,6,13
	.byte	'FPU_TRAP',0
	.word	83573
	.byte	28,4,35,128,192,6,13
	.byte	'reserved_1A01C',0
	.word	83578
	.byte	228,63,4,35,156,192,6,13
	.byte	'DPR',0
	.word	83599
	.byte	144,1,4,35,128,128,7,13
	.byte	'reserved_1C090',0
	.word	83604
	.byte	240,30,4,35,144,129,7,13
	.byte	'CPR',0
	.word	83624
	.byte	80,4,35,128,160,7,13
	.byte	'reserved_1D050',0
	.word	83629
	.byte	176,31,4,35,208,160,7,13
	.byte	'CPXE_0',0
	.word	76721
	.byte	4,4,35,128,192,7,13
	.byte	'CPXE_1',0
	.word	76721
	.byte	4,4,35,132,192,7,13
	.byte	'CPXE_2',0
	.word	76721
	.byte	4,4,35,136,192,7,13
	.byte	'CPXE_3',0
	.word	76721
	.byte	4,4,35,140,192,7,13
	.byte	'DPRE_0',0
	.word	78063
	.byte	4,4,35,144,192,7,13
	.byte	'DPRE_1',0
	.word	78063
	.byte	4,4,35,148,192,7,13
	.byte	'DPRE_2',0
	.word	78063
	.byte	4,4,35,152,192,7,13
	.byte	'DPRE_3',0
	.word	78063
	.byte	4,4,35,156,192,7,13
	.byte	'DPWE_0',0
	.word	78251
	.byte	4,4,35,160,192,7,13
	.byte	'DPWE_1',0
	.word	78251
	.byte	4,4,35,164,192,7,13
	.byte	'DPWE_2',0
	.word	78251
	.byte	4,4,35,168,192,7,13
	.byte	'DPWE_3',0
	.word	78251
	.byte	4,4,35,172,192,7,13
	.byte	'reserved_1E030',0
	.word	54716
	.byte	16,4,35,176,192,7,13
	.byte	'CPXE_4',0
	.word	76721
	.byte	4,4,35,192,192,7,13
	.byte	'CPXE_5',0
	.word	76721
	.byte	4,4,35,196,192,7,13
	.byte	'reserved_1E048',0
	.word	4915
	.byte	8,4,35,200,192,7,13
	.byte	'DPRE_4',0
	.word	78063
	.byte	4,4,35,208,192,7,13
	.byte	'DPRE_5',0
	.word	78063
	.byte	4,4,35,212,192,7,13
	.byte	'reserved_1E058',0
	.word	4915
	.byte	8,4,35,216,192,7,13
	.byte	'DPWE_4',0
	.word	78251
	.byte	4,4,35,224,192,7,13
	.byte	'DPWE_5',0
	.word	78251
	.byte	4,4,35,228,192,7,13
	.byte	'reserved_1E068',0
	.word	83640
	.byte	152,7,4,35,232,192,7,13
	.byte	'TPS',0
	.word	83651
	.byte	16,4,35,128,200,7,13
	.byte	'reserved_1E410',0
	.word	83656
	.byte	48,4,35,144,200,7,13
	.byte	'TPS_EXTIM',0
	.word	83665
	.byte	28,4,35,192,200,7,13
	.byte	'reserved_1E45C',0
	.word	83670
	.byte	164,23,4,35,220,200,7,13
	.byte	'TR',0
	.word	83690
	.byte	64,4,35,128,224,7,13
	.byte	'reserved_1F040',0
	.word	83695
	.byte	192,23,4,35,192,224,7,13
	.byte	'CCTRL',0
	.word	76339
	.byte	4,4,35,128,248,7,13
	.byte	'CCNT',0
	.word	76277
	.byte	4,4,35,132,248,7,13
	.byte	'ICNT',0
	.word	79256
	.byte	4,4,35,136,248,7,13
	.byte	'M1CNT',0
	.word	79844
	.byte	4,4,35,140,248,7,13
	.byte	'M2CNT',0
	.word	79907
	.byte	4,4,35,144,248,7,13
	.byte	'M3CNT',0
	.word	79970
	.byte	4,4,35,148,248,7,13
	.byte	'reserved_1FC18',0
	.word	83457
	.byte	232,1,4,35,152,248,7,13
	.byte	'DBGSR',0
	.word	77031
	.byte	4,4,35,128,250,7,13
	.byte	'reserved_1FD04',0
	.word	3095
	.byte	4,4,35,132,250,7,13
	.byte	'EXEVT',0
	.word	78375
	.byte	4,4,35,136,250,7,13
	.byte	'CREVT',0
	.word	76783
	.byte	4,4,35,140,250,7,13
	.byte	'SWEVT',0
	.word	81542
	.byte	4,4,35,144,250,7,13
	.byte	'reserved_1FD14',0
	.word	83706
	.byte	28,4,35,148,250,7,13
	.byte	'TRIG_ACC',0
	.word	82396
	.byte	4,4,35,176,250,7,13
	.byte	'reserved_1FD34',0
	.word	5255
	.byte	12,4,35,180,250,7,13
	.byte	'DMS',0
	.word	78002
	.byte	4,4,35,192,250,7,13
	.byte	'DCX',0
	.word	77284
	.byte	4,4,35,196,250,7,13
	.byte	'DBGTCR',0
	.word	77094
	.byte	4,4,35,200,250,7,13
	.byte	'reserved_1FD4C',0
	.word	83715
	.byte	180,1,4,35,204,250,7,13
	.byte	'PCXI',0
	.word	80344
	.byte	4,4,35,128,252,7,13
	.byte	'PSW',0
	.word	80780
	.byte	4,4,35,132,252,7,13
	.byte	'PC',0
	.word	80095
	.byte	4,4,35,136,252,7,13
	.byte	'reserved_1FE0C',0
	.word	4915
	.byte	8,4,35,140,252,7,13
	.byte	'SYSCON',0
	.word	81605
	.byte	4,4,35,148,252,7,13
	.byte	'CPU_ID',0
	.word	76657
	.byte	4,4,35,152,252,7,13
	.byte	'CORE_ID',0
	.word	76466
	.byte	4,4,35,156,252,7,13
	.byte	'BIV',0
	.word	75956
	.byte	4,4,35,160,252,7,13
	.byte	'BTV',0
	.word	76216
	.byte	4,4,35,164,252,7,13
	.byte	'ISP',0
	.word	79379
	.byte	4,4,35,168,252,7,13
	.byte	'ICR',0
	.word	79318
	.byte	4,4,35,172,252,7,13
	.byte	'reserved_1FE30',0
	.word	4915
	.byte	8,4,35,176,252,7,13
	.byte	'FCX',0
	.word	78438
	.byte	4,4,35,184,252,7,13
	.byte	'LCX',0
	.word	79631
	.byte	4,4,35,188,252,7,13
	.byte	'reserved_1FE40',0
	.word	54716
	.byte	16,4,35,192,252,7,13
	.byte	'CUS_ID',0
	.word	76846
	.byte	4,4,35,208,252,7,13
	.byte	'reserved_1FE54',0
	.word	83726
	.byte	172,1,4,35,212,252,7,13
	.byte	'D',0
	.word	83737
	.byte	64,4,35,128,254,7,13
	.byte	'reserved_1FF40',0
	.word	83746
	.byte	64,4,35,192,254,7,13
	.byte	'A',0
	.word	83755
	.byte	64,4,35,128,255,7,13
	.byte	'reserved_1FFC0',0
	.word	83746
	.byte	64,4,35,192,255,7,0,14
	.word	83764
	.byte	32
	.byte	'Ifx_CPU',0,22,210,19,3
	.word	88862
	.byte	15,6,124,9,1,16
	.byte	'IfxCpu_Id_0',0,0,16
	.byte	'IfxCpu_Id_1',0,1,16
	.byte	'IfxCpu_Id_2',0,2,16
	.byte	'IfxCpu_Id_3',0,3,16
	.byte	'IfxCpu_Id_4',0,4,16
	.byte	'IfxCpu_Id_6',0,6,16
	.byte	'IfxCpu_Id_none',0,7,0,32
	.byte	'IfxCpu_Id',0,6,133,1,3
	.word	88884
	.byte	32
	.byte	'IfxCpu_ResourceCpu',0,6,170,1,3
	.word	1610
	.byte	32
	.byte	'Ifx_SRC_SRCR_Bits',0,11,85,3
	.word	10469
	.byte	32
	.byte	'Ifx_SRC_SRCR',0,11,98,3
	.word	10759
	.byte	10
	.byte	'_Ifx_SRC_CPU_CPU',0,11,110,25,4,13
	.byte	'SB',0
	.word	10759
	.byte	4,2,35,0,0,14
	.word	89085
	.byte	32
	.byte	'Ifx_SRC_CPU_CPU',0,11,113,3
	.word	89120
	.byte	18,24
	.word	89085
	.byte	19,5,0,14
	.word	89149
	.byte	10
	.byte	'_Ifx_SRC_CPU',0,11,128,1,25,24,13
	.byte	'CPU',0
	.word	89158
	.byte	24,2,35,0,0,14
	.word	89163
	.byte	32
	.byte	'Ifx_SRC_CPU',0,11,131,1,3
	.word	89196
	.byte	10
	.byte	'_Ifx_SRC_AGBT_AGBT',0,11,146,1,25,4,13
	.byte	'SR',0
	.word	10759
	.byte	4,2,35,0,0,14
	.word	89222
	.byte	32
	.byte	'Ifx_SRC_AGBT_AGBT',0,11,149,1,3
	.word	89260
	.byte	18,4
	.word	89222
	.byte	19,0,0,14
	.word	89292
	.byte	10
	.byte	'_Ifx_SRC_AGBT',0,11,164,1,25,4,13
	.byte	'AGBT',0
	.word	89301
	.byte	4,2,35,0,0,14
	.word	89306
	.byte	32
	.byte	'Ifx_SRC_AGBT',0,11,167,1,3
	.word	89341
	.byte	10
	.byte	'_Ifx_SRC_XBAR_XBAR',0,11,182,1,25,4,13
	.byte	'SR',0
	.word	10759
	.byte	4,2,35,0,0,14
	.word	89368
	.byte	32
	.byte	'Ifx_SRC_XBAR_XBAR',0,11,185,1,3
	.word	89406
	.byte	18,12
	.word	89368
	.byte	19,2,0,14
	.word	89438
	.byte	10
	.byte	'_Ifx_SRC_XBAR',0,11,200,1,25,12,13
	.byte	'XBAR',0
	.word	89447
	.byte	12,2,35,0,0,14
	.word	89452
	.byte	32
	.byte	'Ifx_SRC_XBAR',0,11,203,1,3
	.word	89487
	.byte	18,8
	.word	10759
	.byte	19,1,0,10
	.byte	'_Ifx_SRC_CERBERUS_CERBERUS',0,11,218,1,25,8,13
	.byte	'SR',0
	.word	89514
	.byte	8,2,35,0,0,14
	.word	89523
	.byte	32
	.byte	'Ifx_SRC_CERBERUS_CERBERUS',0,11,221,1,3
	.word	89569
	.byte	14
	.word	89523
	.byte	10
	.byte	'_Ifx_SRC_CERBERUS',0,11,236,1,25,8,13
	.byte	'CERBERUS',0
	.word	89609
	.byte	8,2,35,0,0,14
	.word	89614
	.byte	32
	.byte	'Ifx_SRC_CERBERUS',0,11,239,1,3
	.word	89657
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN_ASCLIN',0,11,254,1,25,12,13
	.byte	'TX',0
	.word	10759
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	10759
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10759
	.byte	4,2,35,8,0,14
	.word	89688
	.byte	32
	.byte	'Ifx_SRC_ASCLIN_ASCLIN',0,11,131,2,3
	.word	89755
	.byte	18,144,1
	.word	89688
	.byte	19,11,0,14
	.word	89791
	.byte	10
	.byte	'_Ifx_SRC_ASCLIN',0,11,146,2,25,144,1,13
	.byte	'ASCLIN',0
	.word	89801
	.byte	144,1,2,35,0,0,14
	.word	89806
	.byte	32
	.byte	'Ifx_SRC_ASCLIN',0,11,149,2,3
	.word	89847
	.byte	10
	.byte	'_Ifx_SRC_QSPI_QSPI',0,11,164,2,25,20,13
	.byte	'TX',0
	.word	10759
	.byte	4,2,35,0,13
	.byte	'RX',0
	.word	10759
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10759
	.byte	4,2,35,8,13
	.byte	'PT',0
	.word	10759
	.byte	4,2,35,12,13
	.byte	'U',0
	.word	10759
	.byte	4,2,35,16,0,14
	.word	89876
	.byte	32
	.byte	'Ifx_SRC_QSPI_QSPI',0,11,171,2,3
	.word	89962
	.byte	18,120
	.word	89876
	.byte	19,5,0,14
	.word	89994
	.byte	10
	.byte	'_Ifx_SRC_QSPI',0,11,186,2,25,120,13
	.byte	'QSPI',0
	.word	90003
	.byte	120,2,35,0,0,14
	.word	90008
	.byte	32
	.byte	'Ifx_SRC_QSPI',0,11,189,2,3
	.word	90043
	.byte	10
	.byte	'_Ifx_SRC_HSCT_HSCT',0,11,204,2,25,4,13
	.byte	'SR',0
	.word	10759
	.byte	4,2,35,0,0,14
	.word	90070
	.byte	32
	.byte	'Ifx_SRC_HSCT_HSCT',0,11,207,2,3
	.word	90108
	.byte	18,8
	.word	90070
	.byte	19,1,0,14
	.word	90140
	.byte	10
	.byte	'_Ifx_SRC_HSCT',0,11,222,2,25,8,13
	.byte	'HSCT',0
	.word	90149
	.byte	8,2,35,0,0,14
	.word	90154
	.byte	32
	.byte	'Ifx_SRC_HSCT',0,11,225,2,3
	.word	90189
	.byte	10
	.byte	'_Ifx_SRC_HSSL_HSSL_CH',0,11,240,2,25,16,13
	.byte	'COK',0
	.word	10759
	.byte	4,2,35,0,13
	.byte	'RDI',0
	.word	10759
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10759
	.byte	4,2,35,8,13
	.byte	'TRG',0
	.word	10759
	.byte	4,2,35,12,0,14
	.word	90216
	.byte	32
	.byte	'Ifx_SRC_HSSL_HSSL_CH',0,11,246,2,3
	.word	90297
	.byte	18,64
	.word	90216
	.byte	19,3,0,14
	.word	90332
	.byte	10
	.byte	'_Ifx_SRC_HSSL_HSSL',0,11,133,3,25,68,13
	.byte	'CH',0
	.word	90341
	.byte	64,2,35,0,13
	.byte	'EXI',0
	.word	10759
	.byte	4,2,35,64,0,14
	.word	90346
	.byte	32
	.byte	'Ifx_SRC_HSSL_HSSL',0,11,137,3,3
	.word	90397
	.byte	18,136,1
	.word	90346
	.byte	19,1,0,14
	.word	90429
	.byte	10
	.byte	'_Ifx_SRC_HSSL',0,11,152,3,25,136,1,13
	.byte	'HSSL',0
	.word	90439
	.byte	136,1,2,35,0,0,14
	.word	90444
	.byte	32
	.byte	'Ifx_SRC_HSSL',0,11,155,3,3
	.word	90481
	.byte	10
	.byte	'_Ifx_SRC_I2C_I2C',0,11,170,3,25,16,13
	.byte	'DTR',0
	.word	10759
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	10759
	.byte	4,2,35,4,13
	.byte	'P',0
	.word	10759
	.byte	4,2,35,8,13
	.byte	'reserved_C',0
	.word	3095
	.byte	4,2,35,12,0,14
	.word	90508
	.byte	32
	.byte	'Ifx_SRC_I2C_I2C',0,11,176,3,3
	.word	90589
	.byte	18,32
	.word	90508
	.byte	19,1,0,14
	.word	90619
	.byte	10
	.byte	'_Ifx_SRC_I2C',0,11,191,3,25,32,13
	.byte	'I2C',0
	.word	90628
	.byte	32,2,35,0,0,14
	.word	90633
	.byte	32
	.byte	'Ifx_SRC_I2C',0,11,194,3,3
	.word	90666
	.byte	10
	.byte	'_Ifx_SRC_SENT_SENT',0,11,209,3,25,4,13
	.byte	'SR',0
	.word	10759
	.byte	4,2,35,0,0,14
	.word	90692
	.byte	32
	.byte	'Ifx_SRC_SENT_SENT',0,11,212,3,3
	.word	90730
	.byte	18,40
	.word	90692
	.byte	19,9,0,14
	.word	90762
	.byte	10
	.byte	'_Ifx_SRC_SENT',0,11,227,3,25,40,13
	.byte	'SENT',0
	.word	90771
	.byte	40,2,35,0,0,14
	.word	90776
	.byte	32
	.byte	'Ifx_SRC_SENT',0,11,230,3,3
	.word	90811
	.byte	18,20
	.word	10759
	.byte	19,4,0,10
	.byte	'_Ifx_SRC_MSC_MSC',0,11,245,3,25,20,13
	.byte	'SR',0
	.word	90838
	.byte	20,2,35,0,0,14
	.word	90847
	.byte	32
	.byte	'Ifx_SRC_MSC_MSC',0,11,248,3,3
	.word	90883
	.byte	18,80
	.word	90847
	.byte	19,3,0,14
	.word	90913
	.byte	10
	.byte	'_Ifx_SRC_MSC',0,11,135,4,25,80,13
	.byte	'MSC',0
	.word	90922
	.byte	80,2,35,0,0,14
	.word	90927
	.byte	32
	.byte	'Ifx_SRC_MSC',0,11,138,4,3
	.word	90960
	.byte	18,16
	.word	10759
	.byte	19,3,0,10
	.byte	'_Ifx_SRC_CCU6_CCU',0,11,153,4,25,16,13
	.byte	'SR',0
	.word	90986
	.byte	16,2,35,0,0,14
	.word	90995
	.byte	32
	.byte	'Ifx_SRC_CCU6_CCU',0,11,156,4,3
	.word	91032
	.byte	18,32
	.word	90995
	.byte	19,1,0,14
	.word	91063
	.byte	10
	.byte	'_Ifx_SRC_CCU6',0,11,171,4,25,32,13
	.byte	'CCU',0
	.word	91072
	.byte	32,2,35,0,0,14
	.word	91077
	.byte	32
	.byte	'Ifx_SRC_CCU6',0,11,174,4,3
	.word	91111
	.byte	10
	.byte	'_Ifx_SRC_GPT12_GPT12',0,11,189,4,25,24,13
	.byte	'CIRQ',0
	.word	10759
	.byte	4,2,35,0,13
	.byte	'T2',0
	.word	10759
	.byte	4,2,35,4,13
	.byte	'T3',0
	.word	10759
	.byte	4,2,35,8,13
	.byte	'T4',0
	.word	10759
	.byte	4,2,35,12,13
	.byte	'T5',0
	.word	10759
	.byte	4,2,35,16,13
	.byte	'T6',0
	.word	10759
	.byte	4,2,35,20,0,14
	.word	91138
	.byte	32
	.byte	'Ifx_SRC_GPT12_GPT12',0,11,197,4,3
	.word	91240
	.byte	18,24
	.word	91138
	.byte	19,0,0,14
	.word	91274
	.byte	10
	.byte	'_Ifx_SRC_GPT12',0,11,212,4,25,24,13
	.byte	'GPT12',0
	.word	91283
	.byte	24,2,35,0,0,14
	.word	91288
	.byte	32
	.byte	'Ifx_SRC_GPT12',0,11,215,4,3
	.word	91325
	.byte	10
	.byte	'_Ifx_SRC_STM_STM',0,11,230,4,25,8,13
	.byte	'SR',0
	.word	89514
	.byte	8,2,35,0,0,14
	.word	91353
	.byte	32
	.byte	'Ifx_SRC_STM_STM',0,11,233,4,3
	.word	91389
	.byte	18,48
	.word	91353
	.byte	19,5,0,14
	.word	91419
	.byte	10
	.byte	'_Ifx_SRC_STM',0,11,248,4,25,48,13
	.byte	'STM',0
	.word	91428
	.byte	48,2,35,0,0,14
	.word	91433
	.byte	32
	.byte	'Ifx_SRC_STM',0,11,251,4,3
	.word	91466
	.byte	10
	.byte	'_Ifx_SRC_FCE_FCE0',0,11,138,5,25,4,13
	.byte	'SR',0
	.word	10759
	.byte	4,2,35,0,0,14
	.word	91492
	.byte	32
	.byte	'Ifx_SRC_FCE_FCE0',0,11,141,5,3
	.word	91529
	.byte	14
	.word	91492
	.byte	10
	.byte	'_Ifx_SRC_FCE',0,11,156,5,25,4,13
	.byte	'FCE0',0
	.word	91560
	.byte	4,2,35,0,0,14
	.word	91565
	.byte	32
	.byte	'Ifx_SRC_FCE',0,11,159,5,3
	.word	91599
	.byte	18,32
	.word	596
	.byte	19,31,0,18,128,4
	.word	10759
	.byte	19,127,0,10
	.byte	'_Ifx_SRC_DMA_DMA',0,11,174,5,25,176,4,13
	.byte	'ERR',0
	.word	90986
	.byte	16,2,35,0,13
	.byte	'reserved_10',0
	.word	91625
	.byte	32,2,35,16,13
	.byte	'CH',0
	.word	91634
	.byte	128,4,2,35,48,0,14
	.word	91644
	.byte	32
	.byte	'Ifx_SRC_DMA_DMA',0,11,179,5,3
	.word	91716
	.byte	18,176,4
	.word	91644
	.byte	19,0,0,14
	.word	91746
	.byte	10
	.byte	'_Ifx_SRC_DMA',0,11,194,5,25,176,4,13
	.byte	'DMA',0
	.word	91756
	.byte	176,4,2,35,0,0,14
	.word	91761
	.byte	32
	.byte	'Ifx_SRC_DMA',0,11,197,5,3
	.word	91796
	.byte	10
	.byte	'_Ifx_SRC_SDMMC_SDMMC',0,11,212,5,25,8,13
	.byte	'ERR',0
	.word	10759
	.byte	4,2,35,0,13
	.byte	'DMA',0
	.word	10759
	.byte	4,2,35,4,0,14
	.word	91822
	.byte	32
	.byte	'Ifx_SRC_SDMMC_SDMMC',0,11,216,5,3
	.word	91876
	.byte	18,8
	.word	91822
	.byte	19,0,0,14
	.word	91910
	.byte	10
	.byte	'_Ifx_SRC_SDMMC',0,11,231,5,25,8,13
	.byte	'SDMMC',0
	.word	91919
	.byte	8,2,35,0,0,14
	.word	91924
	.byte	32
	.byte	'Ifx_SRC_SDMMC',0,11,234,5,3
	.word	91961
	.byte	18,40
	.word	10759
	.byte	19,9,0,10
	.byte	'_Ifx_SRC_GETH_GETH',0,11,249,5,25,40,13
	.byte	'SR',0
	.word	91989
	.byte	40,2,35,0,0,14
	.word	91998
	.byte	32
	.byte	'Ifx_SRC_GETH_GETH',0,11,252,5,3
	.word	92036
	.byte	18,40
	.word	91998
	.byte	19,0,0,14
	.word	92068
	.byte	10
	.byte	'_Ifx_SRC_GETH',0,11,139,6,25,40,13
	.byte	'GETH',0
	.word	92077
	.byte	40,2,35,0,0,14
	.word	92082
	.byte	32
	.byte	'Ifx_SRC_GETH',0,11,142,6,3
	.word	92117
	.byte	18,64
	.word	10759
	.byte	19,15,0,10
	.byte	'_Ifx_SRC_CAN_CAN',0,11,157,6,25,64,13
	.byte	'INT',0
	.word	92144
	.byte	64,2,35,0,0,14
	.word	92153
	.byte	32
	.byte	'Ifx_SRC_CAN_CAN',0,11,160,6,3
	.word	92190
	.byte	18,192,1
	.word	92153
	.byte	19,2,0,14
	.word	92220
	.byte	10
	.byte	'_Ifx_SRC_CAN',0,11,175,6,25,192,1,13
	.byte	'CAN',0
	.word	92230
	.byte	192,1,2,35,0,0,14
	.word	92235
	.byte	32
	.byte	'Ifx_SRC_CAN',0,11,178,6,3
	.word	92270
	.byte	10
	.byte	'_Ifx_SRC_VADC_G',0,11,193,6,25,16,13
	.byte	'SR0',0
	.word	10759
	.byte	4,2,35,0,13
	.byte	'SR1',0
	.word	10759
	.byte	4,2,35,4,13
	.byte	'SR2',0
	.word	10759
	.byte	4,2,35,8,13
	.byte	'SR3',0
	.word	10759
	.byte	4,2,35,12,0,14
	.word	92296
	.byte	32
	.byte	'Ifx_SRC_VADC_G',0,11,199,6,3
	.word	92371
	.byte	10
	.byte	'_Ifx_SRC_VADC_FC',0,11,214,6,25,4,13
	.byte	'SR0',0
	.word	10759
	.byte	4,2,35,0,0,14
	.word	92400
	.byte	32
	.byte	'Ifx_SRC_VADC_FC',0,11,217,6,3
	.word	92437
	.byte	18,192,1
	.word	92296
	.byte	19,11,0,14
	.word	92467
	.byte	18,32
	.word	92400
	.byte	19,7,0,14
	.word	92482
	.byte	18,32
	.word	92296
	.byte	19,1,0,14
	.word	92496
	.byte	10
	.byte	'_Ifx_SRC_VADC',0,11,233,6,25,128,2,13
	.byte	'G',0
	.word	92477
	.byte	192,1,2,35,0,13
	.byte	'FC',0
	.word	92491
	.byte	32,3,35,192,1,13
	.byte	'CG',0
	.word	92505
	.byte	32,3,35,224,1,0,14
	.word	92510
	.byte	32
	.byte	'Ifx_SRC_VADC',0,11,238,6,3
	.word	92570
	.byte	10
	.byte	'_Ifx_SRC_DSADC_DSADC',0,11,253,6,25,8,13
	.byte	'SRM',0
	.word	10759
	.byte	4,2,35,0,13
	.byte	'SRA',0
	.word	10759
	.byte	4,2,35,4,0,14
	.word	92597
	.byte	32
	.byte	'Ifx_SRC_DSADC_DSADC',0,11,129,7,3
	.word	92651
	.byte	18,112
	.word	92597
	.byte	19,13,0,14
	.word	92685
	.byte	10
	.byte	'_Ifx_SRC_DSADC',0,11,144,7,25,112,13
	.byte	'DSADC',0
	.word	92694
	.byte	112,2,35,0,0,14
	.word	92699
	.byte	32
	.byte	'Ifx_SRC_DSADC',0,11,147,7,3
	.word	92736
	.byte	10
	.byte	'_Ifx_SRC_ERAY_ERAY',0,11,162,7,25,48,13
	.byte	'INT0',0
	.word	10759
	.byte	4,2,35,0,13
	.byte	'INT1',0
	.word	10759
	.byte	4,2,35,4,13
	.byte	'TINT0',0
	.word	10759
	.byte	4,2,35,8,13
	.byte	'TINT1',0
	.word	10759
	.byte	4,2,35,12,13
	.byte	'NDAT0',0
	.word	10759
	.byte	4,2,35,16,13
	.byte	'NDAT1',0
	.word	10759
	.byte	4,2,35,20,13
	.byte	'MBSC0',0
	.word	10759
	.byte	4,2,35,24,13
	.byte	'MBSC1',0
	.word	10759
	.byte	4,2,35,28,13
	.byte	'OBUSY',0
	.word	10759
	.byte	4,2,35,32,13
	.byte	'IBUSY',0
	.word	10759
	.byte	4,2,35,36,13
	.byte	'reserved_28',0
	.word	4915
	.byte	8,2,35,40,0,14
	.word	92764
	.byte	32
	.byte	'Ifx_SRC_ERAY_ERAY',0,11,175,7,3
	.word	92959
	.byte	18,96
	.word	92764
	.byte	19,1,0,14
	.word	92991
	.byte	10
	.byte	'_Ifx_SRC_ERAY',0,11,190,7,25,96,13
	.byte	'ERAY',0
	.word	93000
	.byte	96,2,35,0,0,14
	.word	93005
	.byte	32
	.byte	'Ifx_SRC_ERAY',0,11,193,7,3
	.word	93040
	.byte	10
	.byte	'_Ifx_SRC_HSM_HSM',0,11,208,7,25,8,13
	.byte	'HSM',0
	.word	89514
	.byte	8,2,35,0,0,14
	.word	93067
	.byte	32
	.byte	'Ifx_SRC_HSM_HSM',0,11,211,7,3
	.word	93104
	.byte	18,8
	.word	93067
	.byte	19,0,0,14
	.word	93134
	.byte	10
	.byte	'_Ifx_SRC_HSM',0,11,226,7,25,8,13
	.byte	'HSM',0
	.word	93143
	.byte	8,2,35,0,0,14
	.word	93148
	.byte	32
	.byte	'Ifx_SRC_HSM',0,11,229,7,3
	.word	93181
	.byte	10
	.byte	'_Ifx_SRC_SCU',0,11,244,7,25,16,13
	.byte	'SCUERU',0
	.word	90986
	.byte	16,2,35,0,0,14
	.word	93207
	.byte	32
	.byte	'Ifx_SRC_SCU',0,11,247,7,3
	.word	93243
	.byte	10
	.byte	'_Ifx_SRC_PMS_PMS',0,11,134,8,25,4,13
	.byte	'SR',0
	.word	10759
	.byte	4,2,35,0,0,14
	.word	93269
	.byte	32
	.byte	'Ifx_SRC_PMS_PMS',0,11,137,8,3
	.word	93305
	.byte	18,16
	.word	93269
	.byte	19,3,0,14
	.word	93335
	.byte	10
	.byte	'_Ifx_SRC_PMS',0,11,152,8,25,16,13
	.byte	'PMS',0
	.word	93344
	.byte	16,2,35,0,0,14
	.word	93349
	.byte	32
	.byte	'Ifx_SRC_PMS',0,11,155,8,3
	.word	93382
	.byte	18,12
	.word	10759
	.byte	19,2,0,10
	.byte	'_Ifx_SRC_SMU_SMU',0,11,170,8,25,12,13
	.byte	'SR',0
	.word	93408
	.byte	12,2,35,0,0,14
	.word	93417
	.byte	32
	.byte	'Ifx_SRC_SMU_SMU',0,11,173,8,3
	.word	93453
	.byte	18,12
	.word	93417
	.byte	19,0,0,14
	.word	93483
	.byte	10
	.byte	'_Ifx_SRC_SMU',0,11,188,8,25,12,13
	.byte	'SMU',0
	.word	93492
	.byte	12,2,35,0,0,14
	.word	93497
	.byte	32
	.byte	'Ifx_SRC_SMU',0,11,191,8,3
	.word	93530
	.byte	18,32
	.word	10759
	.byte	19,7,0,10
	.byte	'_Ifx_SRC_PSI5_PSI5',0,11,206,8,25,32,13
	.byte	'SR',0
	.word	93556
	.byte	32,2,35,0,0,14
	.word	93565
	.byte	32
	.byte	'Ifx_SRC_PSI5_PSI5',0,11,209,8,3
	.word	93603
	.byte	18,32
	.word	93565
	.byte	19,0,0,14
	.word	93635
	.byte	10
	.byte	'_Ifx_SRC_PSI5',0,11,224,8,25,32,13
	.byte	'PSI5',0
	.word	93644
	.byte	32,2,35,0,0,14
	.word	93649
	.byte	32
	.byte	'Ifx_SRC_PSI5',0,11,227,8,3
	.word	93684
	.byte	10
	.byte	'_Ifx_SRC_HSPDM_HSPDM0',0,11,242,8,25,12,13
	.byte	'BFR',0
	.word	10759
	.byte	4,2,35,0,13
	.byte	'RAMP',0
	.word	10759
	.byte	4,2,35,4,13
	.byte	'ERR',0
	.word	10759
	.byte	4,2,35,8,0,14
	.word	93711
	.byte	32
	.byte	'Ifx_SRC_HSPDM_HSPDM0',0,11,247,8,3
	.word	93780
	.byte	14
	.word	93711
	.byte	10
	.byte	'_Ifx_SRC_HSPDM',0,11,134,9,25,12,13
	.byte	'HSPDM0',0
	.word	93815
	.byte	12,2,35,0,0,14
	.word	93820
	.byte	32
	.byte	'Ifx_SRC_HSPDM',0,11,137,9,3
	.word	93858
	.byte	10
	.byte	'_Ifx_SRC_DAM_DAM',0,11,152,9,25,24,13
	.byte	'LI0',0
	.word	10759
	.byte	4,2,35,0,13
	.byte	'RI0',0
	.word	10759
	.byte	4,2,35,4,13
	.byte	'LI1',0
	.word	10759
	.byte	4,2,35,8,13
	.byte	'RI1',0
	.word	10759
	.byte	4,2,35,12,13
	.byte	'DR',0
	.word	10759
	.byte	4,2,35,16,13
	.byte	'ERR',0
	.word	10759
	.byte	4,2,35,20,0,14
	.word	93886
	.byte	32
	.byte	'Ifx_SRC_DAM_DAM',0,11,160,9,3
	.word	93987
	.byte	18,48
	.word	93886
	.byte	19,1,0,14
	.word	94017
	.byte	10
	.byte	'_Ifx_SRC_DAM',0,11,175,9,25,48,13
	.byte	'DAM',0
	.word	94026
	.byte	48,2,35,0,0,14
	.word	94031
	.byte	32
	.byte	'Ifx_SRC_DAM',0,11,178,9,3
	.word	94064
	.byte	10
	.byte	'_Ifx_SRC_PSI5S_PSI5S',0,11,193,9,25,32,13
	.byte	'SR',0
	.word	93556
	.byte	32,2,35,0,0,14
	.word	94090
	.byte	32
	.byte	'Ifx_SRC_PSI5S_PSI5S',0,11,196,9,3
	.word	94130
	.byte	18,32
	.word	94090
	.byte	19,0,0,14
	.word	94164
	.byte	10
	.byte	'_Ifx_SRC_PSI5S',0,11,211,9,25,32,13
	.byte	'PSI5S',0
	.word	94173
	.byte	32,2,35,0,0,14
	.word	94178
	.byte	32
	.byte	'Ifx_SRC_PSI5S',0,11,214,9,3
	.word	94215
	.byte	10
	.byte	'_Ifx_SRC_RIF_RIF',0,11,229,9,25,8,13
	.byte	'ERR',0
	.word	10759
	.byte	4,2,35,0,13
	.byte	'INT',0
	.word	10759
	.byte	4,2,35,4,0,14
	.word	94243
	.byte	32
	.byte	'Ifx_SRC_RIF_RIF',0,11,233,9,3
	.word	94293
	.byte	18,16
	.word	94243
	.byte	19,1,0,14
	.word	94323
	.byte	10
	.byte	'_Ifx_SRC_RIF',0,11,248,9,25,16,13
	.byte	'RIF',0
	.word	94332
	.byte	16,2,35,0,0,14
	.word	94337
	.byte	32
	.byte	'Ifx_SRC_RIF',0,11,251,9,3
	.word	94370
	.byte	10
	.byte	'_Ifx_SRC_SPU_SPU',0,11,138,10,25,8,13
	.byte	'INT',0
	.word	10759
	.byte	4,2,35,0,13
	.byte	'ERR',0
	.word	10759
	.byte	4,2,35,4,0,14
	.word	94396
	.byte	32
	.byte	'Ifx_SRC_SPU_SPU',0,11,142,10,3
	.word	94446
	.byte	18,16
	.word	94396
	.byte	19,1,0,14
	.word	94476
	.byte	10
	.byte	'_Ifx_SRC_SPU',0,11,157,10,25,16,13
	.byte	'SPU',0
	.word	94485
	.byte	16,2,35,0,0,14
	.word	94490
	.byte	32
	.byte	'Ifx_SRC_SPU',0,11,160,10,3
	.word	94523
	.byte	10
	.byte	'_Ifx_SRC_GPSR_GPSR',0,11,175,10,25,32,13
	.byte	'SR',0
	.word	93556
	.byte	32,2,35,0,0,14
	.word	94549
	.byte	32
	.byte	'Ifx_SRC_GPSR_GPSR',0,11,178,10,3
	.word	94587
	.byte	18,192,1
	.word	94549
	.byte	19,5,0,14
	.word	94619
	.byte	10
	.byte	'_Ifx_SRC_GPSR',0,11,193,10,25,192,1,13
	.byte	'GPSR',0
	.word	94629
	.byte	192,1,2,35,0,0,14
	.word	94634
	.byte	32
	.byte	'Ifx_SRC_GPSR',0,11,196,10,3
	.word	94671
	.byte	10
	.byte	'_Ifx_STM_ACCEN0_Bits',0,23,68,16,4,11
	.byte	'EN0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	596
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	596
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	596
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	596
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	596
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	596
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	596
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	596
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	596
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	596
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	596
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	596
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	596
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	596
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	596
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	596
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	596
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	596
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	596
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	596
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	596
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	596
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_STM_ACCEN0_Bits',0,23,102,3
	.word	94698
	.byte	10
	.byte	'_Ifx_STM_ACCEN1_Bits',0,23,105,16,4,11
	.byte	'reserved_0',0,4
	.word	421
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_ACCEN1_Bits',0,23,108,3
	.word	95255
	.byte	10
	.byte	'_Ifx_STM_CAP_Bits',0,23,111,16,4,11
	.byte	'STMCAP_63_32',0,4
	.word	421
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_CAP_Bits',0,23,114,3
	.word	95332
	.byte	10
	.byte	'_Ifx_STM_CAPSV_Bits',0,23,117,16,4,11
	.byte	'STMCAP_63_32',0,4
	.word	421
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_CAPSV_Bits',0,23,120,3
	.word	95405
	.byte	10
	.byte	'_Ifx_STM_CLC_Bits',0,23,123,16,4,11
	.byte	'DISR',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	421
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_STM_CLC_Bits',0,23,130,1,3
	.word	95482
	.byte	10
	.byte	'_Ifx_STM_CMCON_Bits',0,23,133,1,16,4,11
	.byte	'MSIZE0',0,1
	.word	596
	.byte	5,3,2,35,0,11
	.byte	'reserved_5',0,1
	.word	596
	.byte	3,0,2,35,0,11
	.byte	'MSTART0',0,1
	.word	596
	.byte	5,3,2,35,1,11
	.byte	'reserved_13',0,1
	.word	596
	.byte	3,0,2,35,1,11
	.byte	'MSIZE1',0,1
	.word	596
	.byte	5,3,2,35,2,11
	.byte	'reserved_21',0,1
	.word	596
	.byte	3,0,2,35,2,11
	.byte	'MSTART1',0,1
	.word	596
	.byte	5,3,2,35,3,11
	.byte	'reserved_29',0,1
	.word	596
	.byte	3,0,2,35,3,0,32
	.byte	'Ifx_STM_CMCON_Bits',0,23,143,1,3
	.word	95624
	.byte	10
	.byte	'_Ifx_STM_CMP_Bits',0,23,146,1,16,4,11
	.byte	'CMPVAL',0,4
	.word	421
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_CMP_Bits',0,23,149,1,3
	.word	95844
	.byte	10
	.byte	'_Ifx_STM_ICR_Bits',0,23,152,1,16,4,11
	.byte	'CMP0EN',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'CMP0IR',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'CMP0OS',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'reserved_3',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'CMP1EN',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'CMP1IR',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'CMP1OS',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'reserved_7',0,4
	.word	421
	.byte	25,0,2,35,0,0,32
	.byte	'Ifx_STM_ICR_Bits',0,23,162,1,3
	.word	95913
	.byte	10
	.byte	'_Ifx_STM_ID_Bits',0,23,165,1,16,4,11
	.byte	'MODREV',0,1
	.word	596
	.byte	8,0,2,35,0,11
	.byte	'MODTYPE',0,1
	.word	596
	.byte	8,0,2,35,1,11
	.byte	'MODNUM',0,2
	.word	613
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_STM_ID_Bits',0,23,170,1,3
	.word	96116
	.byte	10
	.byte	'_Ifx_STM_ISCR_Bits',0,23,173,1,16,4,11
	.byte	'CMP0IRR',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'CMP0IRS',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'CMP1IRR',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'CMP1IRS',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	421
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_STM_ISCR_Bits',0,23,180,1,3
	.word	96220
	.byte	10
	.byte	'_Ifx_STM_KRST0_Bits',0,23,183,1,16,4,11
	.byte	'RST',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'RSTSTAT',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	421
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_STM_KRST0_Bits',0,23,188,1,3
	.word	96371
	.byte	10
	.byte	'_Ifx_STM_KRST1_Bits',0,23,191,1,16,4,11
	.byte	'RST',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	421
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_STM_KRST1_Bits',0,23,195,1,3
	.word	96482
	.byte	10
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,23,198,1,16,4,11
	.byte	'CLR',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'reserved_1',0,4
	.word	421
	.byte	31,0,2,35,0,0,32
	.byte	'Ifx_STM_KRSTCLR_Bits',0,23,202,1,3
	.word	96574
	.byte	10
	.byte	'_Ifx_STM_OCS_Bits',0,23,205,1,16,4,11
	.byte	'reserved_0',0,1
	.word	596
	.byte	3,5,2,35,0,11
	.byte	'reserved_3',0,4
	.word	421
	.byte	21,8,2,35,0,11
	.byte	'SUS',0,1
	.word	596
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	596
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	596
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	596
	.byte	2,0,2,35,3,0,32
	.byte	'Ifx_STM_OCS_Bits',0,23,213,1,3
	.word	96670
	.byte	10
	.byte	'_Ifx_STM_TIM0_Bits',0,23,216,1,16,4,11
	.byte	'STM_31_0',0,4
	.word	421
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM0_Bits',0,23,219,1,3
	.word	96838
	.byte	10
	.byte	'_Ifx_STM_TIM0SV_Bits',0,23,222,1,16,4,11
	.byte	'STM_31_0',0,4
	.word	421
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM0SV_Bits',0,23,225,1,3
	.word	96911
	.byte	10
	.byte	'_Ifx_STM_TIM1_Bits',0,23,228,1,16,4,11
	.byte	'STM_35_4',0,4
	.word	421
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM1_Bits',0,23,231,1,3
	.word	96988
	.byte	10
	.byte	'_Ifx_STM_TIM2_Bits',0,23,234,1,16,4,11
	.byte	'STM_39_8',0,4
	.word	421
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM2_Bits',0,23,237,1,3
	.word	97061
	.byte	10
	.byte	'_Ifx_STM_TIM3_Bits',0,23,240,1,16,4,11
	.byte	'STM_43_12',0,4
	.word	421
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM3_Bits',0,23,243,1,3
	.word	97134
	.byte	10
	.byte	'_Ifx_STM_TIM4_Bits',0,23,246,1,16,4,11
	.byte	'STM_47_16',0,4
	.word	421
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM4_Bits',0,23,249,1,3
	.word	97208
	.byte	10
	.byte	'_Ifx_STM_TIM5_Bits',0,23,252,1,16,4,11
	.byte	'STM_51_20',0,4
	.word	421
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM5_Bits',0,23,255,1,3
	.word	97282
	.byte	10
	.byte	'_Ifx_STM_TIM6_Bits',0,23,130,2,16,4,11
	.byte	'STM_63_32',0,4
	.word	421
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_STM_TIM6_Bits',0,23,133,2,3
	.word	97356
	.byte	12,23,141,2,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	94698
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ACCEN0',0,23,146,2,3
	.word	97430
	.byte	12,23,149,2,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	95255
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ACCEN1',0,23,154,2,3
	.word	97494
	.byte	12,23,157,2,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	95332
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CAP',0,23,162,2,3
	.word	97558
	.byte	12,23,165,2,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	95405
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CAPSV',0,23,170,2,3
	.word	97619
	.byte	12,23,173,2,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	95482
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CLC',0,23,178,2,3
	.word	97682
	.byte	12,23,181,2,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	95624
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CMCON',0,23,186,2,3
	.word	97743
	.byte	12,23,189,2,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	95844
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_CMP',0,23,194,2,3
	.word	97806
	.byte	12,23,197,2,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	95913
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ICR',0,23,202,2,3
	.word	97867
	.byte	12,23,205,2,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	96116
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ID',0,23,210,2,3
	.word	97928
	.byte	12,23,213,2,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	96220
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_ISCR',0,23,218,2,3
	.word	97988
	.byte	12,23,221,2,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	96371
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_KRST0',0,23,226,2,3
	.word	98050
	.byte	12,23,229,2,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	96482
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_KRST1',0,23,234,2,3
	.word	98113
	.byte	12,23,237,2,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	96574
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_KRSTCLR',0,23,242,2,3
	.word	98176
	.byte	12,23,245,2,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	96670
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_OCS',0,23,250,2,3
	.word	98241
	.byte	12,23,253,2,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	96838
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM0',0,23,130,3,3
	.word	98302
	.byte	12,23,133,3,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	96911
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM0SV',0,23,138,3,3
	.word	98364
	.byte	12,23,141,3,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	96988
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM1',0,23,146,3,3
	.word	98428
	.byte	12,23,149,3,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	97061
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM2',0,23,154,3,3
	.word	98490
	.byte	12,23,157,3,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	97134
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM3',0,23,162,3,3
	.word	98552
	.byte	12,23,165,3,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	97208
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM4',0,23,170,3,3
	.word	98614
	.byte	12,23,173,3,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	97282
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM5',0,23,178,3,3
	.word	98676
	.byte	12,23,181,3,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	97356
	.byte	4,2,35,0,0,32
	.byte	'Ifx_STM_TIM6',0,23,186,3,3
	.word	98738
	.byte	15,5,141,1,9,1,16
	.byte	'IfxCpu_CounterMode_normal',0,0,16
	.byte	'IfxCpu_CounterMode_task',0,1,0,32
	.byte	'IfxCpu_CounterMode',0,5,145,1,3
	.word	98800
	.byte	29,5,198,1,9,6,13
	.byte	'counter',0
	.word	1857
	.byte	4,2,35,0,13
	.byte	'overlfow',0
	.word	596
	.byte	1,2,35,4,0,32
	.byte	'IfxCpu_Counter',0,5,202,1,3
	.word	98889
	.byte	29,5,210,1,9,32,13
	.byte	'instruction',0
	.word	98889
	.byte	6,2,35,0,13
	.byte	'clock',0
	.word	98889
	.byte	6,2,35,6,13
	.byte	'counter1',0
	.word	98889
	.byte	6,2,35,12,13
	.byte	'counter2',0
	.word	98889
	.byte	6,2,35,18,13
	.byte	'counter3',0
	.word	98889
	.byte	6,2,35,24,0,32
	.byte	'IfxCpu_Perf',0,5,217,1,3
	.word	98955
	.byte	32
	.byte	'Ifx_P_ACCEN0_Bits',0,8,102,3
	.word	8443
	.byte	32
	.byte	'Ifx_P_ACCEN1_Bits',0,8,108,3
	.word	8356
	.byte	32
	.byte	'Ifx_P_ESR_Bits',0,8,130,1,3
	.word	4924
	.byte	32
	.byte	'Ifx_P_ID_Bits',0,8,138,1,3
	.word	2975
	.byte	32
	.byte	'Ifx_P_IN_Bits',0,8,160,1,3
	.word	3971
	.byte	32
	.byte	'Ifx_P_IOCR0_Bits',0,8,173,1,3
	.word	3104
	.byte	32
	.byte	'Ifx_P_IOCR12_Bits',0,8,186,1,3
	.word	3751
	.byte	32
	.byte	'Ifx_P_IOCR4_Bits',0,8,199,1,3
	.word	3319
	.byte	32
	.byte	'Ifx_P_IOCR8_Bits',0,8,212,1,3
	.word	3534
	.byte	32
	.byte	'Ifx_P_LPCR_Bits',0,8,231,1,3
	.word	8018
	.byte	32
	.byte	'Ifx_P_OMCR_Bits',0,8,253,1,3
	.word	7670
	.byte	32
	.byte	'Ifx_P_OMCR0_Bits',0,8,136,2,3
	.word	6657
	.byte	32
	.byte	'Ifx_P_OMCR12_Bits',0,8,146,2,3
	.word	7181
	.byte	32
	.byte	'Ifx_P_OMCR4_Bits',0,8,157,2,3
	.word	6831
	.byte	32
	.byte	'Ifx_P_OMCR8_Bits',0,8,168,2,3
	.word	7005
	.byte	32
	.byte	'Ifx_P_OMR_Bits',0,8,205,2,3
	.word	2404
	.byte	32
	.byte	'Ifx_P_OMSR_Bits',0,8,227,2,3
	.word	7337
	.byte	32
	.byte	'Ifx_P_OMSR0_Bits',0,8,237,2,3
	.word	5994
	.byte	32
	.byte	'Ifx_P_OMSR12_Bits',0,8,248,2,3
	.word	6482
	.byte	32
	.byte	'Ifx_P_OMSR4_Bits',0,8,131,3,3
	.word	6141
	.byte	32
	.byte	'Ifx_P_OMSR8_Bits',0,8,142,3,3
	.word	6310
	.byte	32
	.byte	'Ifx_P_OUT_Bits',0,8,164,3,3
	.word	2088
	.byte	32
	.byte	'Ifx_P_PCSR_Bits',0,8,187,3,3
	.word	5630
	.byte	32
	.byte	'Ifx_P_PDISC_Bits',0,8,209,3,3
	.word	5264
	.byte	32
	.byte	'Ifx_P_PDR0_Bits',0,8,230,3,3
	.word	4295
	.byte	32
	.byte	'Ifx_P_PDR1_Bits',0,8,251,3,3
	.word	4599
	.byte	32
	.byte	'Ifx_P_ACCEN0',0,8,136,4,3
	.word	8970
	.byte	32
	.byte	'Ifx_P_ACCEN1',0,8,144,4,3
	.word	8403
	.byte	32
	.byte	'Ifx_P_ESR',0,8,152,4,3
	.word	5215
	.byte	32
	.byte	'Ifx_P_ID',0,8,160,4,3
	.word	3055
	.byte	32
	.byte	'Ifx_P_IN',0,8,168,4,3
	.word	4246
	.byte	32
	.byte	'Ifx_P_IOCR0',0,8,176,4,3
	.word	3279
	.byte	32
	.byte	'Ifx_P_IOCR12',0,8,184,4,3
	.word	3931
	.byte	32
	.byte	'Ifx_P_IOCR4',0,8,192,4,3
	.word	3494
	.byte	32
	.byte	'Ifx_P_IOCR8',0,8,200,4,3
	.word	3711
	.byte	32
	.byte	'Ifx_P_LPCR',0,8,208,4,3
	.word	8298
	.byte	32
	.byte	'Ifx_P_OMCR',0,8,216,4,3
	.word	7978
	.byte	32
	.byte	'Ifx_P_OMCR0',0,8,224,4,3
	.word	6791
	.byte	32
	.byte	'Ifx_P_OMCR12',0,8,232,4,3
	.word	7297
	.byte	32
	.byte	'Ifx_P_OMCR4',0,8,240,4,3
	.word	6965
	.byte	32
	.byte	'Ifx_P_OMCR8',0,8,248,4,3
	.word	7141
	.byte	32
	.byte	'Ifx_P_OMR',0,8,128,5,3
	.word	2935
	.byte	32
	.byte	'Ifx_P_OMSR',0,8,136,5,3
	.word	7630
	.byte	32
	.byte	'Ifx_P_OMSR0',0,8,144,5,3
	.word	6101
	.byte	32
	.byte	'Ifx_P_OMSR12',0,8,152,5,3
	.word	6617
	.byte	32
	.byte	'Ifx_P_OMSR4',0,8,160,5,3
	.word	6270
	.byte	32
	.byte	'Ifx_P_OMSR8',0,8,168,5,3
	.word	6442
	.byte	32
	.byte	'Ifx_P_OUT',0,8,176,5,3
	.word	2364
	.byte	32
	.byte	'Ifx_P_PCSR',0,8,184,5,3
	.word	5954
	.byte	32
	.byte	'Ifx_P_PDISC',0,8,192,5,3
	.word	5590
	.byte	32
	.byte	'Ifx_P_PDR0',0,8,200,5,3
	.word	4559
	.byte	32
	.byte	'Ifx_P_PDR1',0,8,208,5,3
	.word	4875
	.byte	14
	.word	9010
	.byte	32
	.byte	'Ifx_P',0,8,128,6,3
	.word	100267
	.byte	15,7,73,9,1,16
	.byte	'IfxPort_ControlledBy_port',0,0,16
	.byte	'IfxPort_ControlledBy_hsct',0,1,0,32
	.byte	'IfxPort_ControlledBy',0,7,77,3
	.word	100287
	.byte	32
	.byte	'IfxPort_InputMode',0,7,87,3
	.word	9590
	.byte	15,7,91,9,1,16
	.byte	'IfxPort_LvdsMode_high',0,0,16
	.byte	'IfxPort_LvdsMode_medium',0,1,0,32
	.byte	'IfxPort_LvdsMode',0,7,95,3
	.word	100404
	.byte	32
	.byte	'IfxPort_OutputIdx',0,7,136,1,3
	.word	9891
	.byte	32
	.byte	'IfxPort_OutputMode',0,7,145,1,3
	.word	9795
	.byte	32
	.byte	'IfxPort_PadDriver',0,7,165,1,3
	.word	24483
	.byte	15,7,169,1,9,1,16
	.byte	'IfxPort_PadSupply_3v',0,0,16
	.byte	'IfxPort_PadSupply_5v',0,1,0,32
	.byte	'IfxPort_PadSupply',0,7,173,1,3
	.word	100567
	.byte	15,7,177,1,9,1,16
	.byte	'IfxPort_PinFunctionMode_digital',0,0,16
	.byte	'IfxPort_PinFunctionMode_analog',0,1,0,32
	.byte	'IfxPort_PinFunctionMode',0,7,181,1,3
	.word	100647
	.byte	32
	.byte	'IfxPort_State',0,7,193,1,3
	.word	10204
	.byte	32
	.byte	'IfxPort_Pin',0,7,250,1,3
	.word	24204
	.byte	10
	.byte	'_Ifx_SMU_ACCEN0_Bits',0,24,68,16,4,11
	.byte	'EN0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'EN1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'EN2',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'EN3',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'EN4',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'EN5',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'EN6',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'EN7',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'EN8',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'EN9',0,1
	.word	596
	.byte	1,6,2,35,1,11
	.byte	'EN10',0,1
	.word	596
	.byte	1,5,2,35,1,11
	.byte	'EN11',0,1
	.word	596
	.byte	1,4,2,35,1,11
	.byte	'EN12',0,1
	.word	596
	.byte	1,3,2,35,1,11
	.byte	'EN13',0,1
	.word	596
	.byte	1,2,2,35,1,11
	.byte	'EN14',0,1
	.word	596
	.byte	1,1,2,35,1,11
	.byte	'EN15',0,1
	.word	596
	.byte	1,0,2,35,1,11
	.byte	'EN16',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'EN17',0,1
	.word	596
	.byte	1,6,2,35,2,11
	.byte	'EN18',0,1
	.word	596
	.byte	1,5,2,35,2,11
	.byte	'EN19',0,1
	.word	596
	.byte	1,4,2,35,2,11
	.byte	'EN20',0,1
	.word	596
	.byte	1,3,2,35,2,11
	.byte	'EN21',0,1
	.word	596
	.byte	1,2,2,35,2,11
	.byte	'EN22',0,1
	.word	596
	.byte	1,1,2,35,2,11
	.byte	'EN23',0,1
	.word	596
	.byte	1,0,2,35,2,11
	.byte	'EN24',0,1
	.word	596
	.byte	1,7,2,35,3,11
	.byte	'EN25',0,1
	.word	596
	.byte	1,6,2,35,3,11
	.byte	'EN26',0,1
	.word	596
	.byte	1,5,2,35,3,11
	.byte	'EN27',0,1
	.word	596
	.byte	1,4,2,35,3,11
	.byte	'EN28',0,1
	.word	596
	.byte	1,3,2,35,3,11
	.byte	'EN29',0,1
	.word	596
	.byte	1,2,2,35,3,11
	.byte	'EN30',0,1
	.word	596
	.byte	1,1,2,35,3,11
	.byte	'EN31',0,1
	.word	596
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SMU_ACCEN0_Bits',0,24,102,3
	.word	100798
	.byte	10
	.byte	'_Ifx_SMU_ACCEN1_Bits',0,24,105,16,4,11
	.byte	'reserved_0',0,4
	.word	421
	.byte	32,0,2,35,0,0,32
	.byte	'Ifx_SMU_ACCEN1_Bits',0,24,108,3
	.word	101355
	.byte	10
	.byte	'_Ifx_SMU_AD_Bits',0,24,111,16,4,11
	.byte	'DF0',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'DF1',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'DF2',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'DF3',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'DF4',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'DF5',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'DF6',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'DF7',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'DF8',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'DF9',0,1
	.word	596
	.byte	1,6,2,35,1,11
	.byte	'DF10',0,1
	.word	596
	.byte	1,5,2,35,1,11
	.byte	'DF11',0,1
	.word	596
	.byte	1,4,2,35,1,11
	.byte	'DF12',0,1
	.word	596
	.byte	1,3,2,35,1,11
	.byte	'DF13',0,1
	.word	596
	.byte	1,2,2,35,1,11
	.byte	'DF14',0,1
	.word	596
	.byte	1,1,2,35,1,11
	.byte	'DF15',0,1
	.word	596
	.byte	1,0,2,35,1,11
	.byte	'DF16',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'DF17',0,1
	.word	596
	.byte	1,6,2,35,2,11
	.byte	'DF18',0,1
	.word	596
	.byte	1,5,2,35,2,11
	.byte	'DF19',0,1
	.word	596
	.byte	1,4,2,35,2,11
	.byte	'DF20',0,1
	.word	596
	.byte	1,3,2,35,2,11
	.byte	'DF21',0,1
	.word	596
	.byte	1,2,2,35,2,11
	.byte	'DF22',0,1
	.word	596
	.byte	1,1,2,35,2,11
	.byte	'DF23',0,1
	.word	596
	.byte	1,0,2,35,2,11
	.byte	'DF24',0,1
	.word	596
	.byte	1,7,2,35,3,11
	.byte	'DF25',0,1
	.word	596
	.byte	1,6,2,35,3,11
	.byte	'DF26',0,1
	.word	596
	.byte	1,5,2,35,3,11
	.byte	'DF27',0,1
	.word	596
	.byte	1,4,2,35,3,11
	.byte	'DF28',0,1
	.word	596
	.byte	1,3,2,35,3,11
	.byte	'DF29',0,1
	.word	596
	.byte	1,2,2,35,3,11
	.byte	'DF30',0,1
	.word	596
	.byte	1,1,2,35,3,11
	.byte	'DF31',0,1
	.word	596
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SMU_AD_Bits',0,24,145,1,3
	.word	101432
	.byte	10
	.byte	'_Ifx_SMU_AEX_Bits',0,24,148,1,16,4,11
	.byte	'IRQ0STS',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'IRQ1STS',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'IRQ2STS',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'RST0STS',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'RST1STS',0,1
	.word	596
	.byte	1,3,2,35,0,11
	.byte	'RST2STS',0,1
	.word	596
	.byte	1,2,2,35,0,11
	.byte	'RST3STS',0,1
	.word	596
	.byte	1,1,2,35,0,11
	.byte	'RST4STS',0,1
	.word	596
	.byte	1,0,2,35,0,11
	.byte	'RST5STS',0,1
	.word	596
	.byte	1,7,2,35,1,11
	.byte	'NMISTS',0,1
	.word	596
	.byte	1,6,2,35,1,11
	.byte	'reserved_10',0,1
	.word	596
	.byte	1,5,2,35,1,11
	.byte	'EMSSTS',0,1
	.word	596
	.byte	1,4,2,35,1,11
	.byte	'reserved_12',0,1
	.word	596
	.byte	4,0,2,35,1,11
	.byte	'IRQ0AEM',0,1
	.word	596
	.byte	1,7,2,35,2,11
	.byte	'IRQ1AEM',0,1
	.word	596
	.byte	1,6,2,35,2,11
	.byte	'IRQ2AEM',0,1
	.word	596
	.byte	1,5,2,35,2,11
	.byte	'RST0AEM',0,1
	.word	596
	.byte	1,4,2,35,2,11
	.byte	'RST1AEM',0,1
	.word	596
	.byte	1,3,2,35,2,11
	.byte	'RST2AEM',0,1
	.word	596
	.byte	1,2,2,35,2,11
	.byte	'RST3AEM',0,1
	.word	596
	.byte	1,1,2,35,2,11
	.byte	'RST4AEM',0,1
	.word	596
	.byte	1,0,2,35,2,11
	.byte	'RST5AEM',0,1
	.word	596
	.byte	1,7,2,35,3,11
	.byte	'NMIAEM',0,1
	.word	596
	.byte	1,6,2,35,3,11
	.byte	'reserved_26',0,1
	.word	596
	.byte	1,5,2,35,3,11
	.byte	'EMSAEM',0,1
	.word	596
	.byte	1,4,2,35,3,11
	.byte	'reserved_28',0,1
	.word	596
	.byte	4,0,2,35,3,0,32
	.byte	'Ifx_SMU_AEX_Bits',0,24,176,1,3
	.word	101982
	.byte	10
	.byte	'_Ifx_SMU_AEXCLR_Bits',0,24,179,1,16,4,11
	.byte	'IRQ0CLR',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'IRQ1CLR',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'IRQ2CLR',0,4
	.word	444
	.byte	1,29,2,35,0,11
	.byte	'RST0CLR',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'RST1CLR',0,4
	.word	444
	.byte	1,27,2,35,0,11
	.byte	'RST2CLR',0,4
	.word	444
	.byte	1,26,2,35,0,11
	.byte	'RST3CLR',0,4
	.word	444
	.byte	1,25,2,35,0,11
	.byte	'RST4CLR',0,4
	.word	444
	.byte	1,24,2,35,0,11
	.byte	'RST5CLR',0,4
	.word	444
	.byte	1,23,2,35,0,11
	.byte	'NMICLR',0,4
	.word	444
	.byte	1,22,2,35,0,11
	.byte	'reserved_10',0,4
	.word	444
	.byte	1,21,2,35,0,11
	.byte	'EMSCLR',0,4
	.word	444
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	444
	.byte	4,16,2,35,0,11
	.byte	'IRQ0AEMCLR',0,4
	.word	444
	.byte	1,15,2,35,0,11
	.byte	'IRQ1AEMCLR',0,4
	.word	444
	.byte	1,14,2,35,0,11
	.byte	'IRQ2AEMCLR',0,4
	.word	444
	.byte	1,13,2,35,0,11
	.byte	'RST0AEMCLR',0,4
	.word	444
	.byte	1,12,2,35,0,11
	.byte	'RST1AEMCLR',0,4
	.word	444
	.byte	1,11,2,35,0,11
	.byte	'RST2AEMCLR',0,4
	.word	444
	.byte	1,10,2,35,0,11
	.byte	'RST3AEMCLR',0,4
	.word	444
	.byte	1,9,2,35,0,11
	.byte	'RST4AEMCLR',0,4
	.word	444
	.byte	1,8,2,35,0,11
	.byte	'RST5AEMCLR',0,4
	.word	444
	.byte	1,7,2,35,0,11
	.byte	'NMIAEMCLR',0,4
	.word	444
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	444
	.byte	1,5,2,35,0,11
	.byte	'EMSAEMCLR',0,4
	.word	444
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	444
	.byte	4,0,2,35,0,0,32
	.byte	'Ifx_SMU_AEXCLR_Bits',0,24,207,1,3
	.word	102539
	.byte	10
	.byte	'_Ifx_SMU_AFCNT_Bits',0,24,210,1,16,4,11
	.byte	'FCNT',0,1
	.word	596
	.byte	4,4,2,35,0,11
	.byte	'ACNT',0,2
	.word	613
	.byte	12,0,2,35,0,11
	.byte	'reserved_16',0,2
	.word	613
	.byte	14,2,2,35,2,11
	.byte	'FCO',0,1
	.word	596
	.byte	1,1,2,35,3,11
	.byte	'ACO',0,1
	.word	596
	.byte	1,0,2,35,3,0,32
	.byte	'Ifx_SMU_AFCNT_Bits',0,24,217,1,3
	.word	103135
	.byte	10
	.byte	'_Ifx_SMU_AG_Bits',0,24,220,1,16,4,11
	.byte	'SF0',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'SF1',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'SF2',0,4
	.word	444
	.byte	1,29,2,35,0,11
	.byte	'SF3',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'SF4',0,4
	.word	444
	.byte	1,27,2,35,0,11
	.byte	'SF5',0,4
	.word	444
	.byte	1,26,2,35,0,11
	.byte	'SF6',0,4
	.word	444
	.byte	1,25,2,35,0,11
	.byte	'SF7',0,4
	.word	444
	.byte	1,24,2,35,0,11
	.byte	'SF8',0,4
	.word	444
	.byte	1,23,2,35,0,11
	.byte	'SF9',0,4
	.word	444
	.byte	1,22,2,35,0,11
	.byte	'SF10',0,4
	.word	444
	.byte	1,21,2,35,0,11
	.byte	'SF11',0,4
	.word	444
	.byte	1,20,2,35,0,11
	.byte	'SF12',0,4
	.word	444
	.byte	1,19,2,35,0,11
	.byte	'SF13',0,4
	.word	444
	.byte	1,18,2,35,0,11
	.byte	'SF14',0,4
	.word	444
	.byte	1,17,2,35,0,11
	.byte	'SF15',0,4
	.word	444
	.byte	1,16,2,35,0,11
	.byte	'SF16',0,4
	.word	444
	.byte	1,15,2,35,0,11
	.byte	'SF17',0,4
	.word	444
	.byte	1,14,2,35,0,11
	.byte	'SF18',0,4
	.word	444
	.byte	1,13,2,35,0,11
	.byte	'SF19',0,4
	.word	444
	.byte	1,12,2,35,0,11
	.byte	'SF20',0,4
	.word	444
	.byte	1,11,2,35,0,11
	.byte	'SF21',0,4
	.word	444
	.byte	1,10,2,35,0,11
	.byte	'SF22',0,4
	.word	444
	.byte	1,9,2,35,0,11
	.byte	'SF23',0,4
	.word	444
	.byte	1,8,2,35,0,11
	.byte	'SF24',0,4
	.word	444
	.byte	1,7,2,35,0,11
	.byte	'SF25',0,4
	.word	444
	.byte	1,6,2,35,0,11
	.byte	'SF26',0,4
	.word	444
	.byte	1,5,2,35,0,11
	.byte	'SF27',0,4
	.word	444
	.byte	1,4,2,35,0,11
	.byte	'SF28',0,4
	.word	444
	.byte	1,3,2,35,0,11
	.byte	'SF29',0,4
	.word	444
	.byte	1,2,2,35,0,11
	.byte	'SF30',0,4
	.word	444
	.byte	1,1,2,35,0,11
	.byte	'SF31',0,4
	.word	444
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_SMU_AG_Bits',0,24,254,1,3
	.word	103275
	.byte	10
	.byte	'_Ifx_SMU_AGC_Bits',0,24,129,2,16,4,11
	.byte	'IGCS0',0,4
	.word	444
	.byte	3,29,2,35,0,11
	.byte	'reserved_3',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'IGCS1',0,4
	.word	444
	.byte	3,25,2,35,0,11
	.byte	'reserved_7',0,4
	.word	444
	.byte	1,24,2,35,0,11
	.byte	'IGCS2',0,4
	.word	444
	.byte	3,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	444
	.byte	5,16,2,35,0,11
	.byte	'RCS',0,4
	.word	444
	.byte	6,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	444
	.byte	2,8,2,35,0,11
	.byte	'PES',0,4
	.word	444
	.byte	5,3,2,35,0,11
	.byte	'EFRST',0,4
	.word	444
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	444
	.byte	2,0,2,35,0,0,32
	.byte	'Ifx_SMU_AGC_Bits',0,24,142,2,3
	.word	103826
	.byte	10
	.byte	'_Ifx_SMU_AGCF_Bits',0,24,145,2,16,4,11
	.byte	'CF0',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'CF1',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'CF2',0,4
	.word	444
	.byte	1,29,2,35,0,11
	.byte	'CF3',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'CF4',0,4
	.word	444
	.byte	1,27,2,35,0,11
	.byte	'CF5',0,4
	.word	444
	.byte	1,26,2,35,0,11
	.byte	'CF6',0,4
	.word	444
	.byte	1,25,2,35,0,11
	.byte	'CF7',0,4
	.word	444
	.byte	1,24,2,35,0,11
	.byte	'CF8',0,4
	.word	444
	.byte	1,23,2,35,0,11
	.byte	'CF9',0,4
	.word	444
	.byte	1,22,2,35,0,11
	.byte	'CF10',0,4
	.word	444
	.byte	1,21,2,35,0,11
	.byte	'CF11',0,4
	.word	444
	.byte	1,20,2,35,0,11
	.byte	'CF12',0,4
	.word	444
	.byte	1,19,2,35,0,11
	.byte	'CF13',0,4
	.word	444
	.byte	1,18,2,35,0,11
	.byte	'CF14',0,4
	.word	444
	.byte	1,17,2,35,0,11
	.byte	'CF15',0,4
	.word	444
	.byte	1,16,2,35,0,11
	.byte	'CF16',0,4
	.word	444
	.byte	1,15,2,35,0,11
	.byte	'CF17',0,4
	.word	444
	.byte	1,14,2,35,0,11
	.byte	'CF18',0,4
	.word	444
	.byte	1,13,2,35,0,11
	.byte	'CF19',0,4
	.word	444
	.byte	1,12,2,35,0,11
	.byte	'CF20',0,4
	.word	444
	.byte	1,11,2,35,0,11
	.byte	'CF21',0,4
	.word	444
	.byte	1,10,2,35,0,11
	.byte	'CF22',0,4
	.word	444
	.byte	1,9,2,35,0,11
	.byte	'CF23',0,4
	.word	444
	.byte	1,8,2,35,0,11
	.byte	'CF24',0,4
	.word	444
	.byte	1,7,2,35,0,11
	.byte	'CF25',0,4
	.word	444
	.byte	1,6,2,35,0,11
	.byte	'CF26',0,4
	.word	444
	.byte	1,5,2,35,0,11
	.byte	'CF27',0,4
	.word	444
	.byte	1,4,2,35,0,11
	.byte	'CF28',0,4
	.word	444
	.byte	1,3,2,35,0,11
	.byte	'CF29',0,4
	.word	444
	.byte	1,2,2,35,0,11
	.byte	'CF30',0,4
	.word	444
	.byte	1,1,2,35,0,11
	.byte	'CF31',0,4
	.word	444
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_SMU_AGCF_Bits',0,24,179,2,3
	.word	104088
	.byte	10
	.byte	'_Ifx_SMU_AGFSP_Bits',0,24,182,2,16,4,11
	.byte	'FE0',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'FE1',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'FE2',0,4
	.word	444
	.byte	1,29,2,35,0,11
	.byte	'FE3',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'FE4',0,4
	.word	444
	.byte	1,27,2,35,0,11
	.byte	'FE5',0,4
	.word	444
	.byte	1,26,2,35,0,11
	.byte	'FE6',0,4
	.word	444
	.byte	1,25,2,35,0,11
	.byte	'FE7',0,4
	.word	444
	.byte	1,24,2,35,0,11
	.byte	'FE8',0,4
	.word	444
	.byte	1,23,2,35,0,11
	.byte	'FE9',0,4
	.word	444
	.byte	1,22,2,35,0,11
	.byte	'FE10',0,4
	.word	444
	.byte	1,21,2,35,0,11
	.byte	'FE11',0,4
	.word	444
	.byte	1,20,2,35,0,11
	.byte	'FE12',0,4
	.word	444
	.byte	1,19,2,35,0,11
	.byte	'FE13',0,4
	.word	444
	.byte	1,18,2,35,0,11
	.byte	'FE14',0,4
	.word	444
	.byte	1,17,2,35,0,11
	.byte	'FE15',0,4
	.word	444
	.byte	1,16,2,35,0,11
	.byte	'FE16',0,4
	.word	444
	.byte	1,15,2,35,0,11
	.byte	'FE17',0,4
	.word	444
	.byte	1,14,2,35,0,11
	.byte	'FE18',0,4
	.word	444
	.byte	1,13,2,35,0,11
	.byte	'FE19',0,4
	.word	444
	.byte	1,12,2,35,0,11
	.byte	'FE20',0,4
	.word	444
	.byte	1,11,2,35,0,11
	.byte	'FE21',0,4
	.word	444
	.byte	1,10,2,35,0,11
	.byte	'FE22',0,4
	.word	444
	.byte	1,9,2,35,0,11
	.byte	'FE23',0,4
	.word	444
	.byte	1,8,2,35,0,11
	.byte	'FE24',0,4
	.word	444
	.byte	1,7,2,35,0,11
	.byte	'FE25',0,4
	.word	444
	.byte	1,6,2,35,0,11
	.byte	'FE26',0,4
	.word	444
	.byte	1,5,2,35,0,11
	.byte	'FE27',0,4
	.word	444
	.byte	1,4,2,35,0,11
	.byte	'FE28',0,4
	.word	444
	.byte	1,3,2,35,0,11
	.byte	'FE29',0,4
	.word	444
	.byte	1,2,2,35,0,11
	.byte	'FE30',0,4
	.word	444
	.byte	1,1,2,35,0,11
	.byte	'FE31',0,4
	.word	444
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_SMU_AGFSP_Bits',0,24,216,2,3
	.word	104643
	.byte	10
	.byte	'_Ifx_SMU_CLC_Bits',0,24,219,2,16,4,11
	.byte	'DISR',0,1
	.word	596
	.byte	1,7,2,35,0,11
	.byte	'DISS',0,1
	.word	596
	.byte	1,6,2,35,0,11
	.byte	'reserved_2',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'EDIS',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	421
	.byte	28,0,2,35,0,0,32
	.byte	'Ifx_SMU_CLC_Bits',0,24,226,2,3
	.word	105200
	.byte	10
	.byte	'_Ifx_SMU_CMD_Bits',0,24,229,2,16,4,11
	.byte	'CMD',0,4
	.word	444
	.byte	4,28,2,35,0,11
	.byte	'ARG',0,4
	.word	444
	.byte	4,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	444
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SMU_CMD_Bits',0,24,234,2,3
	.word	105343
	.byte	10
	.byte	'_Ifx_SMU_DBG_Bits',0,24,237,2,16,4,11
	.byte	'SSM',0,1
	.word	596
	.byte	2,6,2,35,0,11
	.byte	'reserved_2',0,4
	.word	421
	.byte	30,0,2,35,0,0,32
	.byte	'Ifx_SMU_DBG_Bits',0,24,241,2,3
	.word	105446
	.byte	10
	.byte	'_Ifx_SMU_FSP_Bits',0,24,244,2,16,4,11
	.byte	'PRE1',0,4
	.word	444
	.byte	3,29,2,35,0,11
	.byte	'PRE2',0,4
	.word	444
	.byte	2,27,2,35,0,11
	.byte	'MODE',0,4
	.word	444
	.byte	2,25,2,35,0,11
	.byte	'PES',0,4
	.word	444
	.byte	1,24,2,35,0,11
	.byte	'TFSP_LOW',0,4
	.word	444
	.byte	14,10,2,35,0,11
	.byte	'TFSP_HIGH',0,4
	.word	444
	.byte	10,0,2,35,0,0,32
	.byte	'Ifx_SMU_FSP_Bits',0,24,252,2,3
	.word	105534
	.byte	10
	.byte	'_Ifx_SMU_ID_Bits',0,24,255,2,16,4,11
	.byte	'MOD_REV',0,1
	.word	596
	.byte	8,0,2,35,0,11
	.byte	'MOD_TYPE',0,1
	.word	596
	.byte	8,0,2,35,1,11
	.byte	'MOD_NUMBER',0,2
	.word	613
	.byte	16,0,2,35,2,0,32
	.byte	'Ifx_SMU_ID_Bits',0,24,132,3,3
	.word	105689
	.byte	10
	.byte	'_Ifx_SMU_KEYS_Bits',0,24,135,3,16,4,11
	.byte	'CFGLCK',0,4
	.word	444
	.byte	8,24,2,35,0,11
	.byte	'PERLCK',0,4
	.word	444
	.byte	8,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	444
	.byte	16,0,2,35,0,0,32
	.byte	'Ifx_SMU_KEYS_Bits',0,24,140,3,3
	.word	105799
	.byte	10
	.byte	'_Ifx_SMU_OCS_Bits',0,24,143,3,16,4,11
	.byte	'TGS',0,1
	.word	596
	.byte	2,6,2,35,0,11
	.byte	'TGB',0,1
	.word	596
	.byte	1,5,2,35,0,11
	.byte	'TG_P',0,1
	.word	596
	.byte	1,4,2,35,0,11
	.byte	'reserved_4',0,4
	.word	421
	.byte	20,8,2,35,0,11
	.byte	'SUS',0,1
	.word	596
	.byte	4,4,2,35,3,11
	.byte	'SUS_P',0,1
	.word	596
	.byte	1,3,2,35,3,11
	.byte	'SUSSTA',0,1
	.word	596
	.byte	1,2,2,35,3,11
	.byte	'reserved_30',0,1
	.word	596
	.byte	2,0,2,35,3,0,32
	.byte	'Ifx_SMU_OCS_Bits',0,24,153,3,3
	.word	105911
	.byte	10
	.byte	'_Ifx_SMU_PCTL_Bits',0,24,156,3,16,4,11
	.byte	'HWDIR',0,4
	.word	444
	.byte	2,30,2,35,0,11
	.byte	'HWEN',0,4
	.word	444
	.byte	2,28,2,35,0,11
	.byte	'GFSCU_EN',0,4
	.word	444
	.byte	1,27,2,35,0,11
	.byte	'GFSTS_EN',0,4
	.word	444
	.byte	1,26,2,35,0,11
	.byte	'reserved_6',0,4
	.word	444
	.byte	1,25,2,35,0,11
	.byte	'PCS',0,4
	.word	444
	.byte	1,24,2,35,0,11
	.byte	'reserved_8',0,4
	.word	444
	.byte	6,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	444
	.byte	9,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	444
	.byte	9,0,2,35,0,0,32
	.byte	'Ifx_SMU_PCTL_Bits',0,24,167,3,3
	.word	106103
	.byte	10
	.byte	'_Ifx_SMU_RMCTL_Bits',0,24,170,3,16,4,11
	.byte	'TE0',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'TE1',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'TE2',0,4
	.word	444
	.byte	1,29,2,35,0,11
	.byte	'TE3',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'TE4',0,4
	.word	444
	.byte	1,27,2,35,0,11
	.byte	'TE5',0,4
	.word	444
	.byte	1,26,2,35,0,11
	.byte	'TE6',0,4
	.word	444
	.byte	1,25,2,35,0,11
	.byte	'TE7',0,4
	.word	444
	.byte	1,24,2,35,0,11
	.byte	'TE8',0,4
	.word	444
	.byte	1,23,2,35,0,11
	.byte	'TE9',0,4
	.word	444
	.byte	1,22,2,35,0,11
	.byte	'TE10',0,4
	.word	444
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	444
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	444
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	444
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	444
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	444
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	444
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	444
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	444
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	444
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	444
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	444
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	444
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	444
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	444
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	444
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	444
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	444
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	444
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	444
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	444
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	444
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_SMU_RMCTL_Bits',0,24,204,3,3
	.word	106334
	.byte	10
	.byte	'_Ifx_SMU_RMEF_Bits',0,24,207,3,16,4,11
	.byte	'EF0',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'EF1',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'EF2',0,4
	.word	444
	.byte	1,29,2,35,0,11
	.byte	'EF3',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'EF4',0,4
	.word	444
	.byte	1,27,2,35,0,11
	.byte	'EF5',0,4
	.word	444
	.byte	1,26,2,35,0,11
	.byte	'EF6',0,4
	.word	444
	.byte	1,25,2,35,0,11
	.byte	'EF7',0,4
	.word	444
	.byte	1,24,2,35,0,11
	.byte	'EF8',0,4
	.word	444
	.byte	1,23,2,35,0,11
	.byte	'EF9',0,4
	.word	444
	.byte	1,22,2,35,0,11
	.byte	'EF10',0,4
	.word	444
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	444
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	444
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	444
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	444
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	444
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	444
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	444
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	444
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	444
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	444
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	444
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	444
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	444
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	444
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	444
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	444
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	444
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	444
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	444
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	444
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	444
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_SMU_RMEF_Bits',0,24,241,3,3
	.word	107038
	.byte	10
	.byte	'_Ifx_SMU_RMSTS_Bits',0,24,244,3,16,4,11
	.byte	'STS0',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'STS1',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'STS2',0,4
	.word	444
	.byte	1,29,2,35,0,11
	.byte	'STS3',0,4
	.word	444
	.byte	1,28,2,35,0,11
	.byte	'STS4',0,4
	.word	444
	.byte	1,27,2,35,0,11
	.byte	'STS5',0,4
	.word	444
	.byte	1,26,2,35,0,11
	.byte	'STS6',0,4
	.word	444
	.byte	1,25,2,35,0,11
	.byte	'STS7',0,4
	.word	444
	.byte	1,24,2,35,0,11
	.byte	'STS8',0,4
	.word	444
	.byte	1,23,2,35,0,11
	.byte	'STS9',0,4
	.word	444
	.byte	1,22,2,35,0,11
	.byte	'STS10',0,4
	.word	444
	.byte	1,21,2,35,0,11
	.byte	'reserved_11',0,4
	.word	444
	.byte	1,20,2,35,0,11
	.byte	'reserved_12',0,4
	.word	444
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	444
	.byte	1,18,2,35,0,11
	.byte	'reserved_14',0,4
	.word	444
	.byte	1,17,2,35,0,11
	.byte	'reserved_15',0,4
	.word	444
	.byte	1,16,2,35,0,11
	.byte	'reserved_16',0,4
	.word	444
	.byte	1,15,2,35,0,11
	.byte	'reserved_17',0,4
	.word	444
	.byte	1,14,2,35,0,11
	.byte	'reserved_18',0,4
	.word	444
	.byte	1,13,2,35,0,11
	.byte	'reserved_19',0,4
	.word	444
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	444
	.byte	1,11,2,35,0,11
	.byte	'reserved_21',0,4
	.word	444
	.byte	1,10,2,35,0,11
	.byte	'reserved_22',0,4
	.word	444
	.byte	1,9,2,35,0,11
	.byte	'reserved_23',0,4
	.word	444
	.byte	1,8,2,35,0,11
	.byte	'reserved_24',0,4
	.word	444
	.byte	1,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	444
	.byte	1,6,2,35,0,11
	.byte	'reserved_26',0,4
	.word	444
	.byte	1,5,2,35,0,11
	.byte	'reserved_27',0,4
	.word	444
	.byte	1,4,2,35,0,11
	.byte	'reserved_28',0,4
	.word	444
	.byte	1,3,2,35,0,11
	.byte	'reserved_29',0,4
	.word	444
	.byte	1,2,2,35,0,11
	.byte	'reserved_30',0,4
	.word	444
	.byte	1,1,2,35,0,11
	.byte	'reserved_31',0,4
	.word	444
	.byte	1,0,2,35,0,0,32
	.byte	'Ifx_SMU_RMSTS_Bits',0,24,150,4,3
	.word	107740
	.byte	10
	.byte	'_Ifx_SMU_RTAC00_Bits',0,24,153,4,16,4,11
	.byte	'GID0',0,4
	.word	444
	.byte	4,28,2,35,0,11
	.byte	'ALID0',0,4
	.word	444
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	444
	.byte	7,16,2,35,0,11
	.byte	'GID1',0,4
	.word	444
	.byte	4,12,2,35,0,11
	.byte	'ALID1',0,4
	.word	444
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	444
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC00_Bits',0,24,161,4,3
	.word	108455
	.byte	10
	.byte	'_Ifx_SMU_RTAC01_Bits',0,24,164,4,16,4,11
	.byte	'GID2',0,4
	.word	444
	.byte	4,28,2,35,0,11
	.byte	'ALID2',0,4
	.word	444
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	444
	.byte	7,16,2,35,0,11
	.byte	'GID3',0,4
	.word	444
	.byte	4,12,2,35,0,11
	.byte	'ALID3',0,4
	.word	444
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	444
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC01_Bits',0,24,172,4,3
	.word	108623
	.byte	10
	.byte	'_Ifx_SMU_RTAC10_Bits',0,24,175,4,16,4,11
	.byte	'GID0',0,4
	.word	444
	.byte	4,28,2,35,0,11
	.byte	'ALID0',0,4
	.word	444
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	444
	.byte	7,16,2,35,0,11
	.byte	'GID1',0,4
	.word	444
	.byte	4,12,2,35,0,11
	.byte	'ALID1',0,4
	.word	444
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	444
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC10_Bits',0,24,183,4,3
	.word	108791
	.byte	10
	.byte	'_Ifx_SMU_RTAC11_Bits',0,24,186,4,16,4,11
	.byte	'GID2',0,4
	.word	444
	.byte	4,28,2,35,0,11
	.byte	'ALID2',0,4
	.word	444
	.byte	5,23,2,35,0,11
	.byte	'reserved_9',0,4
	.word	444
	.byte	7,16,2,35,0,11
	.byte	'GID3',0,4
	.word	444
	.byte	4,12,2,35,0,11
	.byte	'ALID3',0,4
	.word	444
	.byte	5,7,2,35,0,11
	.byte	'reserved_25',0,4
	.word	444
	.byte	7,0,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC11_Bits',0,24,194,4,3
	.word	108959
	.byte	10
	.byte	'_Ifx_SMU_RTC_Bits',0,24,197,4,16,4,11
	.byte	'RT0E',0,4
	.word	444
	.byte	1,31,2,35,0,11
	.byte	'RT1E',0,4
	.word	444
	.byte	1,30,2,35,0,11
	.byte	'reserved_2',0,4
	.word	444
	.byte	6,24,2,35,0,11
	.byte	'RTD',0,4
	.word	444
	.byte	24,0,2,35,0,0,32
	.byte	'Ifx_SMU_RTC_Bits',0,24,203,4,3
	.word	109127
	.byte	10
	.byte	'_Ifx_SMU_STS_Bits',0,24,206,4,16,4,11
	.byte	'CMD',0,4
	.word	444
	.byte	4,28,2,35,0,11
	.byte	'ARG',0,4
	.word	444
	.byte	4,24,2,35,0,11
	.byte	'RES',0,4
	.word	444
	.byte	1,23,2,35,0,11
	.byte	'ASCE',0,4
	.word	444
	.byte	1,22,2,35,0,11
	.byte	'FSP',0,4
	.word	444
	.byte	2,20,2,35,0,11
	.byte	'FSTS',0,4
	.word	444
	.byte	1,19,2,35,0,11
	.byte	'reserved_13',0,4
	.word	444
	.byte	3,16,2,35,0,11
	.byte	'RTS0',0,4
	.word	444
	.byte	1,15,2,35,0,11
	.byte	'RTME0',0,4
	.word	444
	.byte	1,14,2,35,0,11
	.byte	'RTS1',0,4
	.word	444
	.byte	1,13,2,35,0,11
	.byte	'RTME1',0,4
	.word	444
	.byte	1,12,2,35,0,11
	.byte	'reserved_20',0,4
	.word	444
	.byte	12,0,2,35,0,0,32
	.byte	'Ifx_SMU_STS_Bits',0,24,220,4,3
	.word	109247
	.byte	12,24,228,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	100798
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_ACCEN0',0,24,233,4,3
	.word	109502
	.byte	12,24,236,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101355
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_ACCEN1',0,24,241,4,3
	.word	109566
	.byte	12,24,244,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101432
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AD',0,24,249,4,3
	.word	109630
	.byte	12,24,252,4,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	101982
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AEX',0,24,129,5,3
	.word	109690
	.byte	12,24,132,5,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	102539
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AEXCLR',0,24,137,5,3
	.word	109751
	.byte	12,24,140,5,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103135
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AFCNT',0,24,145,5,3
	.word	109815
	.byte	12,24,148,5,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103275
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AG',0,24,153,5,3
	.word	109878
	.byte	12,24,156,5,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	103826
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AGC',0,24,161,5,3
	.word	109938
	.byte	12,24,164,5,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104088
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AGCF',0,24,169,5,3
	.word	109999
	.byte	12,24,172,5,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	104643
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_AGFSP',0,24,177,5,3
	.word	110061
	.byte	12,24,180,5,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105200
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_CLC',0,24,185,5,3
	.word	110124
	.byte	12,24,188,5,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105343
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_CMD',0,24,193,5,3
	.word	110185
	.byte	12,24,196,5,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105446
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_DBG',0,24,201,5,3
	.word	110246
	.byte	12,24,204,5,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105534
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_FSP',0,24,209,5,3
	.word	110307
	.byte	12,24,212,5,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105689
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_ID',0,24,217,5,3
	.word	110368
	.byte	12,24,220,5,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105799
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_KEYS',0,24,225,5,3
	.word	110428
	.byte	12,24,228,5,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	105911
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_OCS',0,24,233,5,3
	.word	110490
	.byte	12,24,236,5,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	106103
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_PCTL',0,24,241,5,3
	.word	110551
	.byte	12,24,244,5,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	106334
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RMCTL',0,24,249,5,3
	.word	110613
	.byte	12,24,252,5,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	107038
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RMEF',0,24,129,6,3
	.word	110676
	.byte	12,24,132,6,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	107740
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RMSTS',0,24,137,6,3
	.word	110738
	.byte	12,24,140,6,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	108455
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC00',0,24,145,6,3
	.word	110801
	.byte	12,24,148,6,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	108623
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC01',0,24,153,6,3
	.word	110865
	.byte	12,24,156,6,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	108791
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC10',0,24,161,6,3
	.word	110929
	.byte	12,24,164,6,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	108959
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RTAC11',0,24,169,6,3
	.word	110993
	.byte	12,24,172,6,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	109127
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_RTC',0,24,177,6,3
	.word	111057
	.byte	12,24,180,6,9,4,13
	.byte	'U',0
	.word	421
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	437
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	109247
	.byte	4,2,35,0,0,32
	.byte	'Ifx_SMU_STS',0,24,185,6,3
	.word	111118
	.byte	15,9,210,2,9,1,16
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy30',0,1,16
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy60',0,2,16
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy120',0,3,16
	.byte	'IfxScuCcu_LowPowerDivRatio_divBy240',0,4,0,32
	.byte	'IfxScuCcu_LowPowerDivRatio',0,9,216,2,3
	.word	111179
	.byte	15,9,220,2,9,1,16
	.byte	'IfxScuCcu_ModulationAmplitude_0p5',0,0,16
	.byte	'IfxScuCcu_ModulationAmplitude_1p0',0,1,16
	.byte	'IfxScuCcu_ModulationAmplitude_1p25',0,2,16
	.byte	'IfxScuCcu_ModulationAmplitude_1p5',0,3,16
	.byte	'IfxScuCcu_ModulationAmplitude_2p0',0,4,16
	.byte	'IfxScuCcu_ModulationAmplitude_2p5',0,5,16
	.byte	'IfxScuCcu_ModulationAmplitude_count',0,6,0,32
	.byte	'IfxScuCcu_ModulationAmplitude',0,9,229,2,3
	.word	111372
	.byte	15,9,254,3,9,1,16
	.byte	'IfxScuCcu_PllInputClockSelection_fOsc1',0,0,16
	.byte	'IfxScuCcu_PllInputClockSelection_fOsc0',0,1,16
	.byte	'IfxScuCcu_PllInputClockSelection_fSysclk',0,2,0,32
	.byte	'IfxScuCcu_PllInputClockSelection',0,9,131,4,3
	.word	111673
	.byte	15,9,135,4,9,1,16
	.byte	'IfxScuCcu_Traprequest_esr0',0,0,16
	.byte	'IfxScuCcu_Traprequest_esr1',0,1,16
	.byte	'IfxScuCcu_Traprequest_trap2',0,2,16
	.byte	'IfxScuCcu_Traprequest_smu',0,3,0,32
	.byte	'IfxScuCcu_Traprequest',0,9,141,4,3
	.word	111847
	.byte	15,9,147,4,9,1,16
	.byte	'IfxScuCcu_ModEn_disabled',0,0,16
	.byte	'IfxScuCcu_ModEn_enabled',0,1,0,32
	.byte	'IfxScuCcu_ModEn',0,9,151,4,3
	.word	112001
	.byte	29,9,162,4,9,6,13
	.byte	'pDivider',0
	.word	596
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	596
	.byte	1,2,35,1,13
	.byte	'k2Divider',0
	.word	596
	.byte	1,2,35,2,13
	.byte	'k3Divider',0
	.word	596
	.byte	1,2,35,3,13
	.byte	'k3DividerBypass',0
	.word	596
	.byte	1,2,35,4,0,32
	.byte	'IfxScuCcu_PerPllConfig',0,9,171,4,3
	.word	112086
	.byte	29,9,176,4,9,4,13
	.byte	'pDivider',0
	.word	596
	.byte	1,2,35,0,13
	.byte	'nDivider',0
	.word	596
	.byte	1,2,35,1,13
	.byte	'k2Divider',0
	.word	596
	.byte	1,2,35,2,0,32
	.byte	'IfxScuCcu_SysPllConfig',0,9,181,4,3
	.word	112224
	.byte	29,9,189,4,9,8,13
	.byte	'value',0
	.word	1857
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	1857
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_CcuconRegConfig',0,9,193,4,3
	.word	112318
	.byte	29,9,197,4,9,6,13
	.byte	'k2Step',0
	.word	596
	.byte	1,2,35,0,13
	.byte	'waitTime',0
	.word	217
	.byte	4,2,35,2,0,32
	.byte	'IfxScuCcu_PllStepConfig',0,9,201,4,3
	.word	112389
	.byte	29,9,205,4,9,16,13
	.byte	'xtalFrequency',0
	.word	1857
	.byte	4,2,35,0,13
	.byte	'pllInputClockSelection',0
	.word	111673
	.byte	1,2,35,4,13
	.byte	'sysPllConfig',0
	.word	112224
	.byte	4,2,35,6,13
	.byte	'perPllConfig',0
	.word	112086
	.byte	6,2,35,10,0,32
	.byte	'IfxScuCcu_pllsParameterConfig',0,9,211,4,3
	.word	112463
	.byte	29,9,219,4,9,8,13
	.byte	'value',0
	.word	1857
	.byte	4,2,35,0,13
	.byte	'mask',0
	.word	1857
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_FlashWaitstateConfig',0,9,223,4,3
	.word	112608
	.byte	29,9,231,4,9,80,13
	.byte	'ccucon0',0
	.word	112318
	.byte	8,2,35,0,13
	.byte	'ccucon1',0
	.word	112318
	.byte	8,2,35,8,13
	.byte	'ccucon2',0
	.word	112318
	.byte	8,2,35,16,13
	.byte	'ccucon5',0
	.word	112318
	.byte	8,2,35,24,13
	.byte	'ccucon6',0
	.word	112318
	.byte	8,2,35,32,13
	.byte	'ccucon7',0
	.word	112318
	.byte	8,2,35,40,13
	.byte	'ccucon8',0
	.word	112318
	.byte	8,2,35,48,13
	.byte	'ccucon9',0
	.word	112318
	.byte	8,2,35,56,13
	.byte	'ccucon10',0
	.word	112318
	.byte	8,2,35,64,13
	.byte	'ccucon11',0
	.word	112318
	.byte	8,2,35,72,0,32
	.byte	'IfxScuCcu_ClockDistributionConfig',0,9,243,4,3
	.word	112684
	.byte	29,9,247,4,9,20,13
	.byte	'pllsParameters',0
	.word	112463
	.byte	16,2,35,0,13
	.byte	'waitTime',0
	.word	217
	.byte	4,2,35,16,0,32
	.byte	'IfxScuCcu_InitialStepConfig',0,9,251,4,3
	.word	112906
	.byte	20
	.word	112389
	.byte	3
	.word	112992
	.byte	29,9,255,4,9,8,13
	.byte	'numOfSteps',0
	.word	596
	.byte	1,2,35,0,13
	.byte	'pllSteps',0
	.word	112997
	.byte	4,2,35,4,0,32
	.byte	'IfxScuCcu_PllThrottleConfig',0,9,131,5,3
	.word	113002
	.byte	29,9,137,5,9,2,13
	.byte	'Mod_Enable',0
	.word	112001
	.byte	1,2,35,0,13
	.byte	'Mod_Amp',0
	.word	111372
	.byte	1,2,35,1,0,32
	.byte	'IfxScuCcu_Mod_Config',0,9,141,5,3
	.word	113084
	.byte	32
	.byte	'IfxSrc_Tos',0,17,75,3
	.word	25110
	.byte	29,15,56,15,16,13
	.byte	'module',0
	.word	17413
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	24204
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	24243
	.byte	1,2,35,12,0,20
	.word	113177
	.byte	32
	.byte	'IfxAsclin_Cts_In',0,15,61,3
	.word	113228
	.byte	20
	.word	24361
	.byte	32
	.byte	'IfxAsclin_Rx_In',0,15,69,3
	.word	113258
	.byte	29,15,72,15,16,13
	.byte	'module',0
	.word	17413
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	24204
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	9891
	.byte	1,2,35,12,0,20
	.word	113287
	.byte	32
	.byte	'IfxAsclin_Rts_Out',0,15,77,3
	.word	113338
	.byte	29,15,80,15,16,13
	.byte	'module',0
	.word	17413
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	24204
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	9891
	.byte	1,2,35,12,0,20
	.word	113369
	.byte	32
	.byte	'IfxAsclin_Sclk_Out',0,15,85,3
	.word	113420
	.byte	29,15,88,15,16,13
	.byte	'module',0
	.word	17413
	.byte	4,2,35,0,13
	.byte	'pin',0
	.word	24204
	.byte	8,2,35,4,13
	.byte	'select',0
	.word	9891
	.byte	1,2,35,12,0,20
	.word	113452
	.byte	32
	.byte	'IfxAsclin_Slso_Out',0,15,93,3
	.word	113503
	.byte	20
	.word	24422
	.byte	32
	.byte	'IfxAsclin_Tx_Out',0,15,101,3
	.word	113535
	.byte	20
	.word	24361
	.byte	34
	.byte	'IfxAsclin2_RXD_P10_6_IN',0,15,140,1,28
	.word	113565
	.byte	1,1,20
	.word	24422
	.byte	34
	.byte	'IfxAsclin2_TX_P10_5_OUT',0,15,147,2,29
	.word	113605
	.byte	1,1,32
	.byte	'IfxAsclin_Checksum',0,12,85,3
	.word	23853
	.byte	32
	.byte	'IfxAsclin_ChecksumInjection',0,12,94,3
	.word	24037
	.byte	15,12,100,9,1,16
	.byte	'IfxAsclin_ClockPolarity_idleLow',0,0,16
	.byte	'IfxAsclin_ClockPolarity_idleHigh',0,1,0,32
	.byte	'IfxAsclin_ClockPolarity',0,12,104,3
	.word	113708
	.byte	32
	.byte	'IfxAsclin_ClockSource',0,12,114,3
	.word	24998
	.byte	32
	.byte	'IfxAsclin_CtsInputSelect',0,12,125,3
	.word	18475
	.byte	32
	.byte	'IfxAsclin_DataLength',0,12,148,1,3
	.word	17516
	.byte	15,12,153,1,9,1,16
	.byte	'IfxAsclin_FifoInterruptMode_combined',0,0,16
	.byte	'IfxAsclin_FifoInterruptMode_single',0,1,16
	.byte	'IfxAsclin_FifoInterruptMode_batch',0,2,0,32
	.byte	'IfxAsclin_FifoInterruptMode',0,12,158,1,3
	.word	113908
	.byte	32
	.byte	'IfxAsclin_FrameMode',0,12,169,1,3
	.word	20935
	.byte	32
	.byte	'IfxAsclin_HeaderResponseSelect',0,12,178,1,3
	.word	23645
	.byte	32
	.byte	'IfxAsclin_IdleDelay',0,12,195,1,3
	.word	22358
	.byte	32
	.byte	'IfxAsclin_LeadDelay',0,12,211,1,3
	.word	22557
	.byte	32
	.byte	'IfxAsclin_LinMode',0,12,220,1,3
	.word	19984
	.byte	32
	.byte	'IfxAsclin_LinResponseTimeoutMode',0,12,229,1,3
	.word	23747
	.byte	32
	.byte	'IfxAsclin_OversamplingFactor',0,12,249,1,3
	.word	21196
	.byte	32
	.byte	'IfxAsclin_ParityType',0,12,130,2,3
	.word	22939
	.byte	32
	.byte	'IfxAsclin_ReceiveBufferMode',0,12,139,2,3
	.word	23236
	.byte	15,12,144,2,9,1,16
	.byte	'IfxAsclin_RtsCtsPolarity_activeHigh',0,0,16
	.byte	'IfxAsclin_RtsCtsPolarity_activeLow',0,1,0,32
	.byte	'IfxAsclin_RtsCtsPolarity',0,12,148,2,3
	.word	114365
	.byte	15,12,153,2,9,1,16
	.byte	'IfxAsclin_RxFifoInterruptLevel_1',0,0,16
	.byte	'IfxAsclin_RxFifoInterruptLevel_2',0,1,16
	.byte	'IfxAsclin_RxFifoInterruptLevel_3',0,2,16
	.byte	'IfxAsclin_RxFifoInterruptLevel_4',0,3,16
	.byte	'IfxAsclin_RxFifoInterruptLevel_5',0,4,16
	.byte	'IfxAsclin_RxFifoInterruptLevel_6',0,5,16
	.byte	'IfxAsclin_RxFifoInterruptLevel_7',0,6,16
	.byte	'IfxAsclin_RxFifoInterruptLevel_8',0,7,16
	.byte	'IfxAsclin_RxFifoInterruptLevel_9',0,8,16
	.byte	'IfxAsclin_RxFifoInterruptLevel_10',0,9,16
	.byte	'IfxAsclin_RxFifoInterruptLevel_11',0,10,16
	.byte	'IfxAsclin_RxFifoInterruptLevel_12',0,11,16
	.byte	'IfxAsclin_RxFifoInterruptLevel_13',0,12,16
	.byte	'IfxAsclin_RxFifoInterruptLevel_14',0,13,16
	.byte	'IfxAsclin_RxFifoInterruptLevel_15',0,14,16
	.byte	'IfxAsclin_RxFifoInterruptLevel_16',0,15,0,32
	.byte	'IfxAsclin_RxFifoInterruptLevel',0,12,171,2,3
	.word	114481
	.byte	32
	.byte	'IfxAsclin_RxFifoOutletWidth',0,12,182,2,3
	.word	23450
	.byte	32
	.byte	'IfxAsclin_RxInputSelect',0,12,197,2,3
	.word	18659
	.byte	32
	.byte	'IfxAsclin_SamplePointPosition',0,12,219,2,3
	.word	21756
	.byte	32
	.byte	'IfxAsclin_SamplesPerBit',0,12,228,2,3
	.word	21687
	.byte	32
	.byte	'IfxAsclin_ShiftDirection',0,12,238,2,3
	.word	23001
	.byte	15,12,244,2,9,1,16
	.byte	'IfxAsclin_SlavePolarity_idleLow',0,0,16
	.byte	'IfxAsclin_SlavePolarity_idlehigh',0,1,0,32
	.byte	'IfxAsclin_SlavePolarity',0,12,248,2,3
	.word	115271
	.byte	15,12,253,2,9,1,16
	.byte	'IfxAsclin_SleepMode_enable',0,0,16
	.byte	'IfxAsclin_SleepMode_disable',0,1,0,32
	.byte	'IfxAsclin_SleepMode',0,12,129,3,3
	.word	115380
	.byte	32
	.byte	'IfxAsclin_Status',0,12,137,3,3
	.word	20863
	.byte	32
	.byte	'IfxAsclin_StopBit',0,12,152,3,3
	.word	22756
	.byte	15,12,156,3,9,1,16
	.byte	'IfxAsclin_SuspendMode_none',0,0,16
	.byte	'IfxAsclin_SuspendMode_hard',0,1,16
	.byte	'IfxAsclin_SuspendMode_soft',0,2,0,32
	.byte	'IfxAsclin_SuspendMode',0,12,161,3,3
	.word	115528
	.byte	32
	.byte	'IfxAsclin_TxFifoInletWidth',0,12,172,3,3
	.word	23319
	.byte	15,12,177,3,9,1,16
	.byte	'IfxAsclin_TxFifoInterruptLevel_0',0,0,16
	.byte	'IfxAsclin_TxFifoInterruptLevel_1',0,1,16
	.byte	'IfxAsclin_TxFifoInterruptLevel_2',0,2,16
	.byte	'IfxAsclin_TxFifoInterruptLevel_3',0,3,16
	.byte	'IfxAsclin_TxFifoInterruptLevel_4',0,4,16
	.byte	'IfxAsclin_TxFifoInterruptLevel_5',0,5,16
	.byte	'IfxAsclin_TxFifoInterruptLevel_6',0,6,16
	.byte	'IfxAsclin_TxFifoInterruptLevel_7',0,7,16
	.byte	'IfxAsclin_TxFifoInterruptLevel_8',0,8,16
	.byte	'IfxAsclin_TxFifoInterruptLevel_9',0,9,16
	.byte	'IfxAsclin_TxFifoInterruptLevel_10',0,10,16
	.byte	'IfxAsclin_TxFifoInterruptLevel_11',0,11,16
	.byte	'IfxAsclin_TxFifoInterruptLevel_12',0,12,16
	.byte	'IfxAsclin_TxFifoInterruptLevel_13',0,13,16
	.byte	'IfxAsclin_TxFifoInterruptLevel_14',0,14,16
	.byte	'IfxAsclin_TxFifoInterruptLevel_15',0,15,0,32
	.byte	'IfxAsclin_TxFifoInterruptLevel',0,12,195,3,3
	.word	115689
	.byte	15,14,201,2,9,1,16
	.byte	'IfxAsclin_Lin_Direction_TransmitHeader',0,0,16
	.byte	'IfxAsclin_Lin_Direction_TransmitHeaderAndResponse',0,1,16
	.byte	'IfxAsclin_Lin_Direction_TransmitHeaderAndReceiveResponse',0,2,0,32
	.byte	'IfxAsclin_Lin_Direction',0,14,206,2,3
	.word	116302
	.byte	32
	.byte	'IfxAsclin_Lin_EnabledInterrupts',0,14,235,2,3
	.word	25241
	.byte	32
	.byte	'IfxAsclin_Lin_FrameControlFlags',0,14,251,2,3
	.word	19547
	.byte	32
	.byte	'IfxAsclin_Lin_AcknowledgementFlags',0,14,138,3,3
	.word	20044
	.byte	32
	.byte	'IfxAsclin_Lin_BaudrateDetection',0,14,149,3,3
	.word	21118
	.byte	32
	.byte	'IfxAsclin_Lin_BaudrateGeneration',0,14,158,3,3
	.word	21053
	.byte	32
	.byte	'IfxAsclin_Lin_BitSamplingControl',0,14,167,3,3
	.word	22279
	.byte	32
	.byte	'IfxAsclin_Lin_BitTimingControl',0,14,175,3,3
	.word	21639
	.byte	32
	.byte	'IfxAsclin_Lin_DataControl',0,14,186,3,3
	.word	23918
	.byte	32
	.byte	'IfxAsclin_Lin_ErrorFlags',0,14,202,3,3
	.word	20170
	.byte	32
	.byte	'IfxAsclin_Lin_FifoControl',0,14,211,3,3
	.word	23585
	.byte	32
	.byte	'IfxAsclin_Lin_FrameControl',0,14,224,3,3
	.word	23080
	.byte	32
	.byte	'IfxAsclin_Lin_FrameDataControl',0,14,235,3,3
	.word	19868
	.byte	32
	.byte	'IfxAsclin_Lin_InterruptConfig',0,14,246,3,3
	.word	25715
	.byte	32
	.byte	'IfxAsclin_Lin_LinControl',0,14,128,4,3
	.word	24122
	.byte	32
	.byte	'IfxAsclin_Lin_Pins',0,14,139,4,3
	.word	24906
	.byte	32
	.byte	'IfxAsclin_Lin',0,14,154,4,3
	.word	20454
	.byte	32
	.byte	'IfxAsclin_Lin_Config',0,14,177,4,3
	.word	25831
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L22:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,39,12,0,0,3,15,0,73,19,0,0,4,46,1,3,8,32,13
	.byte	58,15,59,15,57,15,54,15,39,12,0,0,5,5,0,3,8,58,15,59,15,57,15,73,19,0,0,6,11,0,0,0,7,36,0,3,8,11,15,62
	.byte	15,0,0,8,46,1,3,8,32,13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,9,59,0,3,8,0,0,10,19,1,3,8,58,15,59,15
	.byte	57,15,11,15,0,0,11,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,12,23,1,58,15,59,15,57,15,11,15,0,0,13,13
	.byte	0,3,8,73,19,11,15,56,9,0,0,14,53,0,73,19,0,0,15,4,1,58,15,59,15,57,15,11,15,0,0,16,40,0,3,8,28,13,0,0
	.byte	17,11,1,0,0,18,1,1,11,15,73,19,0,0,19,33,0,47,15,0,0,20,38,0,73,19,0,0,21,46,1,3,8,54,15,39,12,63,12,60
	.byte	12,0,0,22,5,0,73,19,0,0,23,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,24,5,0,3,8,73,19,0,0,25,46,1,49
	.byte	19,0,0,26,5,0,49,19,0,0,27,29,1,49,19,0,0,28,11,0,49,19,0,0,29,19,1,58,15,59,15,57,15,11,15,0,0,30,46
	.byte	1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,31,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63
	.byte	12,60,12,0,0,32,22,0,3,8,58,15,59,15,57,15,73,19,0,0,33,21,0,54,15,0,0,34,52,0,3,8,58,15,59,15,57,15,73
	.byte	19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L23:
	.word	.L94-.L93
.L93:
	.half	3
	.word	.L96-.L95
.L95:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Cpu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Scu\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\_Reg',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\_Impl',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Port\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Src\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Asclin\\Std',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Asclin\\Lin',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\_PinMap',0,0
	.byte	'IfxCpu_IntrinsicsTasking.h',0,1,0,0
	.byte	'IfxCpu_Intrinsics.h',0,1,0,0
	.byte	'IfxScuWdt.h',0,2,0,0
	.byte	'IfxScu_regdef.h',0,3,0,0
	.byte	'IfxCpu.h',0,1,0,0
	.byte	'IfxCpu_cfg.h',0,4,0,0
	.byte	'IfxPort.h',0,5,0,0
	.byte	'IfxPort_regdef.h',0,3,0,0
	.byte	'IfxScuCcu.h',0,2,0,0
	.byte	'IfxSrc.h',0,6,0,0
	.byte	'IfxSrc_regdef.h',0,3,0,0
	.byte	'IfxAsclin.h',0,7,0,0
	.byte	'IfxAsclin_regdef.h',0,3,0,0
	.byte	'IfxAsclin_Lin.h',0,8,0,0
	.byte	'IfxAsclin_PinMap.h',0,9,0,0
	.byte	'Ifx_Types.h',0,1,0,0
	.byte	'IfxSrc_cfg.h',0,4,0,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\ASCLIN_LIN_Master.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Ifx_TypesReg.h',0,3,0,0
	.byte	'IfxScu_cfg.h',0,4,0,0
	.byte	'IfxCpu_regdef.h',0,3,0,0
	.byte	'IfxStm_regdef.h',0,3,0,0
	.byte	'IfxSmu_regdef.h',0,3,0,0,0
.L96:
.L94:
	.sdecl	'.debug_info',debug,cluster('init_ASCLIN_LIN_master')
	.sect	'.debug_info'
.L24:
	.word	271
	.half	3
	.word	.L25
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\ASCLIN_LIN_Master.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\Debug\\',0,12,1
	.word	.L27,.L26
	.byte	2
	.word	.L20
	.byte	3
	.byte	'init_ASCLIN_LIN_master',0,1,59,6,1,1,1
	.word	.L11,.L57,.L10
	.byte	4
	.word	.L11,.L57
	.byte	5
	.byte	'linMasterConfig',0,1,62,26
	.word	.L58,.L59
	.byte	4
	.word	.L60,.L57
	.byte	5
	.byte	'pins',0,1,68,30
	.word	.L61,.L62
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('init_ASCLIN_LIN_master')
	.sect	'.debug_abbrev'
.L25:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('init_ASCLIN_LIN_master')
	.sect	'.debug_line'
.L26:
	.word	.L98-.L97
.L97:
	.half	3
	.word	.L100-.L99
.L99:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\ASCLIN_LIN_Master.c',0,0,0,0,0
.L100:
	.byte	5,6,7,0,5,2
	.word	.L11
	.byte	3,58,1,5,37,9
	.half	.L89-.L11
	.byte	3,4,1,5,55,9
	.half	.L101-.L89
	.byte	1,5,31,9
	.half	.L102-.L101
	.byte	3,2,1,5,29,1,5,36,9
	.half	.L103-.L102
	.byte	3,1,1,5,34,1,5,5,9
	.half	.L60-.L103
	.byte	3,3,1,5,35,9
	.half	.L104-.L60
	.byte	3,127,1,5,29,9
	.half	.L105-.L104
	.byte	3,6,1,5,26,9
	.half	.L106-.L105
	.byte	1,5,31,9
	.half	.L107-.L106
	.byte	3,3,1,5,45,9
	.half	.L108-.L107
	.byte	1,5,1,9
	.half	.L28-.L108
	.byte	3,1,0,1,1
.L98:
	.sdecl	'.debug_ranges',debug,cluster('init_ASCLIN_LIN_master')
	.sect	'.debug_ranges'
.L27:
	.word	-1,.L11,0,.L28-.L11,0,0
	.sdecl	'.debug_info',debug,cluster('ASCLIN_LIN_Master_Send_Message')
	.sect	'.debug_info'
.L29:
	.word	239
	.half	3
	.word	.L30
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\ASCLIN_LIN_Master.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\Debug\\',0,12,1
	.word	.L32,.L31
	.byte	2
	.word	.L20
	.byte	3
	.byte	'ASCLIN_LIN_Master_Send_Message',0,1,80,6,1,1,1
	.word	.L13,.L63,.L12
	.byte	4
	.word	.L13,.L63
	.byte	5
	.byte	'id',0,1,82,11
	.word	.L64,.L65
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('ASCLIN_LIN_Master_Send_Message')
	.sect	'.debug_abbrev'
.L30:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('ASCLIN_LIN_Master_Send_Message')
	.sect	'.debug_line'
.L31:
	.word	.L110-.L109
.L109:
	.half	3
	.word	.L112-.L111
.L111:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\ASCLIN_LIN_Master.c',0,0,0,0,0
.L112:
	.byte	5,6,7,0,5,2
	.word	.L13
	.byte	3,207,0,1,5,16,9
	.half	.L90-.L13
	.byte	3,2,1,5,14,1,9
	.half	.L113-.L90
	.byte	3,1,1,5,31,9
	.half	.L114-.L113
	.byte	3,2,1,5,45,9
	.half	.L115-.L114
	.byte	1,5,1,9
	.half	.L33-.L115
	.byte	3,1,0,1,1
.L110:
	.sdecl	'.debug_ranges',debug,cluster('ASCLIN_LIN_Master_Send_Message')
	.sect	'.debug_ranges'
.L32:
	.word	-1,.L13,0,.L33-.L13,0,0
	.sdecl	'.debug_info',debug,cluster('ISR_ASCLIN_Rx')
	.sect	'.debug_info'
.L34:
	.word	228
	.half	3
	.word	.L35
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\ASCLIN_LIN_Master.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\Debug\\',0,12,1
	.word	.L37,.L36
	.byte	2
	.word	.L20
	.byte	3
	.byte	'ISR_ASCLIN_Rx',0,1,88,1,1,1,1
	.word	.L15,.L66,.L14
	.byte	4
	.word	.L67
	.byte	5
	.word	.L68,.L3
	.byte	6
	.byte	'id',0,1,93,15
	.word	.L64,.L69
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('ISR_ASCLIN_Rx')
	.sect	'.debug_abbrev'
.L35:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,85,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58,15,59,15,57,15,73,16
	.byte	2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('ISR_ASCLIN_Rx')
	.sect	'.debug_line'
.L36:
	.word	.L117-.L116
.L116:
	.half	3
	.word	.L119-.L118
.L118:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\ASCLIN_LIN_Master.c',0,0,0,0,0
.L119:
	.byte	5,1,7,0,5,2
	.word	.L15
	.byte	3,215,0,1,5,46,9
	.half	.L91-.L15
	.byte	3,3,1,5,5,9
	.half	.L120-.L91
	.byte	1,5,20,7,9
	.half	.L68-.L120
	.byte	3,2,1,5,18,1,5,51,9
	.half	.L121-.L68
	.byte	3,2,1,5,18,9
	.half	.L122-.L121
	.byte	3,1,1,5,49,9
	.half	.L123-.L122
	.byte	3,1,1,5,1,9
	.half	.L3-.L123
	.byte	3,3,1,9
	.half	.L38-.L3
	.byte	0,1,1
.L117:
	.sdecl	'.debug_ranges',debug,cluster('ISR_ASCLIN_Rx')
	.sect	'.debug_ranges'
.L37:
	.word	-1,.L15,0,.L38-.L15,0,0
.L67:
	.word	-1,.L15,0,.L66-.L15,-1,.L17,0,.L48-.L17,0,0
	.sdecl	'.debug_info',debug,cluster('ISR_ASCLIN_Tx')
	.sect	'.debug_info'
.L39:
	.word	330
	.half	3
	.word	.L40
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\ASCLIN_LIN_Master.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\Debug\\',0,12,1
	.word	.L42,.L41
	.byte	2
	.word	.L20
	.byte	3
	.byte	'ISR_ASCLIN_Tx',0,1,102,1,1,1,1
	.word	.L19,.L70,.L18
	.byte	4
	.word	.L19,.L70
	.byte	5
	.word	.L71,.L72,.L73
	.byte	6
	.word	.L74,.L75
	.byte	7
	.word	.L76,.L72,.L73
	.byte	0,4
	.word	.L77,.L6
	.byte	8
	.byte	'id',0,1,118,23
	.word	.L64,.L78
	.byte	0,5
	.word	.L79,.L80,.L81
	.byte	6
	.word	.L82,.L83
	.byte	7
	.word	.L84,.L80,.L81
	.byte	0,4
	.word	.L85,.L9
	.byte	8
	.byte	'id',0,1,130,1,15
	.word	.L64,.L86
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('ISR_ASCLIN_Tx')
	.sect	'.debug_abbrev'
.L40:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,5,0,49,16,2,6,0,0,7,11
	.byte	0,49,16,17,1,18,1,0,0,8,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('ISR_ASCLIN_Tx')
	.sect	'.debug_line'
.L41:
	.word	.L125-.L124
.L124:
	.half	3
	.word	.L127-.L126
.L126:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Asclin\\Std',0,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\ASCLIN_LIN_Master.c',0,0,0,0
	.byte	'IfxAsclin.h',0,1,0,0,0
.L127:
	.byte	5,1,7,0,5,2
	.word	.L19
	.byte	3,229,0,1,5,44,9
	.half	.L92-.L19
	.byte	3,3,1,5,5,9
	.half	.L128-.L92
	.byte	1,5,13,7,9
	.half	.L129-.L128
	.byte	3,2,1,5,25,9
	.half	.L130-.L129
	.byte	1,5,9,9
	.half	.L131-.L130
	.byte	1,5,54,7,9
	.half	.L132-.L131
	.byte	3,2,1,5,63,9
	.half	.L133-.L132
	.byte	1,5,65,9
	.half	.L134-.L133
	.byte	1,5,29,9
	.half	.L5-.L134
	.byte	3,2,1,5,14,9
	.half	.L135-.L5
	.byte	1,5,57,7,9
	.half	.L136-.L135
	.byte	3,2,1,5,66,9
	.half	.L137-.L136
	.byte	1,5,67,9
	.half	.L138-.L137
	.byte	3,3,1,4,2,5,27,9
	.half	.L72-.L138
	.byte	3,148,15,1,4,1,5,13,9
	.half	.L73-.L72
	.byte	3,236,112,1,5,28,7,9
	.half	.L77-.L73
	.byte	3,2,1,5,26,1,9
	.half	.L139-.L77
	.byte	3,1,1,5,57,9
	.half	.L140-.L139
	.byte	3,1,1,5,51,9
	.half	.L6-.L140
	.byte	3,4,1,5,65,9
	.half	.L4-.L6
	.byte	3,4,1,4,2,5,27,9
	.half	.L80-.L4
	.byte	3,172,15,1,4,1,5,5,9
	.half	.L81-.L80
	.byte	3,212,112,1,5,20,7,9
	.half	.L85-.L81
	.byte	3,2,1,5,18,1,5,51,9
	.half	.L141-.L85
	.byte	3,1,1,5,18,9
	.half	.L142-.L141
	.byte	3,2,1,5,49,9
	.half	.L143-.L142
	.byte	3,1,1,5,1,9
	.half	.L9-.L143
	.byte	3,3,1,9
	.half	.L43-.L9
	.byte	0,1,1
.L125:
	.sdecl	'.debug_ranges',debug,cluster('ISR_ASCLIN_Tx')
	.sect	'.debug_ranges'
.L42:
	.word	-1,.L19,0,.L43-.L19,0,0
	.sdecl	'.debug_info',debug,cluster('.cocofun_3')
	.sect	'.debug_info'
.L44:
	.word	191
	.half	3
	.word	.L45
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\ASCLIN_LIN_Master.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\Debug\\',0,12,1
	.word	.L47,.L46
	.byte	2
	.word	.L20
	.byte	3
	.byte	'.cocofun_3',0,1,88,1,1
	.word	.L17,.L48,.L16
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('.cocofun_3')
	.sect	'.debug_abbrev'
.L45:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,0,3,8,58,15,59,15,57,15,54,15
	.byte	17,1,18,1,64,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('.cocofun_3')
	.sect	'.debug_line'
.L46:
	.word	.L145-.L144
.L144:
	.half	3
	.word	.L147-.L146
.L146:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\0_Src\\4_McHal\\Tricore\\Asclin\\Std',0,0
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\ASCLIN_LIN_Master.c',0,0,0,0
	.byte	'IfxAsclin.h',0,1,0,0,0
.L147:
	.byte	5,46,7,0,5,2
	.word	.L17
	.byte	3,218,0,1,5,57,9
	.half	.L148-.L17
	.byte	1,4,2,5,27,9
	.half	.L149-.L148
	.byte	3,203,15,1,9
	.half	.L48-.L149
	.byte	0,1,1,5,44,0,5,2
	.word	.L17
	.byte	3,232,0,1,5,55,9
	.half	.L148-.L17
	.byte	1,4,2,5,27,9
	.half	.L149-.L148
	.byte	3,231,15,1,9
	.half	.L150-.L149
	.byte	3,86,1,7,9
	.half	.L48-.L150
	.byte	0,1,1
.L145:
	.sdecl	'.debug_ranges',debug,cluster('.cocofun_3')
	.sect	'.debug_ranges'
.L47:
	.word	-1,.L17,0,.L48-.L17,0,0
	.sdecl	'.debug_info',debug,cluster('g_linMaster')
	.sect	'.debug_info'
.L49:
	.word	182
	.half	3
	.word	.L50
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\ASCLIN_LIN_Master.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\Debug\\',0,12,1,2
	.word	.L20
	.byte	3
	.byte	'g_linMaster',0,18,51,15
	.word	.L87
	.byte	1,5,3
	.word	g_linMaster
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('g_linMaster')
	.sect	'.debug_abbrev'
.L50:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('HandleID')
	.sect	'.debug_info'
.L51:
	.word	178
	.half	3
	.word	.L52
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\ASCLIN_LIN_Master.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\Debug\\',0,12,1,2
	.word	.L20
	.byte	3
	.byte	'HandleID',0,18,52,14
	.word	.L64
	.byte	5,3
	.word	HandleID
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('HandleID')
	.sect	'.debug_abbrev'
.L52:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Rx_data')
	.sect	'.debug_info'
.L53:
	.word	177
	.half	3
	.word	.L54
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\ASCLIN_LIN_Master.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\Debug\\',0,12,1,2
	.word	.L20
	.byte	3
	.byte	'Rx_data',0,18,53,14
	.word	.L88
	.byte	5,3
	.word	Rx_data
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Rx_data')
	.sect	'.debug_abbrev'
.L54:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Tx_data')
	.sect	'.debug_info'
.L55:
	.word	177
	.half	3
	.word	.L56
	.byte	4,1
	.byte	'..\\0_Src\\0_AppSw\\Tricore\\Main\\ASCLIN_LIN_Master.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'D:\\WorkSpace\\Tasking\\Tasking_TC397_Lin\\Debug\\',0,12,1,2
	.word	.L20
	.byte	3
	.byte	'Tx_data',0,18,54,14
	.word	.L88
	.byte	5,3
	.word	Tx_data
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Tx_data')
	.sect	'.debug_abbrev'
.L56:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('.cocofun_3')
	.sect	'.debug_loc'
.L16:
	.word	-1,.L17,0,.L48-.L17
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('ASCLIN_LIN_Master_Send_Message')
	.sect	'.debug_loc'
.L12:
	.word	-1,.L13,0,.L90-.L13
	.half	2
	.byte	138,0
	.word	.L90-.L13,.L63-.L13
	.half	2
	.byte	138,8
	.word	.L63-.L13,.L63-.L13
	.half	2
	.byte	138,0
	.word	0,0
.L65:
	.word	-1,.L13,0,.L63-.L13
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('ISR_ASCLIN_Rx')
	.sect	'.debug_loc'
.L14:
	.word	-1,.L15,0,.L91-.L15
	.half	2
	.byte	138,0
	.word	.L91-.L15,.L66-.L15
	.half	2
	.byte	138,8
	.word	.L66-.L15,.L66-.L15
	.half	2
	.byte	138,0
	.word	0,0
.L69:
	.word	-1,.L15,.L17-.L15,.L48-.L15
	.half	2
	.byte	145,120
	.word	0,.L66-.L15
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('ISR_ASCLIN_Tx')
	.sect	'.debug_loc'
.L18:
	.word	-1,.L19,0,.L92-.L19
	.half	2
	.byte	138,0
	.word	.L92-.L19,.L70-.L19
	.half	2
	.byte	138,8
	.word	.L70-.L19,.L70-.L19
	.half	2
	.byte	138,0
	.word	0,0
.L75:
	.word	0,0
.L83:
	.word	0,0
.L78:
	.word	-1,.L19,.L17-.L19,.L48-.L19
	.half	2
	.byte	145,120
	.word	0,.L70-.L19
	.half	2
	.byte	145,120
	.word	0,0
.L86:
	.word	-1,.L19,.L17-.L19,.L48-.L19
	.half	2
	.byte	145,120
	.word	0,.L70-.L19
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('init_ASCLIN_LIN_master')
	.sect	'.debug_loc'
.L10:
	.word	-1,.L11,0,.L89-.L11
	.half	2
	.byte	138,0
	.word	.L89-.L11,.L57-.L11
	.half	3
	.byte	138,224,0
	.word	.L57-.L11,.L57-.L11
	.half	2
	.byte	138,0
	.word	0,0
.L59:
	.word	-1,.L11,0,.L57-.L11
	.half	3
	.byte	145,160,127
	.word	0,0
.L62:
	.word	-1,.L11,0,.L57-.L11
	.half	2
	.byte	145,108
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L151:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('init_ASCLIN_LIN_master')
	.sect	'.debug_frame'
	.word	36
	.word	.L151,.L11,.L57-.L11
	.byte	4
	.word	(.L89-.L11)/2
	.byte	19,224,0,22,26,4,19,138,224,0,4
	.word	(.L57-.L89)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('ASCLIN_LIN_Master_Send_Message')
	.sect	'.debug_frame'
	.word	36
	.word	.L151,.L13,.L63-.L13
	.byte	4
	.word	(.L90-.L13)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L63-.L90)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('ISR_ASCLIN_Rx')
	.sect	'.debug_frame'
	.word	36
	.word	.L151,.L15,.L66-.L15
	.byte	4
	.word	(.L91-.L15)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L66-.L91)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('ISR_ASCLIN_Tx')
	.sect	'.debug_frame'
	.word	36
	.word	.L151,.L19,.L70-.L19
	.byte	4
	.word	(.L92-.L19)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L70-.L92)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L152:
	.word	52
	.word	-1
	.byte	3,0,2,1,40,12,26,0,9,40,27,155,0,7,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36
	.byte	8,37,8,38,8,39,0
	.sdecl	'.debug_frame',debug,cluster('.cocofun_3')
	.sect	'.debug_frame'
	.word	24
	.word	.L152,.L17,.L48-.L17
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; ..\0_Src\0_AppSw\Tricore\Main\ASCLIN_LIN_Master.c	   138  

	; Module end
